
@using RootsOfHealth.Commom;
@using RootsOfHealth.Models;
@{
    ViewBag.Title = "ReportCategories";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var reportCategoriesPerm = new Common().GetPermissionsByModuleId(Convert.ToInt32(Session["userid"]), Convert.ToInt32(PermissionModel.Module.ReportCategories));
    if (reportCategoriesPerm.Where(x => x.CanList == false && (x.CanCreate != true && x.CanUpdate != true && x.CanDelete != true)).Any())
    {
        Response.Redirect(Url.Action("Display", "Dashboard", new { }));

    }
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<style>
    .appointment table td img {
        width: 30px;
        height: 30px;
        object-fit: cover;
        border-radius: 100%;
    }

    .btn-success:hover {
        background: #35c8af;
        border: 1px solid #35c8af;
    }

    .appointment table .btn-success {
        background: #22baa0;
        border-radius: 50px;
        border: 1px solid #22baa0;
        font-size: 13px;
        font-weight: 500;
        padding: 6px 20px;
        margin-right: 5px;
        line-height: normal;
    }

    .appointment table .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        border-radius: 50px;
        border: 1px solid #dc3545;
        font-size: 13px;
        font-weight: 500;
        padding: 6px 20px;
        margin-right: 5px;
        line-height: normal;
    }

    .dataTables_wrapper.no-footer div.dataTables_scrollHead > table,
    .dataTables_wrapper.no-footer div.dataTables_scrollBody > table {
        width: 100% !important;
    }

    .appointment > .d-flex {
        flex-wrap: wrap;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 2px 10px 2px;
        display: inline-block;
        border: 0;
        font-size: 15px;
        margin: 2px 1px;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current,
        .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {
            background: #22baa0;
            border: 0;
            color: #FFF !important;
        }

    .appointment {
        overflow: auto;
    }

    @@media (max-width:767px) {
        .appointment > .d-flex .ml-auto {
            margin-left: 0 !important;
            margin: 3px 0 0;
        }

        #ddlExcelType {
            width: auto;
            margin: 2px 5px;
        }
    }

    div#CreateCategoryModal form#formAddCategory .form-group {
        display: flex;
        flex-direction: column;
        max-width: 350px;
        margin: 10px auto;
    }

        div#CreateCategoryModal form#formAddCategory .form-group label {
            width: 100%;
            padding-bottom: 10px;
            font-weight: 600;
        }

    .required:after {
        content: " *";
        color: red;
    }
    div#CreateCategoryModal .modal-dialog.modal-lg {
        top: 50%;
        transform: translate(-50%, -50%) !important;
        position: absolute;
        left: 50%;
        width: 100%;
        max-width: 400px;
        margin: 0px;
        padding: 0px 10px;
    }
        div#CreateCategoryModal .modal-dialog.modal-lg .modal-content {
            min-height: unset !important;
            padding-bottom: 10px;
        }
</style>
<section id="content" class="responsive-container pt-0">
    <div class="inner-content mt-0">
        <div class="container-fluid pl-0 pr-0">
            <div class="appointment">
                <h2 class="mhead">Reports Categories</h2>
                @if (reportCategoriesPerm.Where(x => x.CanCreate == true).Any())
                {
                    <p class="createbtn">
                        <a onclick='Editcategory(0)' class="btn btn-success mb-2" id="CreateCategory">Create Category</a>
                    </p>
                }


                <table id="tblReportsCategories" class="display table table-hover table-striped table-bordered">
                    <thead>
                        <tr class="table-active">
                            <th>Category Name</th>
                            <th>Modified By</th>
                            <th>Modified Date</th>
                            <th>Action </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</section>
<div class="modal fade" id="CreateCategoryModal" data-toggle="modal" tabindex="-1" role="dialog" aria-labelledby="CreateCategoryModal"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" style="min-height:300px">
            <div class="modal-header">
                <h5 id="modalHeaderTitle" style="margin: 0;padding: 4px 0;">Create Category</h5>
                <div class="ml-auto">
                    <button class="btn btn-success" id="SaveCategoryButton" onclick="SaveCategory()">Save</button>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>

            <div class="modal-body">



            </div>
        </div>
    </div>

</div>

@section scripts{
    <script>
        var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]';
        var loginUserId = "@Session["userid"]";
        var canUpdate = "@reportCategoriesPerm.Where(x => x.CanUpdate == true).Any()";
        var canDelete = "@reportCategoriesPerm.Where(x => x.CanDelete == true).Any()";

        $(document).ready(function () {
            BindReportsCategoriesTable();
        });



        function BindReportsCategoriesTable() {

            $("#tblReportsCategories").dataTable({
                "scrollY": 'calc(100vh - 303px)',
                "scrollX": true,
                "paging": true,
                "ordering": true,
                "filter": true,
                "destroy": true,
                "orderMulti": false,
                "serverSide": true,
                "Processing": true,
                "ajax":
                {
                    "url": "/ReportsCategory/GetAllCategories",
                    "type": "POST",
                    "dataType": "JSON"
                },
                'columnDefs': [{
                    'targets': [3],
                    'orderable': false
                }],
                "columns": [

                    { "data": "Name" },
                    { "data": "ModifiedBy" },
                    {
                        "data": "ModifiedOn",
                        "render": function (value) {

                            if (value === null) return "";

                            var pattern = /Date\(([^)]+)\)/;
                            var results = pattern.exec(value);
                            var dt = new Date(parseFloat(results[1]));
                            var time = dt.toLocaleTimeString();
                            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear() + " " + time;
                        }
                    },

                    {
                        "data": null,
                        "render": function (data) {

                            var html = "";
                            if (canUpdate =="True") {
                                html += "<a onclick='Editcategory(" + data.CategoryID + ")' class='btn btn-success label-fields'> <i class=''></i> Edit</a>";
                            }
                            if (canDelete == "True") {
                                html += '<a href="#" class="btn btn-danger" onclick="Deletecategory(' + data.CategoryID + ')">Delete</a>';
                            }

                            return html;
                        }
                    }

                ]
            });

        }

        function Editcategory(id) {
            $.ajax({
                type: "GET",
                url: '/ReportsCategory/AddCategory?Id='+id,
                dataType: "html",
                async: true,
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    $("#CreateCategoryModal .modal-body").html(result)
                    if (id > 0) {
                        modalHeaderTitle
                        $('#SaveCategoryButton').html('Update');
                        $('#modalHeaderTitle').html('Update Category');
                    }
                    else {
                        $('#SaveCategoryButton').html('Save');
                        $('#modalHeaderTitle').html('Create Category');
                    }
                    $('#CreateCategoryModal').modal('show');
                },
                error: function (e) {
                    toastr.error("Unexpected error!");
                }
            });
        }
        function SaveCategory() {

            if ($('#txtCategoryName').val() == '' || $('#txtCategoryName').val() == null) {
                toastr.error("Category Name is required.");
                return false;
            }
            var model = {
                CategoryID: $('#CategoryId').val(),
                Name: $('#txtCategoryName').val().trim(),
                Createdby: parseInt(loginUserId),
                ModifiedBy: $('#CategoryId').val() > 0 ? parseInt(loginUserId) : null
            }
            $(".loaderOverlay").show();
            $.ajax({
                type: "POST",
                url: '/ReportsCategory/AddCategory',
                data: JSON.stringify(model),
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    if (result == "0") {
                        toastr.error("unexpected error Happened");
                    }
                    else {
                        if (model.CategoryID > 0) {
                            toastr.success("", "Updated successfully", { progressBar: true });
                        }
                        else {
                            toastr.success("", "Created successfully", { progressBar: true });
                        }
                        $('#CreateCategoryModal').modal('hide');
                    }
                    $(".loaderOverlay").hide();
                    BindReportsCategoriesTable();

                }
            })
        }

        function Deletecategory(id) {
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/IsCategoryInUse?categoryId=' + id,
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        toastr.error("Category is in use.");
                    }
                    else {
                        if (confirm("Are you sure,you want to delete the category.")) {

                            $.ajax({
                                type: "POST",
                                url: Apipath + '/api/PatientMain/DeleteReportCategory?Id=' + id,
                                contentType: 'application/json; charset=UTF-8',
                                dataType: "json",
                                success: function (result) {
                                    if (result != '') {
                                        BindReportsCategoriesTable();
                                        toastr.success("category deleted successfully");
                                    }
                                    else {
                                        toastr.error("Error while Deleting data");
                                    }
                                },
                                error: function () {

                                    toastr.error("Error while deleting data");
                                }
                            });
                        }
                    }
                },
                error: function () {

                    toastr.error("Error while deleting data");
                }
            });
            
        }
    </script>
}