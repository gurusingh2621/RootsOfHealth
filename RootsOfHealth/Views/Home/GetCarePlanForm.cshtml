@{
    ViewBag.Title = "Care Plan";
}
<style>
    .renderform {
        width: 100%;
        display: flex;
        align-items: flex-start;
        flex-wrap: wrap;
        padding: 10px 0;
        align-content: baseline;
    }
</style>
<section id="content" class="responsive-container pt-0">

    <div class="inner-content mt-0">

        <div class="container-fluid pl-0 pr-0">

            <div class="appointment scroll">
                <h2>Care Plan</h2>
                <div class="renderform">

                </div>
                <input type="button" id="button9" onclick="saveTemplateField()" class="btn btn-primary" value="Submit" />
            </div>
        </div>
    </div>
</section>
<input hidden="hidden" type="text" id="templateid" value="0" />
@section scripts{
    <script>
         var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]';
        var ItemNames;
        var tableName;
        function GetDropDownName() {
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/GetLookUpFieldOption',
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    ItemNames = result;
                },
            });
        }
        $(function () {
            GetDropDownName();
            GetForm('@ViewBag.TemplateId');
        })

        function GetForm(ID) {
            $.ajax({
                type: "GET",
                url: '/Home/GetFormHtml?Id='+ID,
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    tableName = result.tableName;
                    console.log(tableName);
                    $(".renderform").html(result.html);
                    $(".renderform .event-btn-right").remove();
                    $('.renderform textarea').bind('copy paste cut',function(e) {
    e.preventDefault();
  });
                    $('.renderform textarea').keypress(function (e) {
    var regex = new RegExp("^[a-zA-Z0-9]+$");
    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
    if (regex.test(str)) {
        return true;
    }

    e.preventDefault();
    return false;
});
                    //$(".renderform .form-group").next().remove();
                    //$(".renderform .form-group").next().remove();
                    //$(".renderform .form-group").next().remove();
                    //$(".renderform .form-group").parent().removeClass().addClass("dragresize");
                    if ($(".renderform  [readonly=readonly]").length) {
                        $.ajax({
                            type: "GET",
                            url: Apipath + '/api/PatientMain/GetDetailOfPatient?patientid='+'@ViewBag.PatientID',
                            contentType: 'application/json; charset=UTF-8',
                            dataType: "json",
                            success: function (result) {
                                console.log(ItemNames);
                                $(".renderform  [readonly=readonly]").each(function (i, e) {
                                    var key = $(this).attr("id").substring(0, $(this).attr("id").lastIndexOf("_"));
                                    var Index = $(this).attr("data-index");
                                    if (Object.keys(result)[0].length && Index != "PatientScore") {
                                        var keyValue = result.PatientDetail[Index][key];
                                        switch (Index) {
                                            case "PatientMain":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientHousing":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PlaceLiveNow") {

                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 1 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "EmergencyShelter") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 2 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientFinancialSecurity":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DifficultiesInPayingBills") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 3 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "SkipMeals") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 4 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientEmploymentEducation":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "LevelofEducation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 5 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "WorkSituation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 6 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ParticipatingInEducationalOrTrainingProgram") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 7 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientCommunicationAndMobility":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DifficultyGoingPlaces") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 8 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ModesOfTransportation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 9 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientHealthcare":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PastMonthPoorPhysicalHealth") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 13 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "YourHealthIs") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 12 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PerWeekStrenuousExercise") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 14 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PerDayStrenuousExercise") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 15 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PastYearEmergency") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 16 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientSocialSupport":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "FinancialSecurity") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 19 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FeelSafeNeighborhood") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 42 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PlaceToStay") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 20 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientLegalStatus":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "Dast":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "Audit":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DrinkContainingAlcohol") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 25 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "HowManyDrinks") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 26 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "NotAbleToStopDrinking") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 28 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    if (key == "FailedWhatWasExpected") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 29 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "SixOrMoreDrink") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 27 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FirstDrinkMorning") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 30 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    if (key == "FeelingOfGuilt") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 31 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "UnableToRemember") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 32 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "InjuredOfYourDrinking") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 33 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FriendsSuggestedYouCutDown") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 34 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PHQ9":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;

                                            case "PatientMentalHealth":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;

                                            case "PatientFoodAccess":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PortionsOfVegetables") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 36 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ServingsOfFruit") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 35 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "MajorityOfFood") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 37 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                        }
                                    }
                                    if (Object.keys(result)[1].length && Index == "PatientScore") {
                                        if (result.PatientScore.hasOwnProperty(key)) {
                                            $(this).val(result.PatientScore[key]);
                                        }
                                    }
                                });

                            },
                        });
                    }
                }
            }).done(function () {
                $.ajax({
                    type: "GET",
                    url: Apipath+'/api/PatientMain/GetCarePlanTemplateValueByID?TemplateID=' + ID,
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    success: function (result) {
                        console.log(result[0]);
                        $("#templateid").val(result[0].ID);
                            $(".renderform [type=text],[type=number],[type=file],[type=date]").each(function (i, e) {
                                this.value = result[0][ $(this).attr("data-column")];
                            });

                        $(".renderform select").each(function (i, e) {
                            this.value = result[0][$(this).attr("data-column")];
                        });
                        $(".renderform [type=radio],[type=checkbox]").each(function (i, e) {
                            if (this.value == result[0][$(this).attr("data-column")]) {
                                $(this).prop("checked", true);
                            }
                        });
                        $(".renderform  textarea").each(function (i, e) {
                            this.value = result[0][$(this).attr("data-column")];
                        });

                        }
                }).done(function () {
                    if ($(".renderform  [readonly=readonly]").length) {
                        $.ajax({
                            type: "GET",
                            url: Apipath + '/api/PatientMain/GetDetailOfPatient?patientid='+'@ViewBag.PatientID',
                            contentType: 'application/json; charset=UTF-8',
                            dataType: "json",
                            success: function (result) {
                                $(".renderform  [readonly=readonly]").each(function (i, e) {
                                    var key = $(this).attr("id").substring(0, $(this).attr("id").lastIndexOf("_"));
                                    var Index = $(this).attr("data-index");
                                    if (Object.keys(result)[0].length && Index != "PatientScore") {
                                        var keyValue = result.PatientDetail[Index][key];
                                        switch (Index) {
                                            case "PatientMain":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientHousing":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PlaceLiveNow") {

                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 1 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "EmergencyShelter") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 2 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientFinancialSecurity":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DifficultiesInPayingBills") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 3 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "SkipMeals") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 4 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientEmploymentEducation":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "LevelofEducation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 5 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "WorkSituation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 6 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ParticipatingInEducationalOrTrainingProgram") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 7 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientCommunicationAndMobility":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DifficultyGoingPlaces") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 8 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ModesOfTransportation") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 9 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientHealthcare":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PastMonthPoorPhysicalHealth") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 13 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "YourHealthIs") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 12 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PerWeekStrenuousExercise") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 14 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PerDayStrenuousExercise") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 15 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PastYearEmergency") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 16 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientSocialSupport":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "FinancialSecurity") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 19 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FeelSafeNeighborhood") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 42 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "PlaceToStay") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 20 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PatientLegalStatus":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "Dast":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "Audit":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "DrinkContainingAlcohol") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 25 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "HowManyDrinks") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 26 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "NotAbleToStopDrinking") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 28 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    if (key == "FailedWhatWasExpected") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 29 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "SixOrMoreDrink") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 27 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FirstDrinkMorning") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 30 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    if (key == "FeelingOfGuilt") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 31 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "UnableToRemember") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 32 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "InjuredOfYourDrinking") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 33 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "FriendsSuggestedYouCutDown") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 34 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                            case "PHQ9":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;

                                            case "PatientMentalHealth":
                                                if (result.PatientDetail[Index].hasOwnProperty(key)) {
                                                    this.value = keyValue;
                                                }
                                                break;

                                            case "PatientFoodAccess":
                                                if (result.PatientDetail[Index].hasOwnProperty(key) && ItemNames.length) {
                                                    if (key == "PortionsOfVegetables") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 36 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "ServingsOfFruit") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 35 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    } else if (key == "MajorityOfFood") {
                                                        keyValue = ItemNames.find(x => x.LookUpFieldID == 37 && x.IsDeleted == false && x.ID == keyValue).OptionName;
                                                    }
                                                    this.value = keyValue;
                                                }
                                                break;
                                        }
                                    }
                                    if (Object.keys(result)[1].length && Index == "PatientScore") {
                                        if (result.PatientScore.hasOwnProperty(key)) {
                                            $(this).val(result.PatientScore[key]);
                                        }
                                    }
                                });

                            },
                        });
                    }
                })
                });
        }

        function saveTemplateField() {
            var models = [];
            models.push({ TableName: tableName, ColoumnName: 'PatientID', FieldValue:'@ViewBag.PatientID'  });
            models.push({ TableName: tableName, ColoumnName: 'TemplateID', FieldValue: '@ViewBag.TemplateId' });
            var TableName= tableName;
            var colstr = '';
            var valstr = '';
            if ($(".renderform [type=text],[type=number],[type=file],[type=date]").val() == "") {
                toastr.error("all field are required.");
                return;
            }

            $(".renderform [type=text],[type=number],[type=file],[type=date]").each(function (i, e) {
                models.push({ TableName:tableName,ColoumnName:$(this).attr("data-column"), FieldValue: $(this).val() });

            });
            $(".renderform select").each(function (i, e) {
                models.push({ TableName:tableName,ColoumnName:$(this).attr("data-column"), FieldValue: $(this).val() });
              });
            $(".renderform [type=checkbox],.renderform [type=radio]").each(function (i, e) {
                if ($(this).prop("checked")) {
                    models.push({ TableName:tableName,ColoumnName:$(this).attr("data-column"), FieldValue: $(this).val() });
                }
                });
              $(".renderform textarea").each(function (i, e) {
                 models.push({ TableName:tableName,ColoumnName:$(this).attr("data-column"), FieldValue: $(this).val() });
              });
            if (parseInt($("#templateid").val()) > 0) {
                for (var j = 0; j < models.length; j++) {
                     colstr += models[j].ColoumnName +  '='+'\''+models[j].FieldValue+'\''+',';
                }
                colstr = colstr.slice(0, -1);
            } else {
                for (var j = 0; j < models.length; j++) {

                    colstr += models[j].ColoumnName +',';
                    valstr += models[j].FieldValue + ',';

                }
                colstr = colstr.slice(0, -1);
                valstr = valstr.slice(0, -1);
            }
            var model = {
                TableName: tableName,
                ColoumnNames: colstr,
                FieldValues: valstr,
                ID:$("#templateid").val()
            }
             $.ajax({
                type: "POST",
                url: Apipath + '/api/PatientMain/savecareplantemplatevalue',
                data: JSON.stringify(model),
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    if (result != '') {
                        toastr.success("Field saved successfully");

                    }
                    else {
                        toastr.error("Error while adding field");
                    }
                },
                error: function () {

                    toastr.error("Error while adding field");
                }
            });
        }
    </script>
}