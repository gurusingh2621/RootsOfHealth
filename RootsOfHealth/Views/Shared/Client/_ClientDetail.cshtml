@model RootsOfHealth.Models.PatientDetailBO



@{
    Html.RenderPartial("~/Views/Shared/Patient/_PatientMain.cshtml", Model.PatientMain);
}


    

    <ul class="nav nav-tabs" style="display:none;" id="myChildTab" role="tablist">
        
    </ul>

    @if (Model.ClientForm != null)
    {

        foreach (var item in Model.ClientForm)
        {
            var FormName = item.FormName.Replace(" ", "");
            <div class="tab-pane fade" id="@(FormName + "only")" role="tabpanel" aria-labelledby="@("a"+FormName)">
                <div class="inner-content">
                    <div class="paitent-detail">
                        <div class="row">
                            <div id="pat_out_div" class="col-lg-12 col-md-12 col-sm-12 col-12">
                                <div class="paitent-detail-left">
                                    <div class="detail-heading d-flex">
                                        @foreach (var items in Model.ClientForm.Where(p=>p.ClientFormID==item.ParentFormID))
                                        {
                                        string FormNames = @items.FormName.Replace(" ", "");
                                            <a id="@("a" + FormNames)" class="nav-link" data-toggle="tab"
                                               href="@("#" + FormNames + "only")" data-ClientFormID="@items.ClientFormID" data-PatientID="@items.patientID" onclick="loadClient(this)" data-TemplateID="@items.TemplateID" data-FormName=@(FormNames)>@items.FormName >> <span class="check @Html.Raw(items.Saved ? "" : "d-none")"></span></a>
                                        }
                                        <h2 style="padding-top:10px">@item.FormName</h2>
                                        <div class="detail-button ml-auto">

                                            <a href="javascript:{}" onclick="return saveProgramBasicInfo('@item.TemplateID','@item.TemplateTable',@item.ClientFormID,@item.patientID);" data-save="@(item.Saved ? "True" : "False")" class="btn btn-success ml-auto btnprogramsave">
                                                <i class="far fa-save"></i>
                                                Save
                                            </a>
                                            <a href="javascript:{}" onclick="ActivateTab(@ViewBag.PatientID,'','@FormName',@item.ClientFormID)"
                                               class="btn btn-success label-fields btnProgramEdit">
                                                <i class="far fa-edit"></i>
                                                Edit
                                            </a>
                                            <a href="javascript:{}" onclick="PrintProgram('@FormName')"
                                               class="btn btn-success label-fields btnprogramPrint">
                                                <i class="far fa-save"></i>
                                                Print
                                            </a>
                                        </div>
                                    </div>

                                    <div class="SidebarScroll scroll inner-main-content">
                                        <style>
                                            ul.file_uploaded_list li img {
                                                max-width: 90px;
                                                margin-right: 10px;
                                            }
                                        </style>
                                        <div id="@(FormName + "render-basicform")" class="render-basicProgramform" style="padding-bottom:100px"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

    }


    <!-- Programs Tab start here  -->

    @{
        Html.RenderPartial("~/Views/Shared/Patient/_PatientPrograms.cshtml", Model.Programs);
    }

    <!-- Programs Tab end here  -->


    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote-lite.min.css" rel="stylesheet">
    @*<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>*@
    @*<script src="~/Scripts/jquery-ui.min.js"></script>*@
    <script>
   var  programUploadedPath="@System.Web.Configuration.WebConfigurationManager.AppSettings["ProgramUploadPath"]";
    var _userID = "@Session["userid"]";
        var _patientID = '@ViewBag.PatientId';
    var programName = '';
    var formName = '';
    var programElement = '';
    var clinicAddress = "";
    var _ClinicId = "@Model.PatientMain.ClinicID"
    var _amdMedRecordNo = '@Model.PatientMain.AmdMedicalRecordNumber';
    var clientMiddleName = '@Model.PatientMain.MiddleName';
     var clientName = '@Model.PatientMain.FirstName'+" "+'@Model.PatientMain.LastName'
    if (clientMiddleName.trim().length > 0) {
        clientName = '@Model.PatientMain.FirstName' + " " + clientMiddleName+" "+'@Model.PatientMain.LastName'
      }
        var _dateOfBirth = '@Model.PatientMain.DateOfBirth'
        
        $('#btnaddprogram').addClass('d-none')



    $('#datepicker').datepicker({
                uiLibrary: 'bootstrap'
    })
    $("#opennotepopup").click(function () {
        $("#ddlProgramType").closest("div").show();
                    notescloseModel();
                });
                function notescloseModel() {

        $("#ddlProgramType").val(0);

        $("#txtNotes1").val('');
        $('.tmpdiv').find('input, textarea')
            .each(function () {
                $(this).val('');
                    });
        $(".tmpdiv").html('');
        $(".close").click();
            }
    $(".close").click(function () {
        $("#noteshdnID").val(0);
        $("#ddlProgramType").val(0);
        $("#ddlProgramType").removeAttr("hidden");
        $("#txtNotes1").val('');
        $('.tmpdiv').find('input, textarea')
            .each(function () {
                $(this).val('');
                });
        $(".tmpdiv").html('');
            });

    $.date = function (dateObject) {
                var d = new Date(dateObject);
                var day = d.getDate();
                var month = d.getMonth() + 1;
                var year = d.getFullYear();
                if (day < 10) {
                    day = "0" + day;
                }
                if (month < 10) {
                    month = "0" + month;
                }
                var date = day + "/" + month + "/" + year;

                return date;
            };
    $("#hideAppointmentContent").click(function (e) {
        $("#appointementContent").hide();
        $('#pat_out_div').addClass('col-lg-12 col-md-12 col-sm-12 col-12');
        $('#pat_out_div').removeClass('col-lg-8 col-md-12 col-sm-12 col-12 pr-0');
                e.preventDefault();
            });
    $("#hideNoteContent").click(function (e) {
        $(".appointement-notes").hide();
        $('#pat_out_div').addClass('col-lg-12 col-md-12 col-sm-12 col-12');
        $('#pat_out_div').removeClass('col-lg-8 col-md-12 col-sm-12 col-12 pr-0');
                e.preventDefault();
            });
    $("#btnPatientAppointments").click(function (e) {
        $("#appointementContent").show();
        $(".appointement-notes").hide();
        $('#pat_out_div').removeClass('col-lg-12 col-md-12 col-sm-12 col-12');
        $('#pat_out_div').addClass('col-lg-8 col-md-12 col-sm-12 col-12 pr-0');
                e.preventDefault();
            });
    $("#btnPatientNotes").click(function (e) {
        $("#appointementContent").hide();
        $(".appointement-notes").show();
        $('#pat_out_div').removeClass('col-lg-12 col-md-12 col-sm-12 col-12');
        $('#pat_out_div').addClass('col-lg-8 col-md-12 col-sm-12 col-12 pr-0');
                e.preventDefault();
            });
    function ShowMore(id) {

                var $this = $("#"+id);
                var $content = $this.parent().prev("p.content");
                var linkText = $this.text();

                if (linkText === "read more") {
                    linkText = "Show less";
            $content.switchClass("hideContent", "showContent", 400);
                } else {
                    linkText = "read more";
            $content.switchClass("showContent", "hideContent", 400);
                };

        $this.text(linkText);

            }

            //--get list of appointment by Patient ID
            function getListAllAppointments() {


                var data = {
            PatientID: '@ViewBag.PatientId',
            startdate: '@DateTime.Now.ToString("yyyy-MM-dd")',
            enddate: '@DateTime.Now.AddDays(7).ToString("yyyy-MM-dd")'
                };

        $.ajax({
            type: "GET",
            url: Apipath + '/api/PatientMain/GetListPatientAppointmentByPatientId',
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#hdnCurrentDate").val(data.CurrentDate);
                    if (data.Data.length) {
                        var result = data.Data;
                        var tbl = '';
                        for (var i = 0; i < result.length; i++) {

                            tbl += '<div class="appointement-row">'
                            tbl += '<div class="calender-img" >'
                            tbl += '<img src="/images/calender-icon.png" alt=""></div>'
                            tbl += '<h6>'
                            tbl += '<span class="date">Date:' + $.date(result[i].AppointmentDate) + '</span>,'
                            tbl += '<span class="time">'
                            tbl += ' Time:' + result[i].AppointmentTime + '</span></h6>'
                            tbl += '<p class="content hideContent">' + result[i].Notes + '</p > <div class="show-more">'
                            if (result[i].Notes.length>100) {
                                tbl += '<a href="#!" id="'+result[i].PatientAppointmentID+'" onclick="ShowMore(' + result[i].PatientAppointmentID + ')" class="btn btn-link" >read more</a>' }
                            tbl += '</div ></div>'

                    }

                    $('#appointementlst').html(tbl);

                    } else {
                    $("#loadMore").hide();
                    }


                },
            error: function (e) {
                    toastr.error("Error while getting appotment data.");
                }
            });
    }

        function getListAllAppointmentsLoadMore() {

            var data = {
            PatientID: '@ViewBag.PatientId',
            startdate: $("#hdnCurrentDate").val(),
            enddate: $("#hdnCurrentDate").val()
            };

        $.ajax({
        type: "GET",
            url: Apipath + '/api/PatientMain/GetListPatientAppointmentByPatientId',
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                if (data.Data.length) {
                    $("#hdnCurrentDate").val(data.CurrentDate);
                    var result = data.Data;
                    var tbl = '';
                    for (var i = 0; i < result.length; i++) {

                        tbl += '<div class="appointement-row">'
                        tbl += '<div class="calender-img" >'
                        tbl += '<img src="/images/calender-icon.png" alt=""></div>'
                        tbl += '<h6>'
                        tbl += '<span class="date">Date:' + $.date(result[i].AppointmentDate) + '</span>,'
                        tbl += '<span class="time">'
                        tbl += ' Time:' + result[i].AppointmentTime + '</span></h6>'
                        tbl += '<p class="content hideContent">' + result[i].Notes + '</p > <div class="show-more">'
                        if (result[i].Notes.length>100) {
                            tbl += '<a href="#!" id="' + result[i].PatientAppointmentID + '" onclick="ShowMore(' + result[i].PatientAppointmentID + ')" class="btn btn-link" >read more</a>'
                        }
                        tbl += '</div ></div>'

                    }
                    var newappointment = $('#appointementlst').html();
                    $('#appointementlst').html(newappointment + tbl);
                    $("#appointementlst").animate({ scrollTop: $('#appointementlst').prop("scrollHeight") }, 1000);

                } else {
                    $("#loadMore").hide();
                }


            },
            error: function (e) {
                toastr.error("Error while getting appotment data.");
            }
        });
    }



    function notesSave() {

        if ($.trim($("#txtNotes1").val()) == "") {
            toastr.error("Description is required.");
            return;
        }
        var data = {
            NotesID: $("#noteshdnID").val(),
            Description: $.trim($("#txtNotes1").val()),
            PatientID: '@ViewBag.PatientId',
            CreatedBy: parseInt(@Session["userid"].ToString()),
            ModifiedBy: parseInt(@Session["userid"].ToString())
        };
        $.ajax({
    type: "POST",
            url: Apipath + '/api/PatientMain/savenotes',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=UTF-8',
            dataType: "json",
            success: function (result) {

                $("#txtNotes1").val('');

        },
            complete: function (result) {

            var models = [];
                $('.tmpdiv').find('.getValue')
                    .each(function () {
                var b = { ID: $(this).attr('data-fieldvlueid'), NotesTemplateFieldID: $(this).attr('data-id'), NoteID: result.responseJSON, Value: $(this).val() };
            models.push(b);
        });

        if (models.length == 0) {
                    $(".close").click();
            getListAllNotesLoadMore();
            return
                };
                $.ajax({
        type: "POST",
                    url: Apipath + '/api/PatientMain/SaveNotesTemplateFieldValue',
                    data: JSON.stringify(models),
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    success: function (result) {
                        $(".close").click();
                getListAllNotesLoadMore();
            }
        })

            }

        });
    }

    function getListAllNotesLoadMore() {

        var data = {
            PatientID: '@ViewBag.PatientId',
        };

        $.ajax({
    type: "GET",
            url: Apipath + '/api/PatientMain/GetListPatientnotesbyid',
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $('#notesList').html('');
            if (result.length) {


                var tbl = '';
                for (var i = 0; i < result.length; i++) {

                    var splitDateTime = result[i].CreatedDate.split("T");

                    tbl += '<div class="appointement-row">'
                        tbl += '<div class="notesclose" hidden="hidden" >&#10539;</div>'
                        tbl += '<div class="calender-img" >'
                        tbl += '<img src="/images/calender-icon.png" alt=""></div>'
                        tbl += '<h6>'
                        tbl += '<span class="date">Date:' + $.date(splitDateTime[0]) + '</span>,'
                        tbl += '<span class="time">'
                        tbl += ' Time:' + splitDateTime[1].substring(0,splitDateTime[1].lastIndexOf(':')); + '</span></h6>'
                        tbl += '<p class="content hideContent">' + result[i].Description + '</p> <div class="show-more">'
                        if (result[i].Description.length>100) {
                        tbl += '<a href="#!" id="' + result[i].NotesID + '" onclick="ShowMore(' + result[i].NotesID + ')" class="btn btn-link" >read more</a>' }
                    tbl += '</div ><div class="editicons"><button onclick="EditNote(' + result[i].NotesID + ')"><i class="fas fa-edit"></i></button> <button  onclick="ViewNote(' + result[i].NotesID + ')"><i class="fa fa-eye" aria-hidden="true"></i></button> <button onclick="RemoveNote(' + result[i].NotesID + ')"><i class="far fa-trash-alt"></i></button></div></div>'

                    }

                    $('#notesList').html(tbl);

                    $("#notesList").animate({ scrollDown: $('#notesList').prop("scrollHeight") }, 1000);

            }


        },
            error: function (e) {
            toastr.error("Error while getting appotment data.");
        }
    });
    }


    function EditNote(id) {
                    $.ajax({
        type: "GET",
                        url: Apipath + '/api/PatientMain/EditNoteByID?noteid='+id,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        success: function (result) {
                            $("#opennotepopup").click();
                            $("#noteshdnID").val(result.NotesID);
                            $("#txtNotes1").val(result.Description);

            },
                        complete: function () {
                            $.ajax({
                type: "GET",
                                url: Apipath + '/api/PatientMain/EditNotesTemplateFieldValueByNoteID?noteid=' + id,
                                contentType: 'application/json; charset=UTF-8',
                                dataType: "json",
                                success: function (result) {
                                    $(".tmpdiv").html('');
                        if (result.length) {

                            for (var i = 0; i < result.length; i++) {
                                switch (result[i].FieldType) {
                                    case "Text":
                                                    $(".tmpdiv").append('<div class="form-group">' +
                                                        '<label>' + result[i].Field + '</label>' +
                                                        '<input type="text" class="form-control txtField getValue" data-id=' + result[i].NotesTemplateFieldID + ' data-fieldvlueid=' + result[i].ID + ' value=' + result[i].Value + '>' +
                                                        '</div>'
                                                    )
                                                    break;
                                    case "Number":
                                                    $(".tmpdiv").append('<div class="form-group">' +
                                                        '<label>' + result[i].Field + '</label>' +
                                                        '<input type="number" class="form-control txtField getValue" data-id=' + result[i].NotesTemplateFieldID + ' data-fieldvlueid=' + result[i].ID + ' value=' + result[i].Value + '>' +
                                                        '</div>'
                                                    )
                                                    break;
                                    case "Date":
                                                    $(".tmpdiv").append('<div class="form-group">' +
                                                        '<label>' + result[i].Field + '</label>' +
                                                        '<input type="text" class="form-control datepick getValue" data-id=' + result[i].NotesTemplateFieldID + '  data-fieldvlueid=' + result[i].ID + ' value=' + result[i].Value + '>' +
                                                        '</div>'
                                                    )
                                                    break;
                                    case "Large text":
                                                    $(".tmpdiv").append('<div class="form-group">' +
                                                        '<label>' + result[i].Field + '</label>' +
                                                        '<textarea cols="10" rows="2" style="height:38px !important" class="form-control getValue" data-id=' + result[i].NotesTemplateFieldID + '  data-fieldvlueid=' + result[i].ID + '>' + result[i].Value+'</textarea>' +
                                                        '</div>'
                                                    )
                                                    break;
                                }



                            }

                                        $(".tmpdiv").find('.datepick').datepicker();
                                        $("#ddlProgramType").closest("div").hide();
                        }
                    }
                })
                        },
                        error: function () {

                toastr.error("Error while edit note");
            }
        });
    }
    function ViewNote(id) {
        $.ajax({
        type: "GET",
            url: Apipath + '/api/PatientMain/EditNoteByID?noteid=' + id,
            contentType: 'application/json; charset=UTF-8',
            dataType: "json",
            success: function (result) {
                $("#txtNotesReadonly1").html(result.Description);

                $("#opennotepopupreadonly").click();
            },
            complete: function () {
                $.ajax({
                type: "GET",
                    url: Apipath + '/api/PatientMain/EditNotesTemplateFieldValueByNoteID?noteid=' + id,
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    success: function (result) {
                        $(".tmpdivreadonly").html('');
                        if (result.length) {

                            for (var i = 0; i < result.length; i++) {
                                switch (result[i].FieldType) {
                                    case "Text":
                                        $(".tmpdivreadonly").append('<div class="form-group">' +
                                            '<label>' + result[i].Field + '</label>' +
                                            '<label>' + result[i].Value +'</label>' +
                                            '</div>'
                                        )
                                        break;
                                    case "Number":
                                        $(".tmpdivreadonly").append('<div class="form-group">' +
                                            '<label>' + result[i].Field + '</label>' +
                                            '<label>' + result[i].Value + '</label>' +
                                            '</div>'
                                        )
                                        break;
                                    case "Date":
                                        $(".tmpdivreadonly").append('<div class="form-group">' +
                                            '<label>' + result[i].Field + '</label>' +
                                            '<label>' + result[i].Value + '</label>' +
                                            '</div>'
                                        )
                                        break;
                                    case "Large text":
                                        $(".tmpdivreadonly").append('<div class="form-group">' +
                                            '<label>' + result[i].Field + '</label>' +
                                            '<label>' + result[i].Value + '</label>' +
                                            '</div>'
                                        )
                                        break;
                                }



                            }


                        }
                    }
                })
            },
            error: function () {

                toastr.error("Error while edit note");
            }
        });
    }
    function RemoveNote(id) {

        if (confirm("Are you sure,you want to delete.")) {

            var model = {
                        noteid: id,
                        modifyby:@Session["userid"].ToString(),
                        modifydate:'@DateTime.Now.ToString("yyyy-MM-dd")'
                    };
                    $.ajax({
        type: "POST",
                        url: Apipath + '/api/PatientMain/removenote',
                        data: JSON.stringify(model),
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        success: function (result) {
                toastr.success("delete successfully");
                getListAllNotesLoadMore();

            },
                        error: function () {

                toastr.error("Error while deleting data");
            }
        });
    }
    }

    function GetFieldsByProgramID() {

        var id = $("#ddlProgramType").val();
        $.ajax({
        type: "GET",
            url: Apipath + '/api/PatientMain/GetNotesTemplateByProgramID?programid=' + id,
            contentType: 'application/json; charset=UTF-8',
            dataType: "json",
            success: function (result) {
                $(".tmpdiv").html('');
                if (result.length) {

                    for (var i = 0; i < result.length; i++) {
                        switch (result[i].FieldType) {
                            case "Text":
                                $(".tmpdiv").append('<div class="form-group">' +
                                    '<label>' + result[i].Field + '</label>' +
                                    '<input type="text" class="form-control txtField getValue" data-id='+result[i].NotesTemplateFieldID+' data-fieldvlueid=' + 0 + '>'+
                                    '</div>'
                                )
                                break;
                            case "Number":
                                $(".tmpdiv").append('<div class="form-group">' +
                                    '<label>' + result[i].Field + '</label>' +
                                    '<input type="number" class="form-control txtField getValue" data-id=' + result[i].NotesTemplateFieldID + ' data-fieldvlueid=' + 0 + '>' +
                                    '</div>'
                                )
                                break;
                            case "Date":
                                $(".tmpdiv").append('<div class="form-group">' +
                                    '<label>' + result[i].Field + '</label>' +
                                    '<input type="text" class="form-control datepick getValue" data-id=' + result[i].NotesTemplateFieldID + ' data-fieldvlueid=' + 0 + '>' +
                                    '</div>'
                                )
                                break;
                            case "Large text":
                                $(".tmpdiv").append('<div class="form-group">' +
                                    '<label>' + result[i].Field + '</label>' +
                                    '<textarea cols="10" rows="2" style="height:38px !important" class="form-control getValue" data-id=' + result[i].NotesTemplateFieldID + ' data-fieldvlueid=' + 0 + '></textarea>' +
                                    '</div>'
                                )
                                break;
                        }



                    }



                }
                //else {

                //    $(".tmpdiv").append('<div class="form-group">' +
                //        '<label>Description</label>' +
                //        '<textarea cols="10" id="txtNotes1" rows="5" class="form-control"></textarea>' +
                //        '</div>'
                //    )
                //}
                $(".tmpdiv").find('.datepick').datepicker();

            },
            error: function () {

                toastr.error("Error while Getting field");
            }
        });
    }






      $(document).ready(function () {
          //notification changes start here--------------------
          
          console.log('1 hide controls');
          $('#Programs-tab').click(function () {

            if ($("#tabPills .nav-item").length > 0) {

                var FirstTab = $("#tabPills .nav-item a").get(0);

                FirstTab.click()
          }
        })


          @if (Model.ScheduleDate.IsHousingDue=="Red")
        {
            @: $("#HouNot").attr('class', 'notCountR');
            @: $("#Housing-tab").css('border-left', '5px solid #a53333');
            @: $("#HouNot").show();
            @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);

            if (Model.ScheduleDate.HousingNotification == "0")
            {
        @: $("#HouNot").attr('title', 'Due date isToday.');
             }
            else
            {
        @: $("#HouNot").attr('title', 'Due ' +@Model.ScheduleDate.HousingNotification+' days ago');
             }
        }

        else if(Model.ScheduleDate.IsHousingDue == "Orange")
        {
        @: $("#HouNot").attr('class', 'notCountO');
        @: $("#Housing-tab").css('border-left', '5px solid #e4854d');
        @: $("#HouNot").show();
        @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);
        @: $("#HouNot").attr('title','Due after ' + @Model.ScheduleDate.HousingNotification+' days.');

         }
        else if(Model.ScheduleDate.IsHousingDue == "Green")
        {
        @: $("#HouNot").attr('class', 'notCountG');
        @: $("#Housing-tab").css('border-left', '5px solid #0aa22d');
        @: $("#HouNot").show();
        @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);
        @: $("#HouNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HousingNotification+' days.');

        }






          @if (Model.ScheduleDate.IsFinancialDue== "Red")
          {
            @: $("#FincNot").attr('class', 'notCountR');
            @: $("#Financial-tab").css('border-left', '5px solid #a53333');
            @: $("#FincNot").show();
            @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);

              if (Model.ScheduleDate.FinancialNotification == "0")
              {
                   @: $("#FincNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#FincNot").attr('title', 'Due ' +@Model.ScheduleDate.FinancialNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsFinancialDue == "Orange")
        {
        @: $("#FincNot").attr('class', 'notCountO');
        @: $("#Financial-tab").css('border-left', '5px solid #e4854d');
        @: $("#FincNot").show();
        @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);
        @: $("#FincNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FinancialNotification+' days.');

        }
        else if(Model.ScheduleDate.IsFinancialDue == "Green")
        {
        @: $("#FincNot").attr('class', 'notCountG');
        @: $("#Financial-tab").css('border-left', '5px solid #0aa22d');
        @: $("#FincNot").show();
        @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);
        @: $("#FincNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FinancialNotification+' days.');

        }



           @if (Model.ScheduleDate.IsEmploymentDue== "Red")
           {
            @: $("#EmpNot").attr('class', 'notCountR');
            @: $("#Employment-tab").css('border-left', '5px solid #a53333');
            @: $("#EmpNot").show();
            @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);

              if (Model.ScheduleDate.EmploymentNotification == "0")
              {
                   @: $("#EmpNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#EmpNot").attr('title', 'Due ' +@Model.ScheduleDate.EmploymentNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsEmploymentDue == "Orange")
        {
        @: $("#EmpNot").attr('class', 'notCountO');
        @: $("#Employment-tab").css('border-left', '5px solid #e4854d');
        @: $("#EmpNot").show();
        @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);
        @: $("#EmpNot").attr('title', 'Due after ' +  @Model.ScheduleDate.EmploymentNotification+' days.');

        }
        else if(Model.ScheduleDate.IsEmploymentDue == "Green")
        {
        @: $("#EmpNot").attr('class', 'notCountG');
        @: $("#Employment-tab").css('border-left', '5px solid #0aa22d');
        @: $("#EmpNot").show();
        @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);
        @: $("#EmpNot").attr('title', 'Due after ' +  @Model.ScheduleDate.EmploymentNotification+' days.');

        }

          console.log('2 hide controls');

     @if (Model.ScheduleDate.IsCommunicationDue == "Red")
      {
            @: $("#CommNot").attr('class', 'notCountR');
            @: $("#Communication-tab").css('border-left', '5px solid #a53333');
            @: $("#CommNot").show();
            @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);

              if (Model.ScheduleDate.CommunicationNotification == "0")
              {
                   @: $("#CommNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#CommNot").attr('title', 'Due ' +@Model.ScheduleDate.CommunicationNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsCommunicationDue == "Orange")
        {
        @: $("#CommNot").attr('class', 'notCountO');
        @: $("#Communication-tab").css('border-left', '5px solid #e4854d');
        @: $("#CommNot").show();
        @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);
        @: $("#CommNot").attr('title', 'Due after ' +  @Model.ScheduleDate.CommunicationNotification+' days.');

        }
        else if(Model.ScheduleDate.IsCommunicationDue == "Green")
        {
        @: $("#CommNot").attr('class', 'notCountG');
        @: $("#Communication-tab").css('border-left', '5px solid #0aa22d');
        @: $("#CommNot").show();
        @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);
        @: $("#CommNot").attr('title', 'Due after ' +  @Model.ScheduleDate.CommunicationNotification+' days.');

        }




       @if (Model.ScheduleDate.IsHealthcareDue == "Red")
      {
            @: $("#HealthNot").attr('class', 'notCountR');
            @: $("#Healthcare-tab").css('border-left', '5px solid #a53333');
            @: $("#HealthNot").show();
            @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);

              if (Model.ScheduleDate.HealthcareNotification == "0")
              {
                   @: $("#HealthNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#HealthNot").attr('title', 'Due ' +@Model.ScheduleDate.HealthcareNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsHealthcareDue == "Orange")
        {
        @: $("#HealthNot").attr('class', 'notCountO');
        @: $("#Healthcare-tab").css('border-left', '5px solid #e4854d');
        @: $("#HealthNot").show();
        @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);
        @: $("#HealthNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HealthcareNotification+' days.');

        }
        else if(Model.ScheduleDate.IsHealthcareDue == "Green")
        {
        @: $("#HealthNot").attr('class', 'notCountG');
        @: $("#Healthcare-tab").css('border-left', '5px solid #0aa22d');
        @: $("#HealthNot").show();
        @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);
        @: $("#HealthNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HealthcareNotification+' days.');

        }

          console.log('3 hide controls');

         @if (Model.ScheduleDate.IsSocialSupportsDue == "Red")
      {
            @: $("#SocialNot").attr('class', 'notCountR');
            @: $("#SocialSupports-tab").css('border-left', '5px solid #a53333');
            @: $("#SocialNot").show();
            @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);

              if (Model.ScheduleDate.SocialNotification == "0")
              {
                   @: $("#SocialNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#SocialNot").attr('title', 'Due ' +@Model.ScheduleDate.SocialNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsSocialSupportsDue == "Orange")
        {
        @: $("#SocialNot").attr('class', 'notCountO');
        @: $("#SocialSupports-tab").css('border-left', '5px solid #e4854d');
        @: $("#SocialNot").show();
        @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);
        @: $("#SocialNot").attr('title', 'Due after ' +  @Model.ScheduleDate.SocialNotification+' days.');

        }
        else if(Model.ScheduleDate.IsSocialSupportsDue == "Green")
        {
        @: $("#SocialNot").attr('class', 'notCountG');
        @: $("#SocialSupports-tab").css('border-left', '5px solid #0aa22d');
        @: $("#SocialNot").show();
        @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);
        @: $("#SocialNot").attr('title', 'Due after ' +  @Model.ScheduleDate.SocialNotification+' days.');

        }



          @if (Model.ScheduleDate.IsLegalStatusDue == "Red")
      {
            @: $("#LegalNot").attr('class', 'notCountR');
            @: $("#LegalStatus-tab").css('border-left', '5px solid #a53333');
            @: $("#LegalNot").show();
            @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);

              if (Model.ScheduleDate.LegalNotification == "0")
              {
                   @: $("#LegalNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#LegalNot").attr('title', 'Due ' +@Model.ScheduleDate.LegalNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsLegalStatusDue == "Orange")
        {
        @: $("#LegalNot").attr('class', 'notCountO');
        @: $("#LegalStatus-tab").css('border-left', '5px solid #e4854d');
        @: $("#LegalNot").show();
        @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);
        @: $("#LegalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.LegalNotification+' days.');

        }
        else if(Model.ScheduleDate.IsLegalStatusDue == "Green")
        {
        @: $("#LegalNot").attr('class', 'notCountG');
        @: $("#LegalStatus-tab").css('border-left', '5px solid #0aa22d');
        @: $("#LegalNot").show();
        @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);
        @: $("#LegalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.LegalNotification+' days.');

        }




             @if (Model.ScheduleDate.IsDastDue == "Red")
      {
            @: $("#DastNot").attr('class', 'notCountR');
            @: $("#Dast-tab").css('border-left', '5px solid #a53333');
            @: $("#DastNot").show();
            @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);

              if (Model.ScheduleDate.DastNotification == "0")
              {
                   @: $("#DastNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#DastNot").attr('title', 'Due ' +@Model.ScheduleDate.DastNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsDastDue == "Orange")
        {
        @: $("#DastNot").attr('class', 'notCountO');
        @: $("#Dast-tab").css('border-left', '5px solid #e4854d');
        @: $("#DastNot").show();
        @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);
        @: $("#DastNot").attr('title', 'Due after ' +  @Model.ScheduleDate.DastNotification+' days.');

        }
        else if(Model.ScheduleDate.IsDastDue == "Green")
        {
        @: $("#DastNot").attr('class', 'notCountG');
        @: $("#Dast-tab").css('border-left', '5px solid #0aa22d');
        @: $("#DastNot").show();
        @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);
        @: $("#DastNot").attr('title', 'Due after ' +  @Model.ScheduleDate.DastNotification+' days.');

        }

          console.log('4 hide controls');

                  @if (Model.ScheduleDate.IsAuditDue == "Red")
      {
            @: $("#AuditNot").attr('class', 'notCountR');
            @: $("#Audit-tab").css('border-left', '5px solid #a53333');
            @: $("#AuditNot").show();
            @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);

              if (Model.ScheduleDate.AuditNotification == "0")
              {
                   @: $("#AuditNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#AuditNot").attr('title', 'Due ' +@Model.ScheduleDate.AuditNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsAuditDue == "Orange")
        {
        @: $("#AuditNot").attr('class', 'notCountO');
        @: $("#Audit-tab").css('border-left', '5px solid #e4854d');
        @: $("#AuditNot").show();
        @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);
        @: $("#AuditNot").attr('title', 'Due after ' +  @Model.ScheduleDate.AuditNotification+' days.');

        }
        else if(Model.ScheduleDate.IsAuditDue == "Green")
        {
        @: $("#AuditNot").attr('class', 'notCountG');
        @: $("#Audit-tab").css('border-left', '5px solid #0aa22d');
        @: $("#AuditNot").show();
        @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);
        @: $("#AuditNot").attr('title', 'Due after ' +  @Model.ScheduleDate.AuditNotification+' days.');

        }

          console.log('5 hide controls');

        //var DastN = "";
        //var AuditN = "";
        //DastN = $("#DastNot").attr('title');
        //AuditN = $("#AuditNot").attr('title');
        //if (DastN == undefined)
        //{
        //    DastN = ""

        //}
        //if (AuditN == undefined) {
        //    AuditN = ""

        //}
        //$("#SubNot").attr('title', ' Dast=' + DastN + ' & Audit=' + AuditN);


        //var subnottitle = $("#SubNot").attr('title');

        //if (subnottitle.indexOf("Due") == -1)
        //{
        //    $("#SubNot").hide();

        //}
        //else
        //{
        //       $("#SubNot").attr('class', 'notCountR');
        //      //$("#Alcohol-tab").css('border-left', '5px solid #a53333');
        //      $("#SubNot").show();
        //      $("#SubNot").html('i');
        //     $("#SubNot").attr('title', ' Dast=' + DastN + ' & Audit=' + AuditN);
        //}


          console.log('6 hide controls');

             @if (Model.ScheduleDate.IsMentalHealthDue == "Red")
          {
            @: $("#MentalNot").attr('class', 'notCountR');
            @: $("#MentalHealth-tab").css('border-left', '5px solid #a53333');
            @: $("#MentalNot").show();
            @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);

              if (Model.ScheduleDate.MentalNotification == "0")
              {
                   @: $("#MentalNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#MentalNot").attr('title', 'Due ' +@Model.ScheduleDate.MentalNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsMentalHealthDue == "Orange")
        {
        @: $("#MentalNot").attr('class', 'notCountO');
        @: $("#MentalHealth-tab").css('border-left', '5px solid #e4854d');
        @: $("#MentalNot").show();
        @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);
        @: $("#MentalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.MentalNotification+' days.');

        }
        else if(Model.ScheduleDate.IsMentalHealthDue == "Green")
        {
        @: $("#MentalNot").attr('class', 'notCountG');
        @: $("#MentalHealth-tab").css('border-left', '5px solid #0aa22d');
        @: $("#MentalNot").show();
        @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);
        @: $("#MentalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.MentalNotification+' days.');

        }

          console.log('7 hide controls');

              @if (Model.ScheduleDate.IsFoodAccessDue == "Red")
          {
            @: $("#FoodNot").attr('class', 'notCountR');
            @: $("#FoodAccess-tab").css('border-left', '5px solid #a53333');
            @: $("#FoodNot").show();
            @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);

              if (Model.ScheduleDate.FoodNotification == "0")
              {
                   @: $("#FoodNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#FoodNot").attr('title', 'Due ' +@Model.ScheduleDate.FoodNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsFoodAccessDue == "Orange")
        {
        @: $("#FoodNot").attr('class', 'notCountO');
        @: $("#FoodAccess-tab").css('border-left', '5px solid #e4854d');
        @: $("#FoodNot").show();
        @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);
        @: $("#FoodNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FoodNotification+' days.');

        }
        else if(Model.ScheduleDate.IsFoodAccessDue == "Green")
        {
        @: $("#FoodNot").attr('class', 'notCountG');
        @: $("#FoodAccess-tab").css('border-left', '5px solid #0aa22d');
        @: $("#FoodNot").show();
        @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);
        @: $("#FoodNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FoodNotification+' days.');

        }

          console.log('9 hide controls');
          //motification changes end here-------------------------

        @if (Model.PatientHousing.PatientHousingID == 0)
        {
           <text>$("#Housing-tab").find('span').css('display', 'none');</text>
        }
        else{
             @:$("#Housing-tab").find('span').css('display', 'inline');
    }
         @if (Model.PatientFinancialSecurity.PatientFinancialSecurityID == 0)
        {
            @:$("#Financial-tab").find('span').css('display', 'none');
        }
         else{
     @:$("#Financial-tab").find('span').css('display', 'inline');
          }
         @if (Model.PatientEmploymentEducation.PatientEmploymentEducationID == 0)
        {
            @:$("#Employment-tab").find('span').css('display', 'none');
        }
         else{
              @:$("#Employment-tab").find('span').css('display', 'inline');
         }
         @if (Model.PatientCommunicationAndMobility.PatientCommunicationAndMobilityID == 0)
        {
            @:$("#Communication-tab").find('span').css('display', 'none');
        }
         else
         {
@:$("#Communication-tab").find('span').css('display', 'inline');
         }

          @if (Model.PatientHealthcare.PatientHealthcareID == 0)
        {
            @:$("#Healthcare-tab").find('span').css('display', 'none');
        }
          else
          {
              @:$("#Healthcare-tab").find('span').css('display', 'inline');
          }
         @if (Model.PatientSocialSupport.SocialSupportsID == 0)
        {
            @:$("#SocialSupports-tab").find('span').css('display', 'none');
        }
         else
         { @:$("#SocialSupports-tab").find('span').css('display', 'inline');

         }
         @if (Model.PatientLegalStatus.LegalStatusID == 0)
        {
            @:$("#LegalStatus-tab").find('span').css('display', 'none');
        }
         else
         {
              @:$("#LegalStatus-tab").find('span').css('display', 'inline');
         }
         @if (Model.PatientSubstanceUse.SubstanceUseID == 0)
         {
             @:$("#Alcohol-tab").find('span').css('display', 'none');
             if (Model.PatientSubstanceUse.Audit.AuditID == 0)
             {
                  @:$("#Audit-tab").find('span').css('display', 'none');
             }
             else
             {
         @:$("#Audit-tab").find('span').css('display', 'inline');
           @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }
             if (Model.PatientSubstanceUse.Dast.DastID == 0)
             {
                  @:$("#Dast-tab").find('span').css('display', 'none');
             }
             else
             {
                  @:$("#Dast-tab").find('span').css('display', 'inline');
                   @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }

         }
         else
         {

              if (Model.PatientSubstanceUse.Audit.AuditID == 0)
             {
                  @:$("#Audit-tab").find('span').css('display', 'none');
             }
             else
             {
         @:$("#Audit-tab").find('span').css('display', 'inline');
           @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }
              if (Model.PatientSubstanceUse.Dast.DastID == 0)
             {
                  @:$("#Dast-tab").find('span').css('display', 'none');
             }
             else
             {
                  @:$("#Dast-tab").find('span').css('display', 'inline');
                   @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }

         }

            @if (Model.PatientMentalHealth.MentalHealthID == 0)
        {

            @:$("#MentalHealth-tab").find('span').css('display', 'none');
        }
            else
            {
                 @:$("#MentalHealth-tab").find('span').css('display', 'inline');
            }
                @if (Model.PatientFoodAccess.FoodAccessID == 0)
        {

            @:$("#FoodAccess-tab").find('span').css('display', 'none');
        }
                else
                {
            @:$("#FoodAccess-tab").find('span').css('display', 'inline');
                }

      @*@if (Model.PatientProgram.PatientProgramsID == 0)
        {
               @:$("#Programs-tab").find('span').css('display', 'none');
          if (Model.PatientProgram.ClinicOnly.ClinicOnlyID == 0)
               {
                   @:$("#aclinic").find('span').css('display', 'none');
               }
               else
               {
                   @:$("#aclinic").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }
               if (Model.PatientProgram.DreamOnly.DreamOnlyID == 0)
               {
                   @:$("#adream").find('span').css('display', 'none');
               }
               else
               {
                    @:$("#adream").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.OUOnly.OUOnlyID == 0)
               {@:$("aou").find('span').css('display', 'none');

               }
               else
               {
                    @:$("#aou").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.PeraltaCollege.PeraltaCollegesID == 0)
               {
                   @:$("#aPeraltaColleges").find('span').css('display', 'none');
               }
               else
               { @:$("#aPeraltaColleges").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }

           }
           else
           {

               if (Model.PatientProgram.ClinicOnly.ClinicOnlyID == 0)
               {
                   @:$("#aclinic").find('span').css('display', 'none');
               }
               else
               {
                   @:$("#aclinic").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }
               if (Model.PatientProgram.DreamOnly.DreamOnlyID == 0)
               {
                   @:$("#adream").find('span').css('display', 'none');
               }
               else
               {
                    @:$("#adream").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.OUOnly.OUOnlyID == 0)
               {@:$("#aou").find('span').css('display', 'none');

               }
               else
               {
                    @:$("#aou").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.PeraltaCollege.PeraltaCollegesID == 0)
               {
                   @:$("#aPeraltaColleges").find('span').css('display', 'none');
               }
               else
               { @:$("#aPeraltaColleges").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }

           }*@

          console.log('hide controls');
        $('.form-control').css('display', 'none');
        $('.Add').css('display', 'none');
        $('.selectboxmultiple').css('display', 'none');
        //$('#pat_out_div').removeClass('col-lg-12 col-md-12 col-sm-12 col-12');
        //$('#pat_out_div').addClass('col-lg-8 col-md-12 col-sm-12 col-12 pr-0');
        $('.recent-paitents').css('display', 'block');
        $('#appointement_div').css('display', 'block');
        getListAllAppointments();
        getListAllNotesLoadMore();
        //-----------Score Bind Start------------------------------//
        //-----------------Housingscore start----------------------//
        $('#txthousingscore').html(@Model.PatientScore.housingscore+"/26");
          $('#txthousingstatus').html('@Model.PatientScore.housingstatus');
          InsertBadge( $('#txthousingstatus'),'@Model.PatientScore.housingstatus')
         //-----------------Housingscore end----------------------//
         //----------------financialscore start----------------------//
        $('#txtfinancialscore').html(@Model.PatientScore.financialcscore+"/22");
          $('#txtfinancialstatus').html('@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.PatientScore.financialcstatus.ToLower())');
          InsertBadge( $('#txtfinancialstatus'),'@Model.PatientScore.financialcstatus')
         //-----------------financialscore end----------------------//
         //----------------Employmentscore start----------------------//
        $('#txtemploymentscore').html(@Model.PatientScore.employmentscore+"/20");
          $('#txtemploymentstatus').html('@Model.PatientScore.employmentstatus');
          InsertBadge( $('#txtemploymentstatus'),'@Model.PatientScore.employmentstatus')
         //-----------------Employmentscore end----------------------//
        //----------------communicationscore start----------------------//
        $('#txtcommunscore').html(@Model.PatientScore.communicationscore+"/12");
          $('#txtcommunstatus').html('@Model.PatientScore.communicationstatus');
          InsertBadge($('#txtcommunstatus'),'@Model.PatientScore.communicationstatus')
         //-----------------communicationscore end----------------------//
          //----------------Healthcarescore start----------------------//
        $('#txthealthscore').html(@Model.PatientScore.healthcarescore+"/26");
          $('#txthealthstatus').html('@Model.PatientScore.healthcarestatus');
          InsertBadge( $('#txthealthstatus'),'@Model.PatientScore.healthcarestatus')
         //-----------------Healthcarescore end----------------------//
        //----------------Socialscore start----------------------//
        $('#txtsocialscore').html(@Model.PatientScore.socialsupportscore+"/12");
          $('#txtsocialstatus').html('@Model.PatientScore.socialsupportstatus');
          InsertBadge( $('#txtsocialstatus'),'@Model.PatientScore.socialsupportstatus')
         //-----------------Socialscore end----------------------//
         //----------------Legalscore start----------------------//
        $('#txtlegalscore').html(@Model.PatientScore.legalstatusscore+"/18");
          $('#txtlegalstatus').html('@Model.PatientScore.legalstatusstatus');
          InsertBadge( $('#txtlegalstatus'),'@Model.PatientScore.legalstatusstatus')
         //-----------------Legalscore end----------------------//
           //----------------Substancescore start----------------------//
        $('#txtsubtscore').html(@Model.PatientScore.substancescore+"/20");
          $('#txtsubtstatus').html('@Model.PatientScore.substancestatus');
          InsertBadge($('#txtsubtstatus'),'@Model.PatientScore.substancestatus')
         //-----------------Substancescore end----------------------//
          //----------------Mental Health score start----------------------//
        $('#txtmentalscore').html(@Model.PatientScore.mentalhealthscore+"/20");
          $('#txtmentalstatus').html('@Model.PatientScore.mentalhealthstatus');
          InsertBadge( $('#txtmentalstatus'),'@Model.PatientScore.mentalhealthstatus')
         //-----------------Mental Health score end----------------------//

            //----------------Food Access score start----------------------//
        $('#txtfoodscore').html(@Model.PatientScore.foodaccessscore+"/26");
          $('#txtfoodstatus').html('@Model.PatientScore.foodaccessstatus');
          InsertBadge($('#txtfoodstatus'),'@Model.PatientScore.foodaccessstatus')
         //-----------------Food Access score end----------------------//

          //----------------Profile(Overall) score start----------------------//
          $('#txtoverallscore').html(@Model.PatientScore.OverallScore+"/200");

         @*$('#txtoverallstatus').html('@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.PatientScore.OverallStatus.ToLower())');*@
          $('#txtoverallstatus').html('@Model.PatientScore.OverallStatus');
          InsertBadge( $('#txtoverallstatus'),'@Model.PatientScore.OverallStatus')
         //-----------------Profile(Overall) score end----------------------//


          //-----------Score Bind end------------------------------//

        //----------------PeraltaCollege Start----------------//

        //var lblOneYouAre = $('#lblOneYouAre').html();
        //if (lblOneYouAre == "Student") {
        //    $('#divStudent').css('display', 'block');
        //}
        //----------------PeraltaCollege end----------------//

        var lblgender = $('#lblGender').html();
        if (lblgender == "Other") {
            $('#divOtherGender').css('display', 'block');
        }

        var lblRace = $('#lblOtherRace').html();
        if (lblRace != "") {
            $('#OtherRace').css('display', 'block');
        }

        var lblPerAdd = $('#lblPerAdd').html();
        if (lblPerAdd == "False") {
            $('#divPermanentAddress').css('display', 'block');
        }

        var lblContact = $('#lblContact').html();
        if (lblContact == "Other") {
            $('#OtherContact').css('display', 'block');
        }

        $('.custom-control-input').css('display', 'none');
        $('.custom-control-label').css('display', 'none');
        $('.custom-file-label').css('display', 'none');


        var lblMarital = $('#lblMarital').html();
        if (lblMarital == "Other") {
            $('#OtherMaritalStatus').css('display', 'block');
        }

        var lblOtherLang = $('#lblOtherLang').html();
        if (lblOtherLang != "") {
            $('#OtherLanguage').css('display', 'block');
        }

        var lblSmoker = $('#lblSmoker').html();
        if (lblSmoker == "Yes") {
            $('#divQuit').css('display', 'block');
            $('#divLastTimeYouSmoked').css('display', 'block');
        }

        var lblQuit = $('#lblQuit').html();
        if (lblQuit == "Yes") {
            $('#divSmokingQuitDate').css('display', 'block');
        }

        var lblPronoun = $('#lblPronoun').html();
        if (lblPronoun == "Other") {
            $('#divOtherPronouns').css('display', 'block');
        }

        var lblThink = $('#lblThink').html();
        if (lblThink == "Unspecified/Other") {
            $('#divOtherThinkYourselfAs').css('display', 'block');
        }


        var lblNumChildren = $('#lblNumChildren').html();
        $('.ChildrenAgeDiv').html('');
        var divhtml = '';
        for (var i = 1; i <= parseInt(lblNumChildren); i++) {
            var temp = $('.ChildrenAgeTemp').html();
            temp = temp.replace('#number', i);
            temp = temp.replace('#yearid', 'year_' + i);
            temp = temp.replace('#daysid', 'days_' + i);
            divhtml = divhtml + temp;
        }

        $('.ChildrenAgeDiv').html(divhtml);

        var lblAgeChildren = $('#lblAgeChildren').html();

        var AgeChildrenArray = lblAgeChildren!=undefined ? lblAgeChildren.split(',') : '';

        for (var i = 0; i < AgeChildrenArray.length; i++) {
            var AgeChildren = AgeChildrenArray[i].split(':');
            $('#year_' + (i + 1)).html(AgeChildren[0]);
            $('#days_' + (i + 1)).html(AgeChildren[1]);
        }

        $('#HousingSave').css('display', 'none');
        $('#ProfileSave').css('display', 'none');
        $('#FinancialSecuritySave').css('display', 'none');
        $('#EmploymentEducation').css('display', 'none');
        $('#CommunicationSave').css('display', 'none');
        $('#HealthcareSave').css('display', 'none');
        $('#SocialSupportsSave').css('display', 'none');
        $('#LegalStatusSave').css('display', 'none');
        $('#btnDast').css('display', 'none');
        $('#btnAudit').css('display', 'none');
        $('#btnFood').css('display', 'none');
        $('#btnMental').css('display', 'none');
        //$('#btnClinic').css('display', 'none');
        //$('#btnDream').css('display', 'none');
        //$('#btnOUOnly').css('display', 'none');
        //$('#btnPeralta').css('display', 'none');

          $('.btnprogramsave').each(function (index, element) {

              $(element).css('display', 'none');

          })

          var lblCalRec = $('#lblCalRec').html() != "" && undefined ? $('#lblCalRec').html().trim():"";
        if (lblCalRec == "") {
            $('#CalRec').removeClass('fa-times');
            $('#CalRec').removeClass('fa-check');
        }
        if (lblCalRec == "Receiving") {
            $('#CalRec').removeClass('fa-times');
            $('#CalRec').addClass('fa-check');
        }
          var lblCalPen = $('#lblCalPen').html() != "" && undefined ? $('#lblCalPen').html().trim() : "";
        if (lblCalPen == "") {
            $('#CalPen').removeClass('fa-times');
            $('#CalPen').removeClass('fa-check');
        }
        if (lblCalPen == "Pending") {
            $('#CalPen').removeClass('fa-times');
            $('#CalPen').addClass('fa-check');
        }
          var lblCalApp = $('#lblCalApp').html() != "" && undefined ? $('#lblCalApp').html().trim() : "";
        if (lblCalApp == "") {
            $('#CalApp').removeClass('fa-times');
            $('#CalApp').removeClass('fa-check');
        }
        if (lblCalApp == "Applied & Denied") {
            $('#CalApp').removeClass('fa-times');
            $('#CalApp').addClass('fa-check');
        }
          var lblCalNev = $('#lblCalNev').html() != "" && undefined ? $('#lblCalNev').html().trim() : "";
        if (lblCalNev == "") {
            $('#CalNev').removeClass('fa-times');
            $('#CalNev').removeClass('fa-check');
        }
        if (lblCalNev == "Never Applied") {
            $('#CalNev').removeClass('fa-times');
            $('#CalNev').addClass('fa-check');
        }


          var lblSSRec = $('#lblSSRec').html() != "" && undefined ? $('#lblSSRec').html().trim() : "";
        if (lblSSRec == "") {
            $('#SSRec').removeClass('fa-times');
            $('#SSRec').removeClass('fa-check');
        }
        if (lblSSRec == "Receiving") {
            $('#SSRec').removeClass('fa-times');
            $('#SSRec').addClass('fa-check');
        }
          var lblSSPen = $('#lblSSPen').html() != "" && undefined ? $('#lblSSPen').html().trim() : "";
        if (lblSSPen == "") {
            $('#SSPen').removeClass('fa-times');
            $('#SSPen').removeClass('fa-check');
        }
        if (lblSSPen == "Pending") {
            $('#SSPen').removeClass('fa-times');
            $('#SSPen').addClass('fa-check');
        }
          var lblSSApp = $('#lblSSApp').html() != "" && undefined ? $('#lblSSApp').html().trim() : "";
        if (lblSSApp == "") {
            $('#SSApp').removeClass('fa-times');
            $('#SSApp').removeClass('fa-check');
        }
        if (lblSSApp == "Applied & Denied") {
            $('#SSApp').removeClass('fa-times');
            $('#SSApp').addClass('fa-check');
        }
          var lblSSNev = $('#lblSSNev').html() != "" && undefined ? $('#lblSSNev').html().trim() : "";
        if (lblSSNev == "") {
            $('#SSNev').removeClass('fa-times');
            $('#SSNev').removeClass('fa-check');
        }
        if (lblSSNev == "Never Applied") {
            $('#SSNev').removeClass('fa-times');
            $('#SSNev').addClass('fa-check');
        }


          var lblGARec = $('#lblGARec').html() != "" && undefined ? $('#lblGARec').html().trim() : "";
        if (lblGARec == "") {
            $('#GARec').removeClass('fa-times');
            $('#GARec').removeClass('fa-check');
        }
        if (lblGARec == "Receiving") {
            $('#GARec').removeClass('fa-times');
            $('#GARec').addClass('fa-check');
        }
          var lblGAPen = $('#lblGAPen').html() != "" && undefined ? $('#lblGAPen').html().trim() : "";
        if (lblGAPen == "") {
            $('#GAPen').removeClass('fa-times');
            $('#GAPen').removeClass('fa-check');
        }
        if (lblGAPen == "Pending") {
            $('#GAPen').removeClass('fa-times');
            $('#GAPen').addClass('fa-check');
        }
          var lblGAApp = $('#lblGAApp').html() != "" && undefined ? $('#lblGAApp').html().trim() : "";
        if (lblGAApp == "") {
            $('#GAApp').removeClass('fa-times');
            $('#GAApp').removeClass('fa-check');
        }
        if (lblGAApp == "Applied & Denied") {
            $('#GAApp').removeClass('fa-times');
            $('#GAApp').addClass('fa-check');
        }

          var lblGANev = $('#lblGANev').html() != "" && undefined ? $('#lblGANev').html().trim() : "";
        if (lblGANev == "") {
            $('#GANev').removeClass('fa-times');
            $('#GANev').removeClass('fa-check');
        }
        if (lblGANev == "Never Applied") {
            $('#GANev').removeClass('fa-times');
            $('#GANev').addClass('fa-check');
        }


          var lblWIRec = $('#lblWIRec').html() != "" && undefined ? $('#lblWIRec').html().trim() : "";
        if (lblWIRec == "") {
            $('#WIRec').removeClass('fa-times');
            $('#WIRec').removeClass('fa-check');
        }
        if (lblWIRec == "Receiving") {
            $('#WIRec').removeClass('fa-times');
            $('#WIRec').addClass('fa-check');
        }
          var lblWIPen = $('#lblWIPen').html() != "" && undefined ? $('#lblWIPen').html().trim() : "";
        if (lblWIPen == "") {
            $('#WIPen').removeClass('fa-times');
            $('#WIPen').removeClass('fa-check');
        }
        if (lblWIPen == "Pending") {
            $('#WIPen').removeClass('fa-times');
            $('#WIPen').addClass('fa-check');
        }
          var lblWIApp = $('#lblWIApp').html() != "" && undefined ? $('#lblWIApp').html().trim() : "";
        if (lblWIApp == "") {
            $('#WIApp').removeClass('fa-times');
            $('#WIApp').removeClass('fa-check');
        } else
        if (lblWIApp == "Applied & Denied") {
            $('#WIApp').removeClass('fa-times');
            $('#WIApp').addClass('fa-check');
        }
          var lblWINev = $('#lblWINev').html() != "" && undefined ? $('#lblWINev').html().trim() : "";
        if (lblWINev == "") {
            $('#WINev').removeClass('fa-times');
            $('#WINev').removeClass('fa-check');
        } else
        if (lblWINev == "Never Applied") {
            $('#WINev').removeClass('fa-times');
            $('#WINev').addClass('fa-check');
        }



          var lblUnRec = $('#lblUnRec').html() != "" && undefined ? $('#lblUnRec').html().trim() : "";
        if (lblUnRec == "") {
            $('#UnRec').removeClass('fa-times');
            $('#UnRec').removeClass('fa-check');
        } else
        if (lblUnRec == "Receiving") {
            $('#UnRec').removeClass('fa-times');
            $('#UnRec').addClass('fa-check');
        }
          var lblUnPen = $('#lblUnPen').html() != "" && undefined ? $('#lblUnPen').html().trim() : "";
        if (lblUnPen == "") {
            $('#UnPen').removeClass('fa-times');
            $('#UnPen').removeClass('fa-check');
        } else
        if (lblUnPen == "Pending") {
            $('#UnPen').removeClass('fa-times');
            $('#UnPen').addClass('fa-check');
        }
          var lblUnApp = $('#lblUnApp').html() != "" && undefined ? $('#lblUnApp').html().trim() : "";
        if (lblUnApp == "") {
            $('#UnApp').removeClass('fa-times');
            $('#UnApp').removeClass('fa-check');
        } else
        if (lblUnApp == "Applied & Denied") {
            $('#UnApp').removeClass('fa-times');
            $('#UnApp').addClass('fa-check');
        }
          var lblUnNev = $('#lblUnNev').html() != "" && undefined ? $('#lblUnNev').html().trim() : "";
        if (lblUnNev == "") {
            $('#UnNev').removeClass('fa-times');
            $('#UnNev').removeClass('fa-check');
        } else
        if (lblUnNev == "Never Applied") {
            $('#UnNev').removeClass('fa-times');
            $('#UnNev').addClass('fa-check');
        }


          var lblSDRec = $('#lblSDRec').html() != "" && undefined ? $('#lblSDRec').html().trim() : "";
        if (lblSDRec == "") {
            $('#SDRec').removeClass('fa-times');
            $('#SDRec').removeClass('fa-check');
        } else
        if (lblSDRec == "Receiving") {
            $('#SDRec').removeClass('fa-times');
            $('#SDRec').addClass('fa-check');
        }
          var lblSDPen = $('#lblSDPen').html() != "" && undefined ? $('#lblSDPen').html().trim() : "";
        if (lblSDPen == "") {
            $('#SDPen').removeClass('fa-times');
            $('#SDPen').removeClass('fa-check');
        } else
        if (lblSDPen == "Pending") {
            $('#SDPen').removeClass('fa-times');
            $('#SDPen').addClass('fa-check');
        }
          var lblSDApp = $('#lblSDApp').html() != "" && undefined ? $('#lblSDApp').html().trim() : "";
        if (lblSDApp == "") {
            $('#SDApp').removeClass('fa-times');
            $('#SDApp').removeClass('fa-check');
        } else
            if (lblSDApp == "Applied & Denied") {
                $('#SDApp').removeClass('fa-times');
                $('#SDApp').addClass('fa-check');
            }
          var lblSDNev = $('#lblSDNev').html() != "" && undefined ? $('#lblSDNev').html().trim() : "";

        if (lblSDNev == "") {
            $('#SDNev').removeClass('fa-times');
            $('#SDNev').removeClass('fa-check');
        } else
        if (lblSDNev == "Never Applied") {
            $('#SDNev').removeClass('fa-times');
            $('#SDNev').addClass('fa-check');
        }



          var lblReRec = $('#lblReRec').html() != "" && undefined ? $('#lblReRec').html().trim() : "";
        if (lblReRec == "") {
            $('#ReRec').removeClass('fa-times');
            $('#ReRec').removeClass('fa-check');
        } else if (lblReRec == "Receiving") {
            $('#ReRec').removeClass('fa-times');
            $('#ReRec').addClass('fa-check');
        }
          var lblRePen = $('#lblRePen').html() != "" && undefined ? $('#lblRePen').html().trim() : "";
        if (lblRePen == "") {
            $('#RePen').removeClass('fa-times');
            $('#RePen').removeClass('fa-check');
        } else if (lblRePen == "Pending") {
            $('#RePen').removeClass('fa-times');
            $('#RePen').addClass('fa-check');
        }
          var lblReApp = $('#lblReApp').html() != "" && undefined ? $('#lblReApp').html().trim() : "";
        if (lblReApp == "") {
            $('#ReApp').removeClass('fa-times');
            $('#ReApp').removeClass('fa-check');
        } else if (lblReApp == "Applied & Denied") {
            $('#ReApp').removeClass('fa-times');
            $('#ReApp').addClass('fa-check');
        }
          var lblReNev = $('#lblReNev').html() != "" && undefined ? $('#lblReNev').html().trim() : "";
        if (lblReNev == "") {
            $('#ReNev').removeClass('fa-times');
            $('#ReNev').removeClass('fa-check');
        } else if (lblReNev == "Never Applied") {
            $('#ReNev').removeClass('fa-times');
            $('#ReNev').addClass('fa-check');
        }

        //--------------------Employment Education Start--------------------//

        var lblLevelofEducation = $('#lblLevelofEducation').html();

        if (lblLevelofEducation == "Some high school") {
            $('#divHighestGrade').css('display', 'block');
        }
        var lblWorkSituation = $('#lblWorkSituation').html();
        if (lblWorkSituation == "I am employed full-time") {
            $('#divFullTimeNameLocation').css('display', 'block');
        }

        if (lblWorkSituation == "I am employed part-time") {
            $('#divPartTimeNameLocation').css('display', 'block');
        }
        if (lblWorkSituation == "Other") {
            $('#divOther').css('display', 'block');
        }

        var lblParticipating = $('#lblParticipating').html();
        if (lblParticipating == "No, but I have in the past") {
            $('#divProgramSchoolAndYearAttended').css('display', 'block');
        }

        if (lblParticipating == "Yes") {
            $('#divParticipatingIn').css('display', 'block');
        }


        var lblParticipatingIn = $('#lblParticipatingIn').html();
        if (lblParticipatingIn == "Training Program") {
            $('#divProgramName').css('display', 'block');
        }
        if (lblParticipatingIn == "Student") {
            $('#divSchoolName').css('display', 'block');
        }
        if (lblParticipatingIn == "Training Program,Student") {
            $('#divSchoolName').css('display', 'block');
            $('#divProgramName').css('display', 'block');
        }

        //--------------------Employment Education end--------------------//

         //--------------------Communication And Mobility Start--------------------//

        var lblTransportation = $('#lblTransportation').html();
        if (lblTransportation == "Other") {
            $('#divOtherTransportation').css('display', 'block');
        }

        //--------------------Communication And Mobility end--------------------//
        //--------------------Healthcare start--------------------//

        var diagoption = "";
        var lblDiagnosed = $('#lblDiagnosedmatch').html();
        var lblDiagnosedArray = lblDiagnosed != undefined ? lblDiagnosed.split(',') : '';

        for (var i = 0; i < lblDiagnosedArray.length; i++) {
            var diagoption = diagoption + "," + $('#ddDiagnosed option[value="' + lblDiagnosedArray[i] + '"]').text();
        }
        var diagoption = diagoption.substring(1);
        $('#lblDiagnosed').html(diagoption);


          //--------------------Healthcare end--------------------//



        var lblInsurance = $('#lblInsurance').html();
        if (lblInsurance == "Yes") {
            $('#divInsuranceYes').show();
        }

        var lblDoctor = $('#lblDoctor').html();
        if (lblDoctor == "Yes") {
            $('#divRegularDoctorYes').show();
        }


        var lblDentist = $('#lblDentist').html();
        if (lblDentist == "Yes") {
            $('#divRegularDentistYes').show();
        }

        var lblOtherDoctors = $('#lblOtherDoctors').html();
        if (lblOtherDoctors == "Yes") {
            $('#divOtherDoctorsYes').show();
        }

        var lblCaseManager = $('#lblCaseManager').html();
        if (lblCaseManager == "Yes") {
            //$('#divSocialWorker').css('display', 'block');
            $('#divSocialWorker').show();
        }

        var lblSmoke = $('#lblSmoke').html();
        if (lblSmoke == "Yes") {
            $('#divSmoke').show();
        }

        var lblInPrison = $('#lblInPrison').html();
        if (lblSmoke == "Yes") {
            $('#divPrison').show();
        }


        var lblRestitution = $('#lblRestitution').html();
        if (lblRestitution == "Yes") {
            $('#divOwe').show();
        }

        var lblCurrentlyOnParole = $('#lblCurrentlyOnParole').html();
        if (lblCurrentlyOnParole == "Yes") {
            $('#divParoleProbation').show();
        }

        var lblGovernmentID = $('#lblGovernmentID').html();
        if (lblGovernmentID == "Yes") {
            $('#divGovernmentImg').css('display', 'inline-block');
            //$('#divGovernmentImg').show();
        }


        $('#txtSSN').val('@ViewBag.SSNNumber');
        $('#lblssn').html('@ViewBag.SSNNumber');

        //-------------------Dast start--------------------------//

        $('#PFirstName').html('@ViewBag.FirstName');
        $('#PDOB').html('@ViewBag.DOB');

        var lblDrugsContaininglst = $('#lblDrugsContaining').html();
        var lblDrugsContaining = lblDrugsContaininglst != undefined ? lblDrugsContaininglst.split(',') : '';
        //var lblDrugsContaining = $('#lblDrugsContaining').html().split(",");
        for (i = 0; i < lblDrugsContaining.length; i++) {

            if (lblDrugsContaining[i] == "8") {
                $('#lblOtherDrug').show();
            }
        }

        $('#frmDast').find(':checkbox[name^="frmDast_check1"]').each(function () {

            $(this).prop("checked", ($.inArray($(this).val(), lblDrugsContaining) != -1));
            $(this).attr("disabled", true);
        });

        var lblMedical = $('#hdfUsedDrugsForMedicalReasons').val();

          switch (lblMedical != "" && undefined ? lblMedical.trim() : "") {
            case "":
                $('#MedicalYes').removeClass('fa-times');
                $('#MedicalYes').removeClass('fa-check');
                $('#MedicalNo').removeClass('fa-times');
                $('#MedicalNo').removeClass('fa-check');
                break;
            case "False":
                $('#MedicalNo').removeClass('fa-times');
                $('#MedicalNo').addClass('fa-check');
                break;
            case "True":
                $('#MedicalYes').removeClass('fa-times');
                $('#MedicalYes').addClass('fa-check');
                break;
        }

        var lblAbuse = $('#hdfOneDrugAtATime').val();
          switch (lblAbuse != "" && undefined ? lblAbuse.trim() : "") {
            case "":
                $('#AbuseYes').removeClass('fa-times');
                $('#AbuseYes').removeClass('fa-check');
                $('#AbuseNo').removeClass('fa-times');
                $('#AbuseNo').removeClass('fa-check');
                break;
            case "False":
                $('#AbuseNo').removeClass('fa-times');
                $('#AbuseNo').addClass('fa-check');
                break;
            case "True":
                $('#AbuseYes').removeClass('fa-times');
                $('#AbuseYes').addClass('fa-check');
                break;
        }

          var lblUnableNo = $('#lblUnableNo').html() != "" && undefined ? $('#lblUnableNo').html().trim() : "";

        if (lblUnableNo == "") {
            $('#UnableNo').removeClass('fa-times');
            $('#UnableNo').removeClass('fa-check');
        } else if (lblUnableNo == "False") {
            $('#UnableNo').removeClass('fa-times');
            $('#UnableNo').addClass('fa-check');
        }
          var lblUnableYes = $('#lblUnableYes').html() != "" && undefined ? $('#lblUnableYes').html().trim() : "";
        if (lblUnableYes == "") {
            $('#UnableYes').removeClass('fa-times');
            $('#UnableYes').removeClass('fa-check');
        } else if (lblUnableYes == "True") {
            $('#UnableYes').removeClass('fa-times');
            $('#UnableYes').addClass('fa-check');
        }

          var lblBlackoutsNo = $('#lblBlackoutsNo').html() != "" && undefined ? $('#lblBlackoutsNo').html().trim() : "";
        if (lblBlackoutsNo == "") {
            $('#BlackoutsNo').removeClass('fa-times');
            $('#BlackoutsNo').removeClass('fa-check');
        } else if (lblBlackoutsNo == "False") {
            $('#BlackoutsNo').removeClass('fa-times');
            $('#BlackoutsNo').addClass('fa-check');
        }
          var lblBlackoutsYes = $('#lblBlackoutsYes').html() != "" && undefined ? $('#lblBlackoutsYes').html().trim() : "";
        if (lblBlackoutsYes == "") {
            $('#BlackoutsYes').removeClass('fa-times');
            $('#BlackoutsYes').removeClass('fa-check');
        } else if (lblBlackoutsYes == "True") {
            $('#BlackoutsYes').removeClass('fa-times');
            $('#BlackoutsYes').addClass('fa-check');
        }

          var lblGuiltyNo = $('#lblGuiltyNo').html() != "" && undefined ? $('#lblGuiltyNo').html().trim() : "";
        if (lblGuiltyNo == "") {
            $('#GuiltyNo').removeClass('fa-times');
            $('#GuiltyNo').removeClass('fa-check');
        } else if (lblGuiltyNo == "False") {
            $('#GuiltyNo').removeClass('fa-times');
            $('#GuiltyNo').addClass('fa-check');
        }
          var lblGuiltyYes = $('#lblGuiltyYes').html() != "" && undefined ? $('#lblGuiltyYes').html().trim() : "";
        if (lblGuiltyYes == "") {
            $('#GuiltyYes').removeClass('fa-times');
            $('#GuiltyYes').removeClass('fa-check');
        } else if (lblGuiltyYes == "True") {
            $('#GuiltyYes').removeClass('fa-times');
            $('#GuiltyYes').addClass('fa-check');
        }


          var lblSpouseNo = $('#lblSpouseNo').html() != "" && undefined ? $('#lblSpouseNo').html().trim() : "";
        if (lblSpouseNo == "") {
            $('#SpouseNo').removeClass('fa-times');
            $('#SpouseNo').removeClass('fa-check');
        } else if (lblSpouseNo == "False") {
            $('#SpouseNo').removeClass('fa-times');
            $('#SpouseNo').addClass('fa-check');
        }
          var lblSpouseYes = $('#lblSpouseYes').html() != "" && undefined ? $('#lblSpouseYes').html().trim() : "";
        if (lblSpouseYes == "") {
            $('#SpouseYes').removeClass('fa-times');
            $('#SpouseYes').removeClass('fa-check');
        } else if (lblSpouseYes == "True") {
            $('#SpouseYes').removeClass('fa-times');
            $('#SpouseYes').addClass('fa-check');
        }


          var lblNeglectedNo = $('#lblNeglectedNo').html()!= "" && undefined ? $('#lblNeglectedNo').html().trim() : "";
        if (lblNeglectedNo == "") {
            $('#NeglectedNo').removeClass('fa-times');
            $('#NeglectedNo').removeClass('fa-check');
        } else if (lblNeglectedNo == "False") {
            $('#NeglectedNo').removeClass('fa-times');
            $('#NeglectedNo').addClass('fa-check');
        }
          var lblNeglectedYes = $('#lblNeglectedYes').html() != "" && undefined ? $('#lblNeglectedYes').html().trim() : "";
        if (lblNeglectedYes == "") {
            $('#NeglectedYes').removeClass('fa-times');
            $('#NeglectedYes').removeClass('fa-check');
        } else if (lblNeglectedYes == "True") {
            $('#NeglectedYes').removeClass('fa-times');
            $('#NeglectedYes').addClass('fa-check');
        }

          var lblEngagedNo = $('#lblEngagedNo').html() != "" && undefined ? $('#lblEngagedNo').html().trim() : "";
        if (lblEngagedNo == "") {
            $('#EngagedNo').removeClass('fa-times');
            $('#EngagedNo').removeClass('fa-check');
        } else if (lblEngagedNo == "False") {
            $('#EngagedNo').removeClass('fa-times');
            $('#EngagedNo').addClass('fa-check');
        }


          var lblEngagedYes = $('#lblEngagedYes').html() != "" && undefined ? $('#lblEngagedYes').html().trim() : "";
        if (lblEngagedYes == "") {
            $('#EngagedYes').removeClass('fa-times');
            $('#EngagedYes').removeClass('fa-check');
        } else if (lblEngagedYes == "True") {
            $('#EngagedYes').removeClass('fa-times');
            $('#EngagedYes').addClass('fa-check');
        }



          var lblSymptomsNo = $('#lblSymptomsNo').html() != "" && undefined ? $('#lblSymptomsNo').html().trim() : "";
        if (lblSymptomsNo == "") {
            $('#SymptomsNo').removeClass('fa-times');
            $('#SymptomsNo').removeClass('fa-check');
        } else if (lblSymptomsNo == "False") {
            $('#SymptomsNo').removeClass('fa-times');
            $('#SymptomsNo').addClass('fa-check');
        }
          var lblSymptomsYes = $('#lblSymptomsYes').html() != "" && undefined ? $('#lblSymptomsYes').html().trim() : "";
        if (lblSymptomsYes == "") {
            $('#SymptomsYes').removeClass('fa-times');
            $('#SymptomsYes').removeClass('fa-check');
        } else if (lblSymptomsYes == "True") {
            $('#SymptomsYes').removeClass('fa-times');
            $('#SymptomsYes').addClass('fa-check');
        }

          var lblHepatitiesNo = $('#lblHepatitiesNo').html() != "" && undefined ? $('#lblHepatitiesNo').html().trim() : "";
        if (lblHepatitiesNo == "") {
            $('#HepatitiesNo').removeClass('fa-times');
            $('#HepatitiesNo').removeClass('fa-check');
        } else if (lblHepatitiesNo == "False") {
            $('#HepatitiesNo').removeClass('fa-times');
            $('#HepatitiesNo').addClass('fa-check');
        }
          var lblHepatitiesYes = $('#lblHepatitiesYes').html() != "" && undefined ? $('#lblHepatitiesYes').html().trim() : "";
        if (lblHepatitiesYes == "") {
            $('#HepatitiesYes').removeClass('fa-times');
            $('#HepatitiesYes').removeClass('fa-check');
        } else if (lblHepatitiesYes == "True") {
            $('#HepatitiesYes').removeClass('fa-times');
            $('#HepatitiesYes').addClass('fa-check');
        }

        //-------------------Dast end----------------------------//
        //-------------Audit start-------------------------------------//


        var txtDrinkContainingAlcohol = $('#txtDrinkContainingAlcohol').html();
        if (txtDrinkContainingAlcohol == "Never") {
            $('#divInjuredDrinking').css('display', 'none');
            $('#divFriendsSuggested').css('display', 'none');
        }
        else {
            $('#divInjuredDrinking').css('display', 'block');
            $('#divFriendsSuggested').css('display', 'block');
        }

        var txtHowManyDrinks = $('#txtHowManyDrinks').html();
        var txtSixOrMoreDrink = $('#txtSixOrMoreDrink').html();
        if (txtHowManyDrinks == "1 or 2" && txtSixOrMoreDrink == "Never") {
            $('#divInjuredDrinking').css('display', 'none');
            $('#divFriendsSuggested').css('display', 'none');
        }
        else {
            $('#divInjuredDrinking').css('display', 'block');
            $('#divFriendsSuggested').css('display', 'block');
        }


        //----------------Audit End----------------------------------//

        //------------------------Mental Health Start-----------------//


        $('#PmentalFirstName').html('@ViewBag.FirstName');
        $('#mentalPDOB').html('@ViewBag.mentalPDOB');

        ApplyTickCross($('#hdfLittleInterest').val(), $('#interestOne'), $('#interestTwo'), $('#interestThree'), $('#interestFour'));
        ApplyTickCross($('#hdfFeelingDown').val(), $('#depressedOne'), $('#depressedTwo'), $('#depressedThree'), $('#depressedFour'));

        ApplyTickCross($('#hdfTroubleFalling').val(), $('#asleepOne'), $('#asleepTwo'), $('#asleepThree'), $('#asleepFour'));
        ApplyTickCross($('#hdfFeelingTired').val(), $('#energyOne'), $('#energyTwo'), $('#energyThree'), $('#energyFour'));
        ApplyTickCross($('#hdfPoorAppetite').val(), $('#appetiteOne'), $('#appetiteTwo'), $('#appetiteThree'), $('#appetiteFour'));
        ApplyTickCross($('#hdfFeelingBad').val(), $('#FeelingOne'), $('#FeelingTwo'), $('#FeelingThree'), $('#FeelingFour'));
        ApplyTickCross($('#hdfTroubleConcentraiting').val(), $('#TroubleOne'), $('#TroubleTwo'), $('#TroubleThree'), $('#TroubleFour'));
        ApplyTickCross($('#hdfrestless').val(), $('#noticedOne'), $('#noticedTwo'), $('#noticedThree'), $('#noticedFour'));
        ApplyTickCross($('#hdfHurtingYourself').val(), $('#betterOne'), $('#betterTwo'), $('#betterThree'), $('#betterFour'));
        ApplyTickCross($('#hdfProblemsMade').val(), $('#questionnaireOne'), $('#questionnaireTwo'), $('#questionnaireThree'), $('#questionnaireFour'));





        function ApplyTickCross(d, ele1, ele2, ele3, ele4) {
            switch (d) {
                case "":
                    ele1.removeClass('fa-times');
                    ele1.removeClass('fa-check');
                    ele2.removeClass('fa-times');
                    ele2.removeClass('fa-check');
                    ele3.removeClass('fa-times');
                    ele3.removeClass('fa-check');
                    ele4.removeClass('fa-times');
                    ele4.removeClass('fa-check');
                    break;
                case "0":
                    ele1.removeClass('fa-times');
                    ele1.addClass('fa-check');
                    break;
                case "1":
                    ele2.removeClass('fa-times');
                    ele2.addClass('fa-check');
                    break;
                case "2":
                    ele3.removeClass('fa-times');
                    ele3.addClass('fa-check');
                    break;
                case "3":
                    ele4.removeClass('fa-times');
                    ele4.addClass('fa-check');
                    break;

            }



        }

        var option = "";
        var lblMentalHealth = $('#lblMentalHealth').html();
        var lblMentalHealthArray = lblMentalHealth != undefined ? lblMentalHealth.split(','):'';
        for (var i = 0; i < lblMentalHealthArray.length; i++) {
            var option = option + "," + $('#ddMentalHealth option[value="' + lblMentalHealthArray[i] + '"]').text();
        }
        var option = option.substring(1);
        $('#lblMentalHealthCond').html(option);






         //------------------------Mental Health end-----------------//

        //--------------------clinic only(program) Start-----------------------------//


        //ApplyTickCross1($('#hdfTestedForTB').val(), $('#ipositiveOne'), $('#ipositiveTwo'));
        //ApplyTickCross1($('#hdfTBdiseaseAtAnyTime').val(), $('#iinfectiousOne'), $('#iinfectiousTwo'));

        //ApplyTickCross1($('#hdfWeakenedImmuneSystem').val(), $('#iSystemOne'), $('#iSystemTwo'));
        //ApplyTickCross1($('#hdfElevatedRateOfTB').val(), $('#iElevatedOne'), $('#iElevatedTwo'));
        //ApplyTickCross1($('#hdfVolunteerOfHighRisk').val(), $('#iVolunteerOne'), $('#iVolunteerTwo'));
        //function ApplyTickCross1(d, ele1, ele2) {


        //    if (d == "True") {
        //        ele1.removeClass('fa-times');
        //        ele1.addClass('fa-check');
        //    }
        //    if (d == "False") {
        //        ele2.removeClass('fa-times');
        //        ele2.addClass('fa-check');
        //    }

        //}
        //var RadioPregnant = $('#lblpregnant').html();
        //if (RadioPregnant == "Yes") {
        //    $('#divIsPregnant').show();

        //}
        //else {
        //    $('#divIsPregnant').hide();
        //}

        //var RadioBirth = $('#lblbirth').html();
        //if (RadioBirth == "Yes") {
        //    $('#divBirthControl').show();

        //}
        //else {
        //    $('#divBirthControl').hide();
        //}


        //var RadioPregnant = $('#lblPregnant').html();
        //if (RadioPregnant == "Yes") {
        //    $('#divPregnantYes').show();

        //}
        //else {
        //    $('#divPregnantYes').hide();
        //}

         //--------------------clinic only(program) end-----------------------------//

          $(".createtemplate").find(".form-control,.custom-control-label,.custom-control-input").show();
    });

    //===============Proceed functions=======//

    function GetClinicAddress(_patientClinicId, formName) {
          $.ajax({
              type: "GET",
              url: Apipath + '/api/PatientMain/getclinicaddress?ClinicID=' + _patientClinicId,
              contentType: 'application/json; charset=UTF-8',
              dataType: "json",
              async: true,
              success: function (data) {
                  clinicAddress = data;
                  printFunction(formName);
              },
              error: function (e) {
                  toastr.error("Something happen Wrong");
                  $(".loaderOverlay").hide();
              }
          });
      }

    function PrintProgram(formName) {
        var clinicaddress = clinicAddress != "" && undefined ? clinicAddress.trim() : ""
        if (clinicaddress.length == 0 && _ClinicId > 0) {
              GetClinicAddress(_ClinicId, formName);
          }
          else {
              printFunction(formName)
          }

    }
    function printFunction(formName) {

        let htmlToPrint = $("#" + formName + "render-basicform")[0].outerHTML
        let Programtitle = $('#a' + formName).text();
          let HeadHtml = $('head').html();
          var stringToAppend = '<h4 class="text-center mb-4">' + Programtitle + '</h4>';
          stringToAppend += '<table  width="40%" style="margin-left:35px;margin-bottom:15px">';
          stringToAppend += '<tr><th width="50%">Name</th><td>' + clientName + '<td></tr>'
          stringToAppend += '<tr><th width=50%">Medical Record Number</th><td>' + _amdMedRecordNo + '<td></tr>'
          stringToAppend += '<tr><th width=50%">Date Of Birth</th><td>' + _dateOfBirth + '<td></tr>'
          stringToAppend += '<tr><th width="50%">Address</th><td>' + clinicAddress + '<td></tr>'
          stringToAppend += '</table>'
          var mywindow = window.open('', '', 'width=1000,height=800');
          mywindow.document.domain = window.document.domain;
          mywindow.document.write('<html><head><title></title>');
          mywindow.document.write(HeadHtml);
          mywindow.document.write('<style>div .basecontentspan{display:none}</style>')
          mywindow.document.write('</head><body class="colorPrint">');
          mywindow.document.write(stringToAppend);

          mywindow.document.write(htmlToPrint);
          mywindow.document.write('</body></html>');
          mywindow.document.close();

          setTimeout(function () {
              mywindow.document.close();
              mywindow.focus();
              mywindow.print();
              mywindow.close();
          }, 500);
      }

    function loadClient(item) {
        
        //$("#myTab .nav-item a").on('click', function (e) {
        
        $(".tab-pane").each(function (index, item) {
            $(item).removeClass("active show");
            $(item).removeClass('client-form-margin-top');
        })

        //$("#myChildTab").css("display", "none");
        var item = $(item);
            var ClientFormId = item.attr("data-ClientFormID")
            formName = item.attr("data-FormName");
        programElement = $("#" + formName + "render-basicform");
        var id = item.attr("id");
        if ($("#"+id).hasClass("Child")) {
            $(".Child").removeClass('active show');
            $("#" + id).addClass('active show');
        }
            var _IsSaved = $('#' + formName + 'only').find('.btnprogramsave').attr('data-save');
        $('#' + formName + 'only').find('.Child').removeClass('active show ');
        $('#' + formName + 'only').find("#a" + formName).addClass('active show ');
            if (_IsSaved == 'True') {
                $('#' + formName + 'only').find('.btnprogramPrint').css('display', 'block');
            }
            else {
                $('#' + formName + 'only').find('.btnprogramPrint').css('display', 'none');
            }
            $('#' + formName + 'only').addClass('active show');
            var _templateID = item.attr("data-TemplateID");
            if (programElement.html() != "" && undefined ? programElement.html().length : "" > 0) {
                $(".loaderOverlay").hide();
                return;
        };
        LoadChildMenu(ClientFormId);
            if (_IsSaved == 'False') {
                LoadClientFormTemplate(ClientFormId)
            }
            else {
                EditClientForm(ClientFormId, _templateID)
            }

        //})
    }
        function LoadChildMenu(ClientFormId) {
            
            $.ajax({
                type: "GET",
                url: '/Client/GetClientFormChildMenu?ClientFormId=' + ClientFormId + '&PatientId=' + _patientID,
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                beforeSend: function () {

                },
                async: true,
                success: function (result) {
                    

                    
                    var data = JSON.parse(result.data)
                    var myChildTab = $("#myChildTab");
                    if (data.length == 1 && (data[0].ParentFormID == null || data[0].ParentFormID==0)) {
                        $("#myChildTab").css("display", "none");
                    } else {

                        var myChildTab = $("#myChildTab");
                        if (data.length > 1) {
                            myChildTab.find("li").remove();
                        }

                        if (data.length > 0) {
                            
                            $("#myChildTab").css("display", "flex");
                            $('#' + formName + 'only').addClass('client-form-margin-top');
                        }
                       
                       
                        $.each(data, function (i, item) {
                            if (item.ClientFormID != ClientFormId) {
                                var formname = item.FormName.replace(/ /g, '');
                                if (item.Saved == true) {
                                    myChildTab.append(`<li class="nav-item" style="display: flex;" ><a id="${formname}" style="width: 230px;" data-FormName="${formname}" data-TemplateID="${item.TemplateID}" onclick="loadClient(this)" class="nav-link Child" href="${'#' + formname + 'only'}"data-ClientFormID="${item.ClientFormID}"data-PatientID="${item.PatientID}">
                                ${item.FormName}<span class="check" ${item.Saved}?"":style='display:none' ><i class="fas fa-check-circle"></i></span></a></li>`
                                    )
                                } else {
                                    myChildTab.append(`<li class="nav-item" style="display: flex;" ><a id="${formname}" style="width: 230px;" data-FormName="${formname}" data-TemplateID="${item.TemplateID}" onclick="loadClient(this)" class="nav-link Child" href="${'#' + formname + 'only'}"data-ClientFormID="${item.ClientFormID}"data-PatientID="${item.PatientID}">
                                ${item.FormName}<span class="check" ${item.Saved}?"":style='display:none' ></i></span></a></li>`
                                    )
                                }
                            }                           
                        });
                    }

                },
                error: function (e) {
                    toastr.error("Something happen Wrong");
                    $(".loaderOverlay").hide();
                }
            });
        }


    function LoadClientFormTemplate(ClientFormId) {

        var _ClientFormId = ClientFormId;
     $.ajax({
         type: "GET",
         url: '/Client/GetClientFormTemplateByClientFormId?ClientFormId=' + _ClientFormId,
         contentType: 'application/json; charset=UTF-8',
         dataType: "json",
          beforeSend: function () {
            $(".loaderOverlay").css('display','flex');
        },
         async: true,
         success: function (result) {
             if (result.html == "") {
                 toastr.error("No template found");
             } else {

                 programElement.html("").append(result.html);
                 tableName = result.tableName;
                 templateid = result.TemplateId;

                 if (programElement.find(".basecontentarea").length > 0) {
                     getClientFormHeaderAndFooter();

                 }
                 //getClientFormBasicFormValue(ClientFormId, _templateID)
                 programElement.find(".event-btn-right").remove();
                 programElement.find(".ck-editor-header").remove();
                 programElement.find(".question-container").parent().css("border", "none");
                 programElement.find(".dragresize").find(".question-container").remove();
                 programElement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
                 programElement.find(".html-content").prev().css("display", "none");
                 programElement.find(".html-content").parent().parent().parent().addClass("left-control");
                 programElement.find(".f-g-left").each(function (index, item) {
                     $(item).parent().parent().addClass("left-control");
                 });

                 $("textarea.program-control,textarea.base-control").summernote({
                     toolbar: [
                         ['para', ['ul', 'ol', 'paragraph']],
                         ['style', ['bold', 'italic', 'underline', 'clear']],
                         ['font', ['strikethrough', 'superscript', 'subscript']],
                     ],
                     placeholder: "Type here",
                     callbacks: {
                         onInit: function (e) {
                             this.placeholder
                                 ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                 : e.editingArea.remove(".note-placeholder")
                         }
                     },
                     height: 150,
                 });
                 toogleProgramToolTip();
                 makeClientFormBasicInfoReadonly()
                   if (programElement.find(".basecontentarea").length > 0) {
                     getClientFormBaseFieldData()
                 }


             }
              $(".loaderOverlay").hide();
         },
        error: function (e) {
             toastr.error("Something happen Wrong");
             $(".loaderOverlay").hide();
         }
     });
        }

    function getClientFormHeaderAndFooter() {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getClientFormbasetemplateid',
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            switch (result.TemplateID ) {
                case -1:
                    break;
                default:

                    basetemplateid = result;
                    $.ajax({
                        type: "GET",
                        url: '/Client/GetClientFormHtmlById?Id=' + result.TemplateID,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {
                            var baseHtml = parseHTML(result.html);
                            var baseHeader = $(baseHtml).find(".baseheader").html();
                            var baseFooter = $(baseHtml).find(".basefooter").html();
                           programElement.find(".baseheader").html("").append(baseHeader);
                            programElement.find(".basefooter").html("").append(baseFooter);
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
        }

    //Edit functions //

    function EditClientForm(ClientFormId, TemplateID)
        {
        getClientFormBasicFormHtml(ClientFormId,TemplateID)

        }

    function getClientFormBasicFormHtml(ClientFormId, id) {
        
        if (id != 0 && id!=undefined) {
            $.ajax({
                type: "GET",
                url: '/Client/GetClientFormTemplateById?TemplateId=' + id,
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                beforeSend: function () {
                    $(".loaderOverlay").css('display', 'flex');
                },
                async: true,
                success: function (result) {

                    if (result.html == "") {
                        toastr.error("No template found");
                    } else {
                        programElement.html("").append(result.html);
                        tableName = result.tableName;
                        templateid = id;
                        if (programElement.find(".basecontentarea").length > 0) {

                            getBasehtmlByClientFormId(ClientFormId);

                        }
                        programElement.find(".event-btn-right").remove();
                        programElement.find(".ck-editor-header").remove();
                        programElement.find(".question-container").parent().css("border", "none");
                        programElement.find(".dragresize").find(".question-container").remove();
                        programElement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
                        programElement.find(".html-content").prev().css("display", "none");
                        programElement.find(".html-content").parent().parent().parent().addClass("left-control");
                        programElement.find(".f-g-left").each(function (index, item) {
                            $(item).parent().parent().addClass("left-control");
                        });
                        toogleProgramToolTip();

                        $("textarea.program-control,textarea.base-control").summernote({
                            toolbar: [
                                ['para', ['ul', 'ol', 'paragraph']],
                                ['style', ['bold', 'italic', 'underline', 'clear']],
                                ['font', ['strikethrough', 'superscript', 'subscript']],
                            ],
                            placeholder: "Type here",
                            callbacks: {
                                onInit: function (e) {
                                    this.placeholder
                                        ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                        : e.editingArea.remove(".note-placeholder")
                                }
                            },
                            height: 150,
                        });
                    }
                    getClientFormBasicFormValue(ClientFormId, id)
                    $(".loaderOverlay").hide();
                },
                error: function (e) {
                    toastr.error("Something happen Wrong");
                    $(".loaderOverlay").hide();
                }
            });
        }

    }

    function toogleProgramToolTip() {

        programElement.find('span.tooltipicon').tooltip({
            trigger: "click",
            html: true,
            container: 'body'
        });
        programElement.find('span.tooltipicon').on('show.bs.tooltip', function () {
            programElement.find('span.tooltipicon').not(this).tooltip('hide');
        });
        $('body').on('click', function (e) {
            if ($(e.target).data('toggle') !== 'tooltip' && $(e.target).parents('[data-toggle="tooltip"]').length === 0
                && $(e.target).parents('.tooltip.in').length === 0) {
                (($('[data-toggle="tooltip"]').tooltip('hide').data('bs.tooltip') || {}).inState || {}).click = false;
            }
        });
    }

    function getBasehtmlByClientFormId(ClientFormId) {
    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getClientFormbasetemplateidbyClientFormid?ClientFormID=' + ClientFormId + '&&PatientId=' + _patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            
            switch (result) {
                case 0:
                    break;
                default:
                    basetemplateid = result;
                    $.ajax({
                        type: "GET",
                        url: '/Client/GetClientFormTemplateById?TemplateId=' + result,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {

                            if (result.html != "") {
                                var baseHtml = parseHTML(result.html);
                                var baseHeader = $(baseHtml).find(".baseheader").html();
                                var baseFooter = $(baseHtml).find(".basefooter").html();
                               programElement.find(".baseheader").html("").append(baseHeader);
                               programElement.find(".basefooter").html("").append(baseFooter);
                            }
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function getClientFormBasicFormValue(ClientFormID, templateid) {


        $.ajax({
            type: "GET",
            url: Apipath + '/api/PatientMain/getfieldvaluebyClientFormid?ClientFormID=' + ClientFormID + "&TemplateId=" + templateid + "&PatientId=" + _patientID,
            contentType: 'application/json; charset=UTF-8',
            dataType: "json",
            async: false,
            success: function (result) {
                
                if (result.length) {
                    var fields = result[0];
                    var value = "";
                    programElement.find(".program-control,input.custom-control-input").each(function (index, item) {
                        if ($(item).is("input")) {
                            switch ($(item).attr("type")) {
                                case "radio":
                                case "checkbox":
                                    if ($(item).hasAttr("data-column") && $(item).closest("div.inputContent").parent().hasClass("program-control")) {
                                        value = fields[$(item).attr("data-column")];

                                        if (value == null || value == "") {

                                            $(item).closest("div.inputContent").find("label.label-program").html("").show();
                                            $(item).closest("div.inputContent").find("div").first().hide();

                                        } else {
                                            var valueArr = value.split(',');
                                            var valueTxt = "";

                                            for (var i = 0; i < valueArr.length; i++) {
                                                valueTxt += $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                                            }
                                            valueTxt = valueTxt.slice(0, -2);
                                            $(item).closest("div.inputContent").find("label.label-program").html("").append(valueTxt).show();
                                            $(item).closest("div.inputContent").find("div").first().hide();

                                        }
                                    }
                                    break;
                                case "file":
                                    getClientFormModuleFiles(ClientFormID, $(item).attr("id"));

                                    $(item).hide();

                                    break;
                                default:

                                    value = fields[$(item).attr("data-column")];

                                    $(item).next().html("").append(value).show();
                                    $(item).hide();

                                    break;
                            }
                        }
                        if ($(item).is("select")) {
                            value = fields[$(item).attr("data-column")];

                            if (value == 0) {
                                value = ''
                            }
                            else {
                                value = $(item).find(`option[value=${value}]`).text();
                            }
                            $(item).next().html("").append(value).show();
                            $(item).hide();

                        }
                        if ($(item).hasClass("priority")) {
                            value = fields[$(item).attr("data-column")];
                            var splitvalues = value.split(',');

                            var result = '';

                            for (let i = 0; i < splitvalues.length; i++) {
                                if ($(item).find('li[value="' + splitvalues[i] + '"]')) {
                                    result += $(item).find('li[value="' + splitvalues[i] + '"]')[0].outerHTML;
                                }


                            }
                            if (result.length > 0) {
                                $(item).html(result);
                            }
                        }
                        if ($(item).is("textarea")) {
                            value = fields[$(item).attr("data-column")];

                            $(item).parent().find("label.label-program").html("").append(value).show();
                            $(item).next().hide();

                        }
                    });
                }
                if (programElement.find(".basecontentarea").length > 0) {
                    getClientFormBaseFieldData();
                }
            }, error: function (e) {
                toastr.error("Something happen Wrong");
                $(".loaderOverlay").hide();
            }
        })

    }

    function getClientFormBaseFieldData() {

       $.ajax({
        type: "GET",
           url: Apipath + '/api/PatientMain/getClientFormbasefieldbypatientid?Patientid=' +_patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            if (result.length) {
                var baseFields = result[0];
                var value = "";
                programElement.find(".form-control.base-control,input.custom-control-input").each(function (index, item) {
                    if ($(item).is("input")) {
                        switch ($(item).attr("type")) {
                            case "radio":
                            case "checkbox":

                                if ($(item).hasAttr("data-column")) {
                                    if ($(item).closest("div.inputContent").parent().hasClass("base-control")) {
                                        value = baseFields[$(item).attr("data-column")];
                                        if (value == null || value == "" || value == undefined) {
                                            $(item).closest("div.inputContent").find("label.label-base").html("").show();
                                                $(item).closest("div.inputContent").find("div").first().hide();
                                        } else {
                                            var valueArr = value.split(',');
                                            var valueTxt = "";
                                             for (var i = 0; i < valueArr.length; i++) {
                                                    valueTxt += $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                                                }
                                                valueTxt = valueTxt.slice(0, -2);
                                                $(item).closest("div.inputContent").find("label.label-base").html("").append(valueTxt).show();
                                                $(item).closest("div.inputContent").find("div").first().hide();
                                        }
                                    }
                                }
                                break;
                            case "file":

                                    getClientFormBaseFilesReadonly($(item).attr("id"));
                                    $(item).hide();

                                break;
                            default:

                                value = baseFields[$(item).attr("data-column")];

                                    $(item).next().html("").append(value).show();
                                    $(item).hide();

                                break;
                        }
                    }
                    if ($(item).is("select")) {
                        value = baseFields[$(item).attr("data-column")];

                        if (value == 0) {
                            value = '';
                        }
                        else {
                            value = $(item).find(`option[value=${value}]`).text();
                        }
                            $(item).next().html("").append(value).show();
                            $(item).hide();

                    }
                    if ($(item).hasClass("priority")) {
                        value = baseFields[$(item).attr("data-column")];
                        var splitvalues = value.split(',');

                        var result = '';

                        for (let i = 0; i < splitvalues.length; i++) {
                            if($(item).find('li[value="' + splitvalues[i] + '"]'))
                             {
                               result += $(item).find('li[value="' + splitvalues[i] + '"]')[0].outerHTML;
                             }

                        }
                        if (result.length > 0) {
                            $(item).html(result);
                        }
                    }
                    if ($(item).is("textarea")) {
                        value = baseFields[$(item).attr("data-column")];

                            $(item).parent().find("label.label-base").html("").append(value).show();
                            $(item).next().hide();

                    }
                });
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }

    function getClientFormBaseFilesReadonly(Id) {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getClientFormbasefilesbypatientid?PatientId=' + _patientID + '&controlid=' + Id,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            if (result != "" && result != null) {

                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = `<ul class="file_uploaded_list onlylinkslist">`;
                var ext = "";
                for (var i = 0; i < filesArr.length; i++) {
                     ext = filesArr[i].split('.').pop();
                    switch (ext) {
                        case "png":
                        case "jpg":
                        case "jpeg":
                            selectedFiles += '<li><img style="max-width: 90px;margin-right: 10px;" src="/' + programUploadedPath + filesArr[i] + '" alt="Care Plan Upload"><span><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></span></li>';
                            break;
                         default:
                            selectedFiles += '<li><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></li>';
                            break;
                    }

                }
                selectedFiles += `</ul>`;
                programElement.find('#'+Id).next().next().html("").append(selectedFiles);
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function getClientFormModuleFiles(ClientFormId, Id) {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getfilesbyClientFormid?ClientFormID=' + ClientFormId +'&controlid='+Id+'&patientid='+_patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            if (result != "" && result != null) {
                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = "";
                selectedFiles = `<ul class="file_uploaded_list onlylinkslist">`;
                    var ext = "";
                    for (var i = 0; i < filesArr.length; i++) {
                         ext = filesArr[i].split('.').pop();
                        switch (ext) {
                            case "png":
                            case "jpg":
                            case "jpeg":
                                selectedFiles += '<li><img style="max-width: 90px;margin-right: 10px;" src="/' + programUploadedPath + filesArr[i] + '" alt="Program Upload"><span><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></span></li>';
                                break;
                            default:
                                selectedFiles += '<li><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></li>';
                                break;
                        }

                    }
                    selectedFiles += `</ul>`;
                programElement.find("#"+ Id).next().next().html("").append(selectedFiles);
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function makeClientFormBasicInfoReadonly() {
   // $("#ddlcareplanstatus").addClass("show_careplanstatus").val("1");

    var value = "";
   // isupdateProgramFields = false;
    $("a.need-nav,a.summary-nav").parent().removeClass("disabled");
    programElement.find(".program-control,.base-control").each(function (index, item) {
        if ($(item).is("div")) {
            var selectedValues = $.map($(item).find("input:checked"), function (n, i) {
                return n.value;
            }).join(',');
            if (selectedValues == "") {
                if ($(item).hasClass("base-control")) {
                    $(item).find("label.label-base").html("").show();
                    $(item).find("div.inputContent").find("div").first().hide();
                } else {
                    $(item).find("label.label-program").html("").show();
                    $(item).find("div.inputContent").find("div").first().hide();
                }
            } else {
                var valueArr = selectedValues.split(',');
                var valueTxt = "";
                for (var i = 0; i < valueArr.length; i++) {
                    valueTxt += $(item).find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                }
                valueTxt = valueTxt.slice(0, -2);
                if ($(item).hasClass("base-control")) {
                    $(item).find("label.label-base").html("").append(valueTxt).show();
                    $(item).find("div.inputContent").find("div").first().hide();
                } else {
                    $(item).find("label.label-program").html("").append(valueTxt).show();
                    $(item).find("div.inputContent").find("div").first().hide();
                }

            }
        }
        if ($(item).is("input")) {
            switch ($(item).attr("type")) {
                case "file":
                    if ($(item).hasClass("base-control") && $(item).hasAttr("data-column")) {
                        getBaseFilesReadonly($(item).attr("id"));
                    } else if ($(item).hasClass("program-control") && $(item).hasAttr("data-column")) {
                        getProgramFiles(careplanid, $(item).attr("id"))
                    }
                    $(item).hide();
                    break;
                default:
                    value = $(item).val();
                    $(item).next().html("").append(value).show();
                    $(item).hide();
                    break;
            }
        }
        if ($(item).is("select")) {
            value=$(item).find('option:selected').val();
            if (value == 0) {
                value = '';
            }
            else {
                 value = $(item).find('option:selected').text();
            }
            $(item).next().html("").append(value).show();
            $(item).hide();
        }
        if ($(item).is("textarea")) {
            value = $(item).summernote('code');
            if ($(item).hasClass("base-control")) {
                $(item).parent().find("label.label-base").html("").append(value).show();
            } else {
                $(item).parent().find("label.label-program").html("").append(value).show();
            }
            $(item).next().hide();
        }
    });
}

    $('#btnAMDProfile').click(function () {
       var PatientObject=  @Html.Raw(Json.Encode(Model.PatientMain));
          $('#AMDProfile .modal-body').html("")

          $.ajax({
              type: "Post",
              url: '/Client/GetAMDProfile',
              data: JSON.stringify(PatientObject),
              contentType: "application/json; charset=utf-8",
              dataType: "html",
              success: function (data) {
                  if (data == '0') {
                      toastr.error("No data available");
                  }
                  else if (data == '1') {
                      toastr.error("multiple records available");
                  }
                  else {
                      $('#AMDProfile .modal-body').html(data)
                      $('#AMDProfile').modal('show');
                  }

              },
              error: function (e) {
                  toastr.error("Error AMDProfile Data.");
              }
          });

      })

    function InsertBadge(statusele,status) {
          var badge=''
          if (status == 'crisis') {
              badge = '<span class="badge badge-danger" style="height:10px; position:relative; top:4px;">&nbsp; &nbsp;</span>'
          }
          else if (status == 'secure') {
              badge ='<span class="badge badge-success" style="height:10px; position:relative; top:4px;">&nbsp; &nbsp;</span>'
          }
          else if (status =='struggling') {
              badge ='<span class="badge badge-warning" style="height:10px; position:relative; top:4px;background-color:#ecec04!important">&nbsp; &nbsp;</span>'
          }
          else if (status == 'at risk') {
              badge ='<span class="badge badge-warning"style="height:10px; position:relative; top:4px; background-color:#FF8C00!important">&nbsp; &nbsp;</span>'
          }

          $(statusele).parent().append(badge)
    }


    // Program code start here ......


    $("#tabPills .nav-item a").on('click', function (e) {

               $('#Programs .tab-pane').each(function (index, item) {
                    $(item).removeClass("active show");
               });

        var item = $(this);
        
        var _programId = item.attr("data-ProgramID")
        programName = item.attr("data-programName");
        programElement = $("#" + programName + "render-basicform");
        var _IsSaved =$('#' + programName + 'only').find('.btnprogramsave').attr('data-save');
        
        if (_IsSaved == 'True') {
            $('#' + programName + 'only').find('.btnprogramPrint').css('display','block');
        }
        else {
            $('#' + programName + 'only').find('.btnprogramPrint').css('display','none');
        }
         $('#' + programName + 'only').addClass('active show');
        var _templateID = item.attr("data-TemplateID");
        if (programElement.html().length > 0) {
             $(".loaderOverlay").hide();
                 return;
             } ;
        if (_IsSaved == 'False') {
            LoadProgramTemplate(_programId)
        }
        else {
            EditPrograms(_programId,_templateID)
        }

    })

    function LoadProgramTemplate(_programId) {

    var programid = _programId;
     $.ajax({
         type: "GET",
         url: '/program/GetProgramTemplateByProgramId?ProgramId=' + programid,
         contentType: 'application/json; charset=UTF-8',
         dataType: "json",
          beforeSend: function () {
            $(".loaderOverlay").css('display','flex');
        },
         async: true,
         success: function (result) {
             if (result.html == "") {
                 toastr.error("No template found");
             } else {

                 programElement.html("").append(result.html);
                 tableName = result.tableName;
                 templateid = result.TemplateId;

                 if (programElement.find(".basecontentarea").length > 0) {
                     getProgramHeaderAndFooter();

                 }

                 programElement.find(".event-btn-right").remove();
                 programElement.find(".ck-editor-header").remove();
                 programElement.find(".question-container").parent().css("border", "none");
                 programElement.find(".dragresize").find(".question-container").remove();
                 programElement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
                 programElement.find(".html-content").prev().css("display", "none");
                 programElement.find(".html-content").parent().parent().parent().addClass("left-control");
                 programElement.find(".f-g-left").each(function (index, item) {
                     $(item).parent().parent().addClass("left-control");
                 });

                 $("textarea.program-control,textarea.base-control").summernote({
                     toolbar: [
                         ['para', ['ul', 'ol', 'paragraph']],
                         ['style', ['bold', 'italic', 'underline', 'clear']],
                         ['font', ['strikethrough', 'superscript', 'subscript']],
                     ],
                     placeholder: "Type here",
                     callbacks: {
                         onInit: function (e) {
                             this.placeholder
                                 ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                 : e.editingArea.remove(".note-placeholder")
                         }
                     },
                     height: 150,
                 });
                 toogleProgramToolTip();
                 makeProgramBasicInfoReadonly()
                   if (programElement.find(".basecontentarea").length > 0) {
                     getProgramBaseFieldData()
                 }


             }
              $(".loaderOverlay").hide();
         },
        error: function (e) {
             toastr.error("Something happen Wrong");
             $(".loaderOverlay").hide();
         }
     });
        }

    function getProgramHeaderAndFooter() {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasetemplateid',
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            switch (result.TemplateID ) {
                case -1:
                    break;
                default:

                    basetemplateid = result;
                    $.ajax({
                        type: "GET",
                        url: '/program/GetFormHtmlById?Id=' + result.TemplateID,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {
                            var baseHtml = parseHTML(result.html);
                            var baseHeader = $(baseHtml).find(".baseheader").html();
                            var baseFooter = $(baseHtml).find(".basefooter").html();
                           programElement.find(".baseheader").html("").append(baseHeader);
                            programElement.find(".basefooter").html("").append(baseFooter);
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
        }

    //Edit functions //

    function EditPrograms(ProgramID, TemplateID)
        {
        getProgramBasicFormHtml(ProgramID,TemplateID)

        }

    function getProgramBasicFormHtml(ProgramID,id) {

    $.ajax({
        type: "GET",
        url: '/program/GetProgramTemplateById?TemplateId=' + id,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        beforeSend: function () {
            $(".loaderOverlay").css('display','flex');
        },
        async: true,
        success: function (result) {

            if (result.html == "") {
                toastr.error("No template found");
            } else {
                programElement.html("").append(result.html);
                tableName = result.tableName;
                templateid = id;
                if (programElement.find(".basecontentarea").length > 0) {

                    getBasehtmlByProgramId(ProgramID);

                }
                 programElement.find(".event-btn-right").remove();
                 programElement.find(".ck-editor-header").remove();
                 programElement.find(".question-container").parent().css("border", "none");
                 programElement.find(".dragresize").find(".question-container").remove();
                 programElement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
                 programElement.find(".html-content").prev().css("display", "none");
                 programElement.find(".html-content").parent().parent().parent().addClass("left-control");
                 programElement.find(".f-g-left").each(function (index, item) {
                 $(item).parent().parent().addClass("left-control");
                });
                toogleProgramToolTip();

                $("textarea.program-control,textarea.base-control").summernote({
                    toolbar: [
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['font', ['strikethrough', 'superscript', 'subscript']],
                    ],
                    placeholder: "Type here",
                    callbacks: {
                        onInit: function (e) {
                            this.placeholder
                                ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                : e.editingArea.remove(".note-placeholder")
                        }
                    },
                    height: 150,
                });
            }
            getProgramBasicFormValue(ProgramID, id)
             $(".loaderOverlay").hide();
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });

    }

    function getBasehtmlByProgramId(programid) {
    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasetemplateidbyprogramid?ProgramID=' + programid + '&&PatientId=' + _patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            switch (result) {
                case 0:
                    break;
                default:
                    basetemplateid = result;
                    $.ajax({
                        type: "GET",
                        url: '/program/GetProgramTemplateById?TemplateId=' + result,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {

                            if (result.html != "") {
                                var baseHtml = parseHTML(result.html);
                                var baseHeader = $(baseHtml).find(".baseheader").html();
                                var baseFooter = $(baseHtml).find(".basefooter").html();
                               programElement.find(".baseheader").html("").append(baseHeader);
                               programElement.find(".basefooter").html("").append(baseFooter);
                            }
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function getProgramBasicFormValue(programid, templateid) {


    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getfieldvaluebyprogramid?ProgramId=' + programid + "&TemplateId="+templateid+ "&PatientId="+_patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            if (result.length) {
                var fields = result[0];
                var value = "";
                programElement.find(".program-control,input.custom-control-input").each(function (index, item) {
                    if ($(item).is("input")) {
                        switch ($(item).attr("type")) {
                            case "radio":
                            case "checkbox":
                                if ($(item).hasAttr("data-column") && $(item).closest("div.inputContent").parent().hasClass("program-control")) {
                                    value = fields[$(item).attr("data-column")];

                                    if (value == null || value == "") {

                                            $(item).closest("div.inputContent").find("label.label-program").html("").show();
                                            $(item).closest("div.inputContent").find("div").first().hide();

                                    } else {
                                        var valueArr = value.split(',');
                                        var valueTxt = "";

                                            for (var i = 0; i < valueArr.length; i++) {
                                                valueTxt += $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                                            }
                                            valueTxt = valueTxt.slice(0, -2);
                                            $(item).closest("div.inputContent").find("label.label-program").html("").append(valueTxt).show();
                                            $(item).closest("div.inputContent").find("div").first().hide();

                                    }
                                }
                                break;
                            case "file":
                                getProgramModuleFiles(programid, $(item).attr("id"));

                                 $(item).hide();

                                break;
                            default:

                                value = fields[$(item).attr("data-column")];

                                    $(item).next().html("").append(value).show();
                                    $(item).hide();

                                break;
                        }
                    }
                    if ($(item).is("select")) {
                        value = fields[$(item).attr("data-column")];

                        if (value == 0) {
                            value=''
                        }
                        else {
                             value = $(item).find(`option[value=${value}]`).text();
                        }
                            $(item).next().html("").append(value).show();
                            $(item).hide();

                    }
                    if ($(item).hasClass("priority")) {
                        value = fields[$(item).attr("data-column")];
                        var splitvalues = value.split(',');

                        var result = '';

                        for (let i = 0; i < splitvalues.length; i++) {
                            if($(item).find('li[value="' + splitvalues[i] + '"]')){
                              result += $(item).find('li[value="' + splitvalues[i] + '"]')[0].outerHTML;
                     }


                        }
                        if (result.length > 0) {
                            $(item).html(result);
                        }
                    }
                    if ($(item).is("textarea")) {
                        value = fields[$(item).attr("data-column")];

                            $(item).parent().find("label.label-program").html("").append(value).show();
                            $(item).next().hide();

                    }
                });
            }
            if (programElement.find(".basecontentarea").length > 0) {
                getProgramBaseFieldData();
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    })

    }

    function getProgramBaseFieldData() {

       $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasefieldbypatientid?Patientid=' +_patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            if (result.length) {
                var baseFields = result[0];
                var value = "";
                programElement.find(".form-control.base-control,input.custom-control-input").each(function (index, item) {
                    if ($(item).is("input")) {
                        switch ($(item).attr("type")) {
                            case "radio":
                            case "checkbox":

                                if ($(item).hasAttr("data-column")) {
                                    if ($(item).closest("div.inputContent").parent().hasClass("base-control")) {
                                        value = baseFields[$(item).attr("data-column")];
                                        if (value == null || value == "" || value == undefined) {
                                            $(item).closest("div.inputContent").find("label.label-base").html("").show();
                                                $(item).closest("div.inputContent").find("div").first().hide();
                                        } else {
                                            var valueArr = value.split(',');
                                            var valueTxt = "";
                                             for (var i = 0; i < valueArr.length; i++) {
                                                    valueTxt += $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                                                }
                                                valueTxt = valueTxt.slice(0, -2);
                                                $(item).closest("div.inputContent").find("label.label-base").html("").append(valueTxt).show();
                                                $(item).closest("div.inputContent").find("div").first().hide();
                                        }
                                    }
                                }
                                break;
                            case "file":

                                    getProgramBaseFilesReadonly($(item).attr("id"));
                                    $(item).hide();

                                break;
                            default:

                                value = baseFields[$(item).attr("data-column")];

                                    $(item).next().html("").append(value).show();
                                    $(item).hide();

                                break;
                        }
                    }
                    if ($(item).is("select")) {
                        value = baseFields[$(item).attr("data-column")];

                        if (value == 0) {
                            value = '';
                        }
                        else {
                            value = $(item).find(`option[value=${value}]`).text();
                        }
                            $(item).next().html("").append(value).show();
                            $(item).hide();

                    }
                    if ($(item).hasClass("priority")) {
                        value = baseFields[$(item).attr("data-column")];
                        var splitvalues = value.split(',');

                        var result = '';

                        for (let i = 0; i < splitvalues.length; i++) {
                            if($(item).find('li[value="' + splitvalues[i] + '"]'))
                             {
                               result += $(item).find('li[value="' + splitvalues[i] + '"]')[0].outerHTML;
                             }

                        }
                        if (result.length > 0) {
                            $(item).html(result);
                        }
                    }
                    if ($(item).is("textarea")) {
                        value = baseFields[$(item).attr("data-column")];

                            $(item).parent().find("label.label-base").html("").append(value).show();
                            $(item).next().hide();

                    }
                });
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }

    function getProgramBaseFilesReadonly(Id) {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasefilesbypatientid?PatientId=' + _patientID + '&controlid=' + Id,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            if (result != "" && result != null) {

                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = `<ul class="file_uploaded_list onlylinkslist">`;
                var ext = "";
                for (var i = 0; i < filesArr.length; i++) {
                     ext = filesArr[i].split('.').pop();
                    switch (ext) {
                        case "png":
                        case "jpg":
                        case "jpeg":
                            selectedFiles += '<li><img style="max-width: 90px;margin-right: 10px;" src="/' + programUploadedPath + filesArr[i] + '" alt="Care Plan Upload"><span><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></span></li>';
                            break;
                         default:
                            selectedFiles += '<li><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></li>';
                            break;
                    }

                }
                selectedFiles += `</ul>`;
                programElement.find('#'+Id).next().next().html("").append(selectedFiles);
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function getProgramModuleFiles(programid, Id) {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/GetFilesByProgramID?Programid=' + programid +'&controlid='+Id+'&patientid='+_patientID,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            if (result != "" && result != null) {
                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = "";
                selectedFiles = `<ul class="file_uploaded_list onlylinkslist">`;
                    var ext = "";
                    for (var i = 0; i < filesArr.length; i++) {
                         ext = filesArr[i].split('.').pop();
                        switch (ext) {
                            case "png":
                            case "jpg":
                            case "jpeg":
                                selectedFiles += '<li><img style="max-width: 90px;margin-right: 10px;" src="/' + programUploadedPath + filesArr[i] + '" alt="Program Upload"><span><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></span></li>';
                                break;
                            default:
                                selectedFiles += '<li><a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a></li>';
                                break;
                        }

                    }
                    selectedFiles += `</ul>`;
                programElement.find("#"+ Id).next().next().html("").append(selectedFiles);
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function makeProgramBasicInfoReadonly() {
   // $("#ddlcareplanstatus").addClass("show_careplanstatus").val("1");

    var value = "";
   // isupdateProgramFields = false;
    $("a.need-nav,a.summary-nav").parent().removeClass("disabled");
    programElement.find(".program-control,.base-control").each(function (index, item) {
        if ($(item).is("div")) {
            var selectedValues = $.map($(item).find("input:checked"), function (n, i) {
                return n.value;
            }).join(',');
            if (selectedValues == "") {
                if ($(item).hasClass("base-control")) {
                    $(item).find("label.label-base").html("").show();
                    $(item).find("div.inputContent").find("div").first().hide();
                } else {
                    $(item).find("label.label-program").html("").show();
                    $(item).find("div.inputContent").find("div").first().hide();
                }
            } else {
                var valueArr = selectedValues.split(',');
                var valueTxt = "";
                for (var i = 0; i < valueArr.length; i++) {
                    valueTxt += $(item).find(`input[value=${valueArr[i]}]`).next().text() + ", ";
                }
                valueTxt = valueTxt.slice(0, -2);
                if ($(item).hasClass("base-control")) {
                    $(item).find("label.label-base").html("").append(valueTxt).show();
                    $(item).find("div.inputContent").find("div").first().hide();
                } else {
                    $(item).find("label.label-program").html("").append(valueTxt).show();
                    $(item).find("div.inputContent").find("div").first().hide();
                }

            }
        }
        if ($(item).is("input")) {
            switch ($(item).attr("type")) {
                case "file":
                    if ($(item).hasClass("base-control") && $(item).hasAttr("data-column")) {
                        getBaseFilesReadonly($(item).attr("id"));
                    } else if ($(item).hasClass("program-control") && $(item).hasAttr("data-column")) {
                        getProgramFiles(careplanid, $(item).attr("id"))
                    }
                    $(item).hide();
                    break;
                default:
                    value = $(item).val();
                    $(item).next().html("").append(value).show();
                    $(item).hide();
                    break;
            }
        }
        if ($(item).is("select")) {
            value=$(item).find('option:selected').val();
            if (value == 0) {
                value = '';
            }
            else {
                 value = $(item).find('option:selected').text();
            }
            $(item).next().html("").append(value).show();
            $(item).hide();
        }
        if ($(item).is("textarea")) {
            value = $(item).summernote('code');
            if ($(item).hasClass("base-control")) {
                $(item).parent().find("label.label-base").html("").append(value).show();
            } else {
                $(item).parent().find("label.label-program").html("").append(value).show();
            }
            $(item).next().hide();
        }
    });
        
       
}

    </script>
