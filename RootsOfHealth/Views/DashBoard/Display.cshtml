
@{
    ViewBag.Title = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .imagebox img {
        max-width: 100%;
        width: 100%;
    }
    ul#DashboardpatientList {
        list-style-type: none;
        padding: 0;
    }
        ul#DashboardpatientList li {
            display: flex;
            border-bottom: 1px solid #eee;
            padding: 10px 15px;
        }
    .imagebox {
        max-width: 50px;
        flex: 0 0 50px;
        margin-right: 10px;
    }
    .count-item {
        background: #f5f5f5;
        padding: 15px;
        text-align: center;
        display: table;
        width: 100%;
        border: 1px solid #e7e7e7;
    }

    .count-icon {
        margin: 0 auto;
        width: 65px;
        height: 65px;
        background: #fff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #ececec;
        font-size: 22px;
    }

    .middle-item {
        display: table-cell;
        vertical-align: middle;
    }

    .count-text {
        display: block
    }

        .count-text b {
            font-weight: 600;
            font-size: 30px;
            width: 100%;
            float: left;
        }

        .count-text small {
            font-size: 14px;
        }

    .patienList-wrapper {
        margin: 30px 0;
    }

    .patienList {
        display: block;
        text-align: left;
        padding: 0;
        background: #fff;
        float: left
    }

    .patientHeading {
        background: #f5f5f5;
        padding: 10px 15px;
        border-bottom: 1px solid #e7e7e7;
        font-size: 17px;
        color: #414242;
        font-weight: 500;
    }

    .patientListbox {
        float: left;
        width: 100%;
    }

        .patientListbox .scroll {
            padding: 0px;
        }

    .appointment.dashboard-main {
        /*height: 560px;*/
        overflow-y: scroll;
    }

    /* width */
    .dashboard-main::-webkit-scrollbar,
    .patientListbox .scroll::-webkit-scrollbar,
    .AppointmentListbox .scroll::-webkit-scrollbar,
    .DueListbox .scroll::-webkit-scrollbar {
        width: 8px;
    }

    .dashboard-main::-webkit-scrollbar-track,
    .patientListbox .scroll::-webkit-scrollbar-track,
    .AppointmentListbox .scroll::-webkit-scrollbar-track,
    .DueListbox .scroll::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .dashboard-main::-webkit-scrollbar-thumb,
    .patientListbox .scroll::-webkit-scrollbar-thumb,
    .AppointmentListbox .scroll::-webkit-scrollbar-thumb,
    .DueListbox .scroll::-webkit-scrollbar-thumb {
        background: #ccc;
    }

    .AppointmentListbox .scroll, .DueListbox .scroll {
        padding: 15px;
        float: left;
    }


    /* Handle on hover */
    /*.dashboard-main::-webkit-scrollbar-thumb:hover {
            background: #666;
        }*/
    .inner-content.dashboardWrapper {
        margin: 0 !important;
    }

    .AppointmentListbox .appointement-row {
        background: #f8f8f8;
        border: 1px solid #e2e2e2;
        box-sizing: border-box;
        float: left;
        width: 100%;
        margin-bottom: 15px;
        display: flex;
        padding: 15px;
       
    }

    .AppointmentListbox .calender-img {
        max-width: 10%;
        margin-right: 2% !important;
        flex: 0 0 10%;
    }

    .AppointmentListbox h6 {
        flex: 0 0 88%;
        max-width: 88%;
    }

    .AppointmentListbox .appointement-row p {
        float: left;
        width: 100%;
        font-size: 13px;
        margin: 0;
    }

    .AppointmentListbox {
        float: left;
        height: 450px;
    }

        .AppointmentListbox .appointement-row h6 span {
            font-size: 14px;
            color: #343434;
        }

    span.expandicon {
        float: right;
        position: relative
    }

    .exp-m {
        display: none;
    }

    .patientLisHeading.expand .exp-m {
        display: block;
    }

    .patientLisHeading.expand .exp-p {
        display: none;
    }

    .AppointmentList.expand .exp-m {
        display: block;
    }

    .AppointmentList.expand .exp-p {
        display: none;
    }

    .patientStats.expand .exp-m {
        display: block;
    }

    .patientStats.expand .exp-p {
        display: none;
    }

    .formduelist.expand .exp-m {
        display: block;
    }

    .formduelist.expand .exp-p {
        display: none;
    }
    .patientCount.expand .exp-m {
        display: block;
    }

    .patientCount.expand .exp-p {
        display: none;
    }

    .AgeGroupList.expand .exp-m {
        display: block;
    }

    .AgeGroupList.expand .exp-p {
        display: none;
    }
    .programStats.expand .exp-m {
        display: block;
    }

    .programStats.expand .exp-p {
        display: none;
    }
    .DueListbox table.table th, .DueListbox table.table td {
        line-height: normal;
        font-size: 13px;
        border: 0;
    }

    .DueListbox, .patientListbox, .AppointmentListbox, .ConditionListbox, .programListbox {
        height: 280px;
    }

        .DueListbox table {
            border: 1px solid #ddd;
        }

            .DueListbox table.table tr {
                border-top: 1px solid #ddd;
            }

            .DueListbox table tr:nth-child(even) td {
                background: #f4fffd;
            }

    .ConditionListbox, .patientCountListbox {
        padding: 15px;
        box-sizing: border-box;
    }
    .patientCountListbox, .AgeGroupListbox {
        height: 300px;
    }
        .show-more a {
            color: #05a489;
            font-size: 13px;
            padding: 0;
        }
    .patientListbox .recent-paitents-img {
        width: 65px !important;
        overflow: hidden;
        border-radius: 50%;
        height: 50px;
        display: table;
    }
    .patientListbox table.table td {
        width: auto !important;
    }
    .patientListbox table.table th {
        width: 25% !important;
    }
    .programListboxWrap {
        max-height: 280px;
        overflow: auto;
    }
    /* width */
    .programListboxWrap::-webkit-scrollbar {
        height: 8px;        
        width: 8px;
    }
    .programListboxWrap::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    .programListboxWrap::-webkit-scrollbar-thumb {
        background: #ccc;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.css" crossorigin="anonymous" type="text/css">

<section id="content" class="responsive-container pt-0">
    <div class="inner-content dashboardWrapper">
      
        <div class="container-fluid pl-0 pr-0">
            <div class="appointment dashboard-main">
                <h2>DashBoard</h2>
                <div class="patienList-wrapper">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="count-item patienList">
                                <div class="patientHeading patientCount">
                                    Client Count
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="patientCountListbox">
                                    <canvas id="patientCountChart"  style="padding:5px;margin: auto;display: block; height:249px !important; "></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="count-item patienList">
                                <div class="patientHeading AgeGroupList">
                                    Age Group
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="AgeGroupListbox">
                                    
                                    <canvas id="agegroupChart" style="padding:5px;margin: auto;display: block; "></canvas>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="patienList-wrapper">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="count-item patienList">
                                <div class="patientHeading patientLisHeading">
                                    Recent Client
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="patientListbox">
                                    <div class="scroll">
                                       
                                        <ul id="DashboardpatientList"></ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="count-item patienList">
                                <div class="patientHeading formduelist">
                                    Recent  Form Due
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="DueListbox">
                                    <div class="scroll">
                                        
                                        <table class="table frmtbl">
                                            <thead class="thead-light">
                                                <tr>
                                                    <th>Client</th>
                                                    <th>Form</th>
                                                    <th>Status</th>
                                                </tr>
                                            </thead>
                                            <tbody class="Duebody">

                                                <tr></tr>

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="count-item patienList">
                                <div class="patientHeading AppointmentList">
                                    Recent Appointment
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="AppointmentListbox">
                                    

                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="patienGraph-wrapper">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="count-item patienList">
                                <div class="patientHeading patientStats">
                                    Client Condition
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                <div class="ConditionListbox">
                                   
                                    <canvas id="myChart" style="padding:5px;margin: auto;display: block; "></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="count-item patienList">
                                <div class="patientHeading programStats">
                                    Program Count
                                    <span class="expandicon">
                                        <i class="fa fa-minus exp-p" aria-hidden="true"></i>
                                        <i class="fa fa-plus exp-m" aria-hidden="true"></i>
                                    </span>
                                </div>
                                @*<div class="programListboxWrap">*@
                                    @*<div class="programListbox" style="height:430px; width:860px;">*@
                                    <div class="programListbox" >
                                        <canvas id="programChart" style="padding:5px;margin: auto;display: block; "></canvas>
                                    </div>
                                @*</div>*@
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
</section>

@section scripts{

    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js" crossorigin="anonymous"></script>
    <script src="~/Scripts/chartjs-plugin-labels.min.js"></script>
    <script>
        var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]';
       
        $(function () {
            var clinicid ='@Session["ClinicID"]';
            PatientCount(clinicid);
            
        });

        function ProgramChart(result) {
           
            var Labels = result.map(c => c.ProgramName);

            var BackGroudColor = ["rgb(60, 179, 113)", "rgb(30, 144, 255)", "rgb(238, 130, 238)", "rgb(211, 211, 211)"];
            var borderColor = ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)"]

            var resultBackgroundColor = [];
            var resultBorderColor = [];
                  j = 0;
                for (var i = 0; i < Labels.length; i++) {
                    if (j == 4) {
                        j = 0;
                    }
                    resultBackgroundColor.push(BackGroudColor[j])
                    resultBorderColor.push(borderColor[j])
                    j++;
                }
            
             
            var aDatasets1 = result.map(c => c.ProgramCount);
            
                    var dataT = {
                        labels: Labels,
                        datasets: [{
                            label: "Client Count",
                            data: aDatasets1,
                            fill: false,
                            backgroundColor: resultBackgroundColor,
                            borderColor: resultBorderColor,
                            borderWidth: 0
                        }]
                    };
                    var ctx = document.getElementById('programChart').getContext('2d');
                    var myBarChart = new Chart(ctx, {
                        type: 'bar',
                        data: dataT,
                        options: {
                            plugins: {
                                labels: false
                            },
                            "hover": {
                                "animationDuration": 0
                            },
                            "animation": {
                                "duration": 1,
                                "onComplete": function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;

                                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'bottom';
                                    
                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                        });
                                    });
                                }
                            },
                            legend: {
                                "display": false
                            },
                            tooltips: {
                                "enabled": false
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            title: { display: true, text: 'Program Count', fontSize: 15 },
                            scales: {
                                xAxes: [{
                                    barPercentage: 0.4,
                                   
                                    gridLines: {
                                        offsetGridLines: true
                                    }
                                }]
                            }

                        }
                    });
                   
             
        }
        function PatientCount(id) {
           
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/Getpatientcount?clinicid=' + id,
                contentType: 'application/json; charset=UTF-8',
                dataType: "json",
                success: function (result) {
                    
                  
                    var aDatasets1 = [result.PatientCount.TotalPatient, result.PatientCount.MalePatient, result.PatientCount.FemalePatient, result.PatientCount.TransMale, result.PatientCount.TransFemale, result.PatientCount.GenderQueer, result.PatientCount.Other];

                    var dataT = {
                        labels: ['Total', 'Male', 'Female', 'Trans male', 'Trans female', 'Gender Queer','Other'],
                        datasets: [{
                            label: "Client Count",
                            data: aDatasets1,
                            fill: false,
                            backgroundColor: ["rgb(60, 179, 113)", "rgb(30, 144, 255)", "rgb(238, 130, 238)", "rgb(211, 211, 211)", "rgb(255, 165, 0)", "rgb(106, 90, 205)", "rgb(255, 99, 71)"],
                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)"],
                            borderWidth: 0
                        }]
                    };
                    var ctx = document.getElementById('patientCountChart').getContext('2d');
                    
                    var myBarChart = new Chart(ctx, {
                        type: 'pie',
                        data: dataT,
                        options: {
                            plugins: {
                                labels: {
                                    render: 'value',
                                }
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            title: { display: false, text: 'CHART.JS DEMO CHART' },
                            legend: {
                                display: true,
                                position: "bottom",
                                labels: {
                                    fontColor: "#333",
                                    fontSize: 15
                                }
                            }
                            
                        }
                    });
                    RecentPatient(result.RecentPatient);
                    RecentAppotment(result.PatientAppointment);
                    PatientStats(result.PatientStatus);
                    PatientFormStatus(result.PatientFormSatus);
                    PatientAgeGroup(result.PatientAgeGroup);
                    ProgramChart(result.PatientProgramCount);
                }
            });
        }

        function RecentPatient(result) {
                    if (result.length) {
                        $("#DashboardpatientList").html('');
                        var tbl = '';
                        for (var i = 0; i < result.length; i++) {
                            if (result[i].EmailAddress == null) { result[i].EmailAddress = ''; }
                            if (result[i].SocialSecurityNumber == null) { result[i].SocialSecurityNumber = ''; }


                            tbl += '<li style="cursor: pointer;" onclick="bindTopPatient(' + result[i].PatientID + ')">'
                            if (result[i].PatientImg == '' || result[i].PatientImg == null) {
                                tbl += '<div class="imagebox"><img src="/images/avatar.png" alt=""> </div>'
                            } else {
                                tbl += '<div class="imagebox"><img src="/Files/' + result[i].PatientImg + '" alt=""> </div>'
                            }
                            tbl += '<div class="searchDeatails">'
                            tbl += '<span>Name:' + result[i].FirstName + ' ' + result[i].MiddleName + ' ' + result[i].LastName + '</span >'
                            tbl += '<span>Phone No.: ' + result[i].HomePhone + '</span >'
                            tbl += '<span>City: ' + result[i].City + '</span > </div> </li>'


                        }
                       
                        $("#DashboardpatientList").html(tbl);




                    }
      
        }

        function RecentAppotment(data) {
                    if (data.length) {

                        var tbl = '';
                        tbl += '<div class="scroll">';
                        for (var i = 0; i < data.length; i++) {

                            tbl += '<div class="appointement-row" id="appointementDashbordrow">'
                            tbl += '<div class="calender-img">'
                            tbl += '<img src="/images/calender-icon.png" alt=""></div>'
                            tbl += '<h6>'
                            tbl += '<span class="date">Date:' + $.date(data[i].AppointmentDate) + '</span>,'
                            tbl += '<span  class="time">'
                            tbl += ' Time:' + data[i].AppointmentTime + '</span>'
                            tbl += '<p  class="content hideContent"> Client: <a href="#" onclick="bindTopPatient(' + data[i].PatientID + ')">' + data[i].PatientName +"</a></br>"+ data[i].Notes + '</p > <div class="show-more">'
                            if (data[i].Notes.length > 100) {
                                tbl += '<a href="#!" id="' + data[i].PatientAppointmentID + '" onclick="ShowMore(' +  data[i].PatientAppointmentID + ')" class="btn btn-link" >read more</a>'
                            }
                            tbl += '</div ></h6></div>'

                        }
                        tbl += "</div>";
                        $('.AppointmentListbox').html(tbl);

                    }
        }
       
        function bindTopPatient(id) {

            window.location = '/Client/Info?patientid=' + id;
        }
        function PatientStats(result) {
           
                    var aDatasets1 = [result.SecureCount, result.StrugglingCount, result.AtriskCount, result.CrisisCount];

                    var dataT = {
                        labels: ['Secure','Struggling','At risk','Crisis'],
                        datasets: [{
                            label: "Client Count",
                            data: aDatasets1,
                            fill: false,
                            backgroundColor: ["rgb(57, 172, 57)", "rgb(255, 255, 51)", "rgb(255, 140, 26)", "rgb(255, 77, 77)"  ],
                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)"],
                            borderWidth: 0
                        }]
                    };
                    var ctx = document.getElementById('myChart').getContext('2d');
                    var myBarChart = new Chart(ctx, {
                        type: 'bar',
                        data: dataT,
                        options: {
                            plugins: {
                                labels: false
                            },
                            "hover": {
                                "animationDuration": 0
                            },
                            "animation": {
                                "duration": 1,
                                "onComplete": function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;

                                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'bottom';

                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                        });
                                    });
                                }
                            },
                            legend: {
                                "display": false
                            },
                            tooltips: {
                                "enabled": false
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            title: { display: true, text: 'Client Condition', fontSize: 15 },
                            scales: {
                                xAxes: [{
                                    barPercentage: 0.4,
                                   
                                    gridLines: {
                                        offsetGridLines: true
                                    }
                                }]
                            }

                        }
                    });
            
        }
        function PatientFormStatus(result) {
            
                    if (result.length) {
                        var tbl = '';
                        for (var i = 0; i < result.length; i++){
                            tbl += '<tr>';
                            tbl += '<td><a href="#"  onclick="bindTopPatient(' + result[i].PatientID + ')">' + result[i].PatientName + '</a></td>';
                            tbl += '<td>' + result[i].FormName + '</td>';
                            tbl += '<td>' + result[i].FormStatus + '</td>';
                            tbl+='</tr>'
                        }
                        $(".Duebody").html('');
                        $(".Duebody").html(tbl);
                    }
                   
              
        }

        function PatientAgeGroup(result) {

                    var aDatasets1 = [result.zero,result.Lttone, result.Lttfour, result.Ltffour, result.Ltsfour, result.Gtsfive];

                    var dataT = {
                        labels: [ ' 0-13 ',' 13-21 ', ' 22-34 ', ' 35-54 ', ' 55-74 ', ' 75+ '],
                        datasets: [{
                            label: "Age Group",
                            data: aDatasets1,
                            fill: false,
                            backgroundColor: ["rgb(60, 179, 113)", "rgb(30, 144, 255)", "rgb(238, 130, 238)", "rgb(211, 211, 211)", "rgb(255, 165, 0)"],
                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)"],
                            borderWidth: 0
                        }]
                    };
                    var ctx = document.getElementById('agegroupChart').getContext('2d');
                    var myBarChart = new Chart(ctx, {
                        type: 'horizontalBar',
                       
                        data: dataT,
                        options: {
                            plugins: {
                                labels: false
                            },
                            "hover": {
                                "animationDuration": 0
                            },
                            "animation": {
                                "duration": 1,
                                "onComplete": function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;

                                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'bottom';

                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x + 5, bar._model.y + 5);
                                        });
                                    });
                                }
                            },
                            legend: {
                                "display": false
                            },
                            tooltips: {
                                "enabled": false
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            title: { display: true, text: 'Age Group', fontSize: 15 },
                            legend: { position: 'none' },
                            scales: {
                                xAxes: [{
                                    barPercentage: 0.5,
                                    barThickness: 6,
                                    maxBarThickness: 8,
                                    minBarLength: 2,
                                    gridLines: {
                                        offsetGridLines: true
                                    }
                                }]
                            }
                           
                        }
                       

                    });
                   
                }
        $.date = function (dateObject) {
            var d = new Date(dateObject);
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var date = day + "/" + month + "/" + year;

            return date;
        };
        function ShowMore(id) {

            var $this = $("#" + id);
            var $content = $this.parent().prev("p.content");
            var linkText = $this.text();

            if (linkText === "read more") {
                linkText = "Show less";
                $content.switchClass("hideContent", "showContent", 400);

            } else {
                linkText = "read more";
                $content.switchClass("showContent", "hideContent", 400);

            };

            $this.text(linkText);

        }



        $('.patientLisHeading').click(function () {
            $('.patientListbox').slideToggle(700);
        })
        $('.patientLisHeading').click(function () {
            $(this).toggleClass('expand');
        })
        $('.AppointmentList').click(function () {
            $('.AppointmentListbox').slideToggle(700);
        })
        $('.AppointmentList').click(function () {
            $(this).toggleClass('expand');
        })
        $('.patientStats').click(function () {
            $('.ConditionListbox').slideToggle(700);
        })
        $('.patientStats').click(function () {
            $(this).toggleClass('expand');
        })
        $('.formduelist').click(function () {
            $('.DueListbox').slideToggle(700);
        })
        $('.formduelist').click(function () {
            $(this).toggleClass('expand');
        })
        $('.patientCount').click(function () {
            $('.patientCountListbox').slideToggle(700);
        })
        $('.patientCount').click(function () {
            $(this).toggleClass('expand');
        })
        $('.AgeGroupList').click(function () {
            $('.AgeGroupListbox').slideToggle(700);
        })
        $('.AgeGroupList').click(function () {
            $(this).toggleClass('expand');
        })
        $('.programStats').click(function () {
            $('.programListbox').slideToggle(700);
        })
        $('.programStats').click(function () {
            $(this).toggleClass('expand');
        })

    </script>

}
