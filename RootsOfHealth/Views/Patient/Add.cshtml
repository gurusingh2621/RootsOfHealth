@model RootsOfHealth.Models.PatientDetailBO

@{
    ViewBag.Title = "Patient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .showHide {
        display: none;
    }

    .showHideInner {
        margin-top: 0px !important;
    }

    .showHidepaitent-detail-left {
        height: 570px !important;
    }

    .showHidepaitentinner-main-content {
        height: 500px !important;
    }

    .showHidebody {
        padding-top: 15px !important;
    }

    .showHidecontent {
        padding-top: 0px !important;
    }

    .inner-main-content {
        height: calc(100vh - 240px);
    }

    .paitent-detail-left {
        height: calc(100vh - 160px);
        overflow: hidden;
    }
    /*.row {
        margin-right: 0px;
    }*/

    .divAnyVaccinations button.multiselect {
        background-color: transparent;
        color: #999;
        background: url(../images/chevron-arrow-down.svg) no-repeat;
        background-position: 95% 13px;
        background-size: 12px;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        line-height: normal;
        /* color: #818181; */
        width: 100% !important;
        padding: 5px 20px 5px 10px;
        border-radius: 0;
        border: 1px solid #e2e2e2;
        border-radius: 0;
        font-size: 14px;
        height: 42px;
        text-align: left;
    }

    .divAnyVaccinations ul.multiselect-container.dropdown-menu.show {
        padding: 8px 2px;
        width: 100%;
    }

        .divAnyVaccinations ul.multiselect-container.dropdown-menu.show li a {
            /* padding: 0px 8px; */
            font-style: normal;
            font-weight: normal;
            font-size: 12px;
            line-height: normal;
            color: #5d5d5d;
            height: 23px;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            padding: .25rem .5rem;
        }

    .divAnyVaccinations ul.multiselect-container li label {
        margin-bottom: 0px;
    }

        .divAnyVaccinations ul.multiselect-container li label input[type="checkbox"] {
            position: absolute;
            left: 10px;
            width: 18px;
            height: 18px;
            opacity: 0;
        }

        .divAnyVaccinations ul.multiselect-container li label input[type="checkbox"] {
            position: absolute;
            left: 10px;
            width: 18px;
            height: 18px;
            opacity: 0;
        }

    .divAnyVaccinations .dropdown-menu li.active span:before {
        content: "";
        background: url(../images/checkbox.svg) no-repeat center #22baa0;
        display: inline-block;
        width: 18px;
        height: 18px;
        vertical-align: middle;
        border-radius: 3px;
        text-align: center;
        float: left;
        padding: 4px 7px;
        position: absolute;
        left: 0;
        top: 0;
        background-size: 15px;
    }

    .divAnyVaccinations a {
        text-decoration: none;
    }

    .list-height {
            height: calc(100vh - 300px);
        }
</style>
<!-- Content start here -->
<section id="content" class="responsive-container ">
    <div class="profile-tabs">
        <div class="tabs-scroll">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link @Html.Raw(ViewBag.CurrentTab=="Profile-tab"?"show active":string.IsNullOrWhiteSpace(ViewBag.CurrentTab)?"show active":"")" id="Profile-tab" data-toggle="tab" href="#Profile" role="tab"
                       aria-controls="Profile" aria-selected="true">Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Housing-tab"?"show active":"")" onclick="ErrorTab()" id="Housing-tab" data-toggle="" href="#Housing" role="tab"
                       aria-controls="Housing" aria-selected="false">Housing<span class="notCount" id="HouNot" style="display: none"> </span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Financial-tab"?"show active":"")" onclick="ErrorTab()" id="Financial-tab" data-toggle="" href="#Financial" role="tab"
                       aria-controls="Financial" aria-selected="false">Financial Security<span class="notCount" id="FincNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Employment-tab"?"show active":"")" onclick="ErrorTab()" id="Employment-tab" data-toggle="" href="#Employment" role="tab"
                       aria-controls="Employment" aria-selected="false">Employment/Education<span class="notCount" id="EmpNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Communication-tab"?"show active":"")" onclick="ErrorTab()" id="Communication-tab" data-toggle="" href="#Communication"
                       role="tab" aria-controls="Communication" aria-selected="false">
                        Communication &
                        Mobility
                        <span class="notCount" id="CommNot" style="display:none"></span> <span class="check" style="display:none"><i class="fas fa-check-circle"></i></span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Healthcare-tab"?"show active":"")" onclick="ErrorTab()" id="Healthcare-tab" data-toggle="" href="#Healthcare" role="tab"
                       aria-controls="Healthcare" aria-selected="false">Healthcare<span class="notCount" id="HealthNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="SocialSupports-tab"?"show active":"")" onclick="ErrorTab()" id="SocialSupports-tab" data-toggle="" href="#SocialSupports"
                       role="tab" aria-controls="SocialSupports" aria-selected="false">
                        Social Supports and
                        Safety
                        <span class="notCount" id="SocialNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="LegalStatus-tab"?"show active":"")" onclick="ErrorTab()" id="LegalStatus-tab" data-toggle="" href="#LegalStatus" role="tab"
                       aria-controls="LegalStatus" aria-selected="false">Legal Status<span class="notCount" id="LegalNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>

                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="Dast-tab"?"show active":ViewBag.CurrentTab=="Audit-tab"?"show active":"")" onclick="ErrorTab()" id="Alcohol-tab" data-toggle="" href="#AlcoholDisorder" role="tab"
                       aria-controls="AlcoholDisorder" aria-selected="false">Substance Use<span class="notCount" id="SubNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="MentalHealth-tab"?"show active":"")" onclick="ErrorTab()" id="MentalHealth-tab" data-toggle="" href="#MentalHealth" role="tab"
                       aria-controls="MentalHealth" aria-selected="false">Mental Health<span class="notCount" id="MentalNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled-li1 @Html.Raw(ViewBag.CurrentTab=="FoodAccess-tab"?"show active":"")" onclick="ErrorTab()" id="FoodAccess-tab" data-toggle="" href="#FoodAccess" role="tab"
                       aria-controls="FoodAccess" aria-selected="false">Food Access<span class="notCount" id="FoodNot" style="display:none"></span><span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>

                <li class="nav-item clearfix" id="programtbs" style="display:none">
                    <a class="nav-link @Html.Raw(ViewBag.CurrentTab=="ProgramTab"?"show active":"")" id="Programs-tab" data-toggle="tab" href="#Programs" role="tab"
                       aria-controls="Programs" aria-selected="false">Programs<span class="check" style="display:none"><i class="fas fa-check-circle"></i></span></a>
                </li>
            </ul>
        </div>
        <div id="menu-toggle" class="open">
            <div id="hamburger">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <div id="cross" title="Hide Client Menu">
                <span></span>
                <span></span>
            </div>
        </div>
        <div class="tab-content" id="myTabContent">

            <!-- Profile tab start here  -->

            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientMain.cshtml", Model.PatientMain);
            }


            <!-- Profile tab end here  -->
            <!-- Housing tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientHousing.cshtml", Model.PatientHousing);
            }
            <!-- Housing tab end here  -->
            <!-- Financial tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientFinancial.cshtml", Model.PatientFinancialSecurity);
            }
            <!-- Financial tab end here  -->
            <!-- Employment tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientEmployment.cshtml", Model.PatientEmploymentEducation);
            }
            <!-- Employment tab end here  -->
            <!-- Communication tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientCommunication.cshtml", Model.PatientCommunicationAndMobility);
            }
            <!-- Communication tab end here  -->
            <!-- Healthcare tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientHealthcare.cshtml", Model.PatientHealthcare);
            }
            <!-- Healthcare tab end here  -->
            <!-- SocialSupports tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientSocialSupport.cshtml", Model.PatientSocialSupport);
            }
            <!-- SocialSupports tab end here  -->
            <!-- Legal Status tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientLegalStatus.cshtml", Model.PatientLegalStatus);
            }
            <!--Legal Status tab end here  -->
            <!-- Alcohol Disorder Tab start here  -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientSubstance.cshtml", Model.PatientSubstanceUse);
            }
            <!-- Alcohol Disorder Tab end here  -->
            <!-- Mental Health Tab start here   -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientMentalHealth.cshtml", Model.PatientMentalHealth);
            }
            <!-- Mental Health Tab end here   -->
            <!-- Food Access Tab start here -->
            @{
                Html.RenderPartial("~/Views/Shared/Patient/_PatientFoodAccess.cshtml", Model.PatientFoodAccess);
            }
            <!-- Food Access Tab end here -->
            <!-- Programs Tab start here  -->

            <div class="tab-pane fade" id="Programs" role="tabpanel" aria-labelledby="Programs-tab">
            </div>

            <!-- Programs Tab end here  -->

        </div>
    </div>

</section>
<!-- Content end here -->


@section scripts {
    <script src="https://code.jquery.com/ui/1.12.0-rc.2/jquery-ui.min.js"
            integrity="sha256-55Jz3pBCF8z9jBO1qQ7cIf0L+neuPTD1u7Ytzrp2dqo="
            crossorigin="anonymous"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>

        var _programName = "";
        var _programelement = ''
        var _PatientId = '@ViewBag.PatientID';
          var  programUploadedPath="@System.Web.Configuration.WebConfigurationManager.AppSettings["ProgramUploadPath"]";
        var _userID="@Session["userid"]";
        $('#menu-toggle').click(function () {
            $(this).toggleClass('open');
            if ($("#menu-toggle").hasClass("open")) {
                $("#cross").attr("title", "Hide Client Menu")
            } else {
                $("#cross").attr("title", "Show Client Menu")
            }
            $("#myTab").toggleClass('showHide');
            $(".inner-content").toggleClass("showHideInner");
            $(".paitent-detail-left").toggleClass("showHidepaitent-detail-left");
            $(".inner-main-content").toggleClass("showHidepaitentinner-main-content");
            $(".body").toggleClass("showHidebody");
            $("#content").toggleClass("showHidecontent");
            $(".scroll-height").toggleClass("showHideappotment");

        })
    var RaceEthnicity = [];
    var LanguagesSpeak = [];
    var Diagnosed = [];
    var ScreeningTests = [];
    var MentalHealth = [];
    var EverMemberOfUSArmedForces = "";
    var PatientChildrensAges = "";
    var PatientImg = "";
  var GovernmentIDImg = "";
  var ProgramConsentImg = "";
    var IncomeCoverHouseholdExpenses = "";
    var CalworksBenefits = "";
    var SocialSecurityDisabilityInsurance = "";
    var GeneralAssistance = "";
    var WomenInfantChildrenBenefits = "";
    var UnemploymentBenefits = "";
    var StateDisabilityInsuranceBenefits = "";
    var RentalAssistanceBenefits = "";
    var PersonalPhone = "";

    var HealthInsurance = "";
    var PrimaryCareDoctor = "";
    var RegularDentist = "";
    var OtherDoctorsTherapists = "";
    var CaseManager = "";
    var SmokeCigarettes = "";
    var TobaccoProducts = "";
    var ParticipatingIn = [];
    var IsSomeoneYouCanDependOn = "";
    var InvolvedInCommunityGroup = "";
    var IsSomeoneYouCanCall = "";
    var IsAnyoneThreatenYou = "";

    var EverBeenArrested = "";
    var OnGoingCriminalCase = "";
    var EverBeenInPrison = "";
    var InterestedInCriminalRecordClearing = "";
    var OweRestitution = "";
    var CurrentlyOnParole = "";
    var DifficultiesInGettingAJob = "";
    var GovernmentIssuedID = "";
    var ConcernsAboutFamilyImmigrationStatus = "";
    var ConcernsWithLandlord = "";
    var CreatedDate = "";
    var ModifiedDate = "";
    var ClinicPregnant = "";
    var ClinicBirthControl = "";
        var Neighborhoods = "";
        var PendingDate = "";
        var ConvictedOffense = "";
        var Misdemeanor = "";
        var Felony = "";
        var RestrainingOrders = "";
        var AngerManagement = "";
        var ViolentOffense = "";
        var EligibleForEmployment = "";

        var PregnantYes = "";
        var ShortDate = "";
        var OneYouAre = "";

        var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]'

        var options = {
            onComplete: function (cep) {
                console.log('CEP Completed!:' , cep);
            },
            onKeyPress: function (cep, event, currentField, options) {
                console.log('A key was pressed!:', cep, ' event: ', event,
                    'currentField: ', currentField, ' options: ', options);
            },
            onChange: function (cep) {
                console.log('cep changed! ', cep);
            },
            onInvalid: function (val, e, f, invalid, options) {
                var error = invalid[0];
                console.log("Digit: ", error.v, " is invalid for the position: ", error.p, ". We expect something like: ", error.e);
                toastr.error("Digit: "+ error.v +" is invalid" );
            }
        };


        function GetPatientPrograms() {

            var pid = _PatientId;

            $.ajax({

                type: "Post",
                url: '/DashBoard/GetPatientPrograms',
                data: JSON.stringify({ PatientID: pid }),

                dataType: "html",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    $('.modal-body').html(result);


                },
                error: function () {
                    toastr.error("Some error occurred!! or data not found");
                },
                complete: function () {


                }
            });
        }
        var patientPrograms = [];
        function showNotificationCount()
        {

              //------notification changes start here
             @if (Model.ScheduleDate.IsHousingDue=="Red")
        {
            @: $("#HouNot").attr('class', 'notCountR');
            @: $("#Housing-tab").css('border-left', '5px solid #a53333');
            @: $("#HouNot").show();
            @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);

            if (Model.ScheduleDate.HousingNotification == "0")
            {
        @: $("#HouNot").attr('title', 'Due date isToday.');
             }
            else
            {
        @: $("#HouNot").attr('title', 'Due ' +@Model.ScheduleDate.HousingNotification+' days ago');
             }
        }

        else if(Model.ScheduleDate.IsHousingDue == "Orange")
        {
        @: $("#HouNot").attr('class', 'notCountO');
        @: $("#Housing-tab").css('border-left', '5px solid #e4854d');
        @: $("#HouNot").show();
        @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);
        @: $("#HouNot").attr('title','Due after ' + @Model.ScheduleDate.HousingNotification+' days.');

         }
        else if(Model.ScheduleDate.IsHousingDue == "Green")
        {
        @: $("#HouNot").attr('class', 'notCountG');
        @: $("#Housing-tab").css('border-left', '5px solid #0aa22d');
        @: $("#HouNot").show();
        @: $("#HouNot").html(@Model.ScheduleDate.HousingNotification);
        @: $("#HouNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HousingNotification+' days.');

        }






          @if (Model.ScheduleDate.IsFinancialDue== "Red")
          {
            @: $("#FincNot").attr('class', 'notCountR');
            @: $("#Financial-tab").css('border-left', '5px solid #a53333');
            @: $("#FincNot").show();
            @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);

              if (Model.ScheduleDate.FinancialNotification == "0")
              {
                   @: $("#FincNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#FincNot").attr('title', 'Due ' +@Model.ScheduleDate.FinancialNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsFinancialDue == "Orange")
        {
        @: $("#FincNot").attr('class', 'notCountO');
        @: $("#Financial-tab").css('border-left', '5px solid #e4854d');
        @: $("#FincNot").show();
        @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);
        @: $("#FincNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FinancialNotification+' days.');

        }
        else if(Model.ScheduleDate.IsFinancialDue == "Green")
        {
        @: $("#FincNot").attr('class', 'notCountG');
        @: $("#Financial-tab").css('border-left', '5px solid #0aa22d');
        @: $("#FincNot").show();
        @: $("#FincNot").html(@Model.ScheduleDate.FinancialNotification);
        @: $("#FincNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FinancialNotification+' days.');

        }



           @if (Model.ScheduleDate.IsEmploymentDue== "Red")
           {
            @: $("#EmpNot").attr('class', 'notCountR');
            @: $("#Employment-tab").css('border-left', '5px solid #a53333');
            @: $("#EmpNot").show();
            @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);

              if (Model.ScheduleDate.EmploymentNotification == "0")
              {
                   @: $("#EmpNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#EmpNot").attr('title', 'Due ' +@Model.ScheduleDate.EmploymentNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsEmploymentDue == "Orange")
        {
        @: $("#EmpNot").attr('class', 'notCountO');
        @: $("#Employment-tab").css('border-left', '5px solid #e4854d');
        @: $("#EmpNot").show();
        @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);
        @: $("#EmpNot").attr('title', 'Due after ' +  @Model.ScheduleDate.EmploymentNotification+' days.');

        }
        else if(Model.ScheduleDate.IsEmploymentDue == "Green")
        {
        @: $("#EmpNot").attr('class', 'notCountG');
        @: $("#Employment-tab").css('border-left', '5px solid #0aa22d');
        @: $("#EmpNot").show();
        @: $("#EmpNot").html(@Model.ScheduleDate.EmploymentNotification);
        @: $("#EmpNot").attr('title', 'Due after ' +  @Model.ScheduleDate.EmploymentNotification+' days.');

        }



     @if (Model.ScheduleDate.IsCommunicationDue == "Red")
      {
            @: $("#CommNot").attr('class', 'notCountR');
            @: $("#Communication-tab").css('border-left', '5px solid #a53333');
            @: $("#CommNot").show();
            @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);

              if (Model.ScheduleDate.CommunicationNotification == "0")
              {
                   @: $("#CommNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#CommNot").attr('title', 'Due ' +@Model.ScheduleDate.CommunicationNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsCommunicationDue == "Orange")
        {
        @: $("#CommNot").attr('class', 'notCountO');
        @: $("#Communication-tab").css('border-left', '5px solid #e4854d');
        @: $("#CommNot").show();
        @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);
        @: $("#CommNot").attr('title', 'Due after ' +  @Model.ScheduleDate.CommunicationNotification+' days.');

        }
        else if(Model.ScheduleDate.IsCommunicationDue == "Green")
        {
        @: $("#CommNot").attr('class', 'notCountG');
        @: $("#Communication-tab").css('border-left', '5px solid #0aa22d');
        @: $("#CommNot").show();
        @: $("#CommNot").html(@Model.ScheduleDate.CommunicationNotification);
        @: $("#CommNot").attr('title', 'Due after ' +  @Model.ScheduleDate.CommunicationNotification+' days.');

        }




       @if (Model.ScheduleDate.IsHealthcareDue == "Red")
      {
            @: $("#HealthNot").attr('class', 'notCountR');
            @: $("#Healthcare-tab").css('border-left', '5px solid #a53333');
            @: $("#HealthNot").show();
            @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);

              if (Model.ScheduleDate.HealthcareNotification == "0")
              {
                   @: $("#HealthNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#HealthNot").attr('title', 'Due ' +@Model.ScheduleDate.HealthcareNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsHealthcareDue == "Orange")
        {
        @: $("#HealthNot").attr('class', 'notCountO');
        @: $("#Healthcare-tab").css('border-left', '5px solid #e4854d');
        @: $("#HealthNot").show();
        @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);
        @: $("#HealthNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HealthcareNotification+' days.');

        }
        else if(Model.ScheduleDate.IsHealthcareDue == "Green")
        {
        @: $("#HealthNot").attr('class', 'notCountG');
        @: $("#Healthcare-tab").css('border-left', '5px solid #0aa22d');
        @: $("#HealthNot").show();
        @: $("#HealthNot").html(@Model.ScheduleDate.HealthcareNotification);
        @: $("#HealthNot").attr('title', 'Due after ' +  @Model.ScheduleDate.HealthcareNotification+' days.');

        }



         @if (Model.ScheduleDate.IsSocialSupportsDue == "Red")
      {
            @: $("#SocialNot").attr('class', 'notCountR');
            @: $("#SocialSupports-tab").css('border-left', '5px solid #a53333');
            @: $("#SocialNot").show();
            @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);

              if (Model.ScheduleDate.SocialNotification == "0")
              {
                   @: $("#SocialNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#SocialNot").attr('title', 'Due ' +@Model.ScheduleDate.SocialNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsSocialSupportsDue == "Orange")
        {
        @: $("#SocialNot").attr('class', 'notCountO');
        @: $("#SocialSupports-tab").css('border-left', '5px solid #e4854d');
        @: $("#SocialNot").show();
        @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);
        @: $("#SocialNot").attr('title', 'Due after ' +  @Model.ScheduleDate.SocialNotification+' days.');

        }
        else if(Model.ScheduleDate.IsSocialSupportsDue == "Green")
        {
        @: $("#SocialNot").attr('class', 'notCountG');
        @: $("#SocialSupports-tab").css('border-left', '5px solid #0aa22d');
        @: $("#SocialNot").show();
        @: $("#SocialNot").html(@Model.ScheduleDate.SocialNotification);
        @: $("#SocialNot").attr('title', 'Due after ' +  @Model.ScheduleDate.SocialNotification+' days.');

        }



          @if (Model.ScheduleDate.IsLegalStatusDue == "Red")
      {
            @: $("#LegalNot").attr('class', 'notCountR');
            @: $("#LegalStatus-tab").css('border-left', '5px solid #a53333');
            @: $("#LegalNot").show();
            @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);

              if (Model.ScheduleDate.LegalNotification == "0")
              {
                   @: $("#LegalNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#LegalNot").attr('title', 'Due ' +@Model.ScheduleDate.LegalNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsLegalStatusDue == "Orange")
        {
        @: $("#LegalNot").attr('class', 'notCountO');
        @: $("#LegalStatus-tab").css('border-left', '5px solid #e4854d');
        @: $("#LegalNot").show();
        @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);
        @: $("#LegalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.LegalNotification+' days.');

        }
        else if(Model.ScheduleDate.IsLegalStatusDue == "Green")
        {
        @: $("#LegalNot").attr('class', 'notCountG');
        @: $("#LegalStatus-tab").css('border-left', '5px solid #0aa22d');
        @: $("#LegalNot").show();
        @: $("#LegalNot").html(@Model.ScheduleDate.LegalNotification);
        @: $("#LegalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.LegalNotification+' days.');

        }




             @if (Model.ScheduleDate.IsDastDue == "Red")
      {
            @: $("#DastNot").attr('class', 'notCountR');
            @: $("#Dast-tab").css('border-left', '5px solid #a53333');
            @: $("#DastNot").show();
            @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);

              if (Model.ScheduleDate.DastNotification == "0")
              {
                   @: $("#DastNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#DastNot").attr('title', 'Due ' +@Model.ScheduleDate.DastNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsDastDue == "Orange")
        {
        @: $("#DastNot").attr('class', 'notCountO');
        @: $("#Dast-tab").css('border-left', '5px solid #e4854d');
        @: $("#DastNot").show();
        @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);
        @: $("#DastNot").attr('title', 'Due after ' +  @Model.ScheduleDate.DastNotification+' days.');

        }
        else if(Model.ScheduleDate.IsDastDue == "Green")
        {
        @: $("#DastNot").attr('class', 'notCountG');
        @: $("#Dast-tab").css('border-left', '5px solid #0aa22d');
        @: $("#DastNot").show();
        @: $("#DastNot").html(@Model.ScheduleDate.DastNotification);
        @: $("#DastNot").attr('title', 'Due after ' +  @Model.ScheduleDate.DastNotification+' days.');

        }



                  @if (Model.ScheduleDate.IsAuditDue == "Red")
      {
            @: $("#AuditNot").attr('class', 'notCountR');
            @: $("#Audit-tab").css('border-left', '5px solid #a53333');
            @: $("#AuditNot").show();
            @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);

              if (Model.ScheduleDate.AuditNotification == "0")
              {
                   @: $("#AuditNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#AuditNot").attr('title', 'Due ' +@Model.ScheduleDate.AuditNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsAuditDue == "Orange")
        {
        @: $("#AuditNot").attr('class', 'notCountO');
        @: $("#Audit-tab").css('border-left', '5px solid #e4854d');
        @: $("#AuditNot").show();
        @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);
        @: $("#AuditNot").attr('title', 'Due after ' +  @Model.ScheduleDate.AuditNotification+' days.');

        }
        else if(Model.ScheduleDate.IsAuditDue == "Green")
        {
        @: $("#AuditNot").attr('class', 'notCountG');
        @: $("#Audit-tab").css('border-left', '5px solid #0aa22d');
        @: $("#AuditNot").show();
        @: $("#AuditNot").html(@Model.ScheduleDate.AuditNotification);
        @: $("#AuditNot").attr('title', 'Due after ' +  @Model.ScheduleDate.AuditNotification+' days.');

        }


        var DastN = "";
        var AuditN = "";
        DastN = $("#DastNot").attr('title');
        AuditN = $("#AuditNot").attr('title');
        if (DastN == undefined)
        {
            DastN = ""

        }
        if (AuditN == undefined) {
            AuditN = ""

        }
        $("#SubNot").attr('title', ' Dast=' + DastN + ' & Audit=' + AuditN);


        var subnottitle = $("#SubNot").attr('title');

        if (subnottitle.indexOf("Due") == -1)
        {
            $("#SubNot").hide();

        }
        else
        {
               $("#SubNot").attr('class', 'notCountR');
              //$("#Alcohol-tab").css('border-left', '5px solid #a53333');
              $("#SubNot").show();
              $("#SubNot").html('i');
             $("#SubNot").attr('title', ' Dast=' + DastN + ' & Audit=' + AuditN);
        }




             @if (Model.ScheduleDate.IsMentalHealthDue == "Red")
          {
            @: $("#MentalNot").attr('class', 'notCountR');
            @: $("#MentalHealth-tab").css('border-left', '5px solid #a53333');
            @: $("#MentalNot").show();
            @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);

              if (Model.ScheduleDate.MentalNotification == "0")
              {
                   @: $("#MentalNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#MentalNot").attr('title', 'Due ' +@Model.ScheduleDate.MentalNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsMentalHealthDue == "Orange")
        {
        @: $("#MentalNot").attr('class', 'notCountO');
        @: $("#MentalHealth-tab").css('border-left', '5px solid #e4854d');
        @: $("#MentalNot").show();
        @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);
        @: $("#MentalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.MentalNotification+' days.');

        }
        else if(Model.ScheduleDate.IsMentalHealthDue == "Green")
        {
        @: $("#MentalNot").attr('class', 'notCountG');
        @: $("#MentalHealth-tab").css('border-left', '5px solid #0aa22d');
        @: $("#MentalNot").show();
        @: $("#MentalNot").html(@Model.ScheduleDate.MentalNotification);
        @: $("#MentalNot").attr('title', 'Due after ' +  @Model.ScheduleDate.MentalNotification+' days.');

        }



              @if (Model.ScheduleDate.IsFoodAccessDue == "Red")
          {
            @: $("#FoodNot").attr('class', 'notCountR');
            @: $("#FoodAccess-tab").css('border-left', '5px solid #a53333');
            @: $("#FoodNot").show();
            @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);

              if (Model.ScheduleDate.FoodNotification == "0")
              {
                   @: $("#FoodNot").attr('title', 'Due date isToday.');
              }
              else
              {
               @: $("#FoodNot").attr('title', 'Due ' +@Model.ScheduleDate.FoodNotification+' days ago');
               }
        }
        else if(Model.ScheduleDate.IsFoodAccessDue == "Orange")
        {
        @: $("#FoodNot").attr('class', 'notCountO');
        @: $("#FoodAccess-tab").css('border-left', '5px solid #e4854d');
        @: $("#FoodNot").show();
        @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);
        @: $("#FoodNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FoodNotification+' days.');

        }
        else if(Model.ScheduleDate.IsFoodAccessDue == "Green")
        {
        @: $("#FoodNot").attr('class', 'notCountG');
        @: $("#FoodAccess-tab").css('border-left', '5px solid #0aa22d');
        @: $("#FoodNot").show();
        @: $("#FoodNot").html(@Model.ScheduleDate.FoodNotification);
        @: $("#FoodNot").attr('title', 'Due after ' +  @Model.ScheduleDate.FoodNotification+' days.');

        }

//notification changes end here---------------
            //$('input').attr('tabindex', '1');
            //$('select').attr('tabindex', '1');
           @if (Model.PatientHousing.PatientHousingID == 0)
        {
            @:$("#Housing-tab").find('span').css('display', 'none');
        }
        else{
             @:$("#Housing-tab").find('span').css('display', 'inline');
    }
         @if (Model.PatientFinancialSecurity.PatientFinancialSecurityID == 0)
        {
            @:$("#Financial-tab").find('span').css('display', 'none');
        }
         else{
     @:$("#Financial-tab").find('span').css('display', 'inline');
          }
         @if (Model.PatientEmploymentEducation.PatientEmploymentEducationID == 0)
        {
            @:$("#Employment-tab").find('span').css('display', 'none');
        }
         else{
              @:$("#Employment-tab").find('span').css('display', 'inline');
         }
         @if (Model.PatientCommunicationAndMobility.PatientCommunicationAndMobilityID == 0)
        {
            @:$("#Communication-tab").find('span').css('display', 'none');
        }
         else
         {
@:$("#Communication-tab").find('span').css('display', 'inline');
         }

          @if (Model.PatientHealthcare.PatientHealthcareID == 0)
        {
            @:$("#Healthcare-tab").find('span').css('display', 'none');
        }
          else
          {
              @:$("#Healthcare-tab").find('span').css('display', 'inline');
          }
         @if (Model.PatientSocialSupport.SocialSupportsID == 0)
        {
            @:$("#SocialSupports-tab").find('span').css('display', 'none');
        }
         else
         { @:$("#SocialSupports-tab").find('span').css('display', 'inline');

         }
         @if (Model.PatientLegalStatus.LegalStatusID == 0)
        {
            @:$("#LegalStatus-tab").find('span').css('display', 'none');
        }
         else
         {
              @:$("#LegalStatus-tab").find('span').css('display', 'inline');
         }
         @if (Model.PatientSubstanceUse.SubstanceUseID == 0)
         {
             @:$("#Alcohol-tab").find('span').css('display', 'none');
             if (Model.PatientSubstanceUse.Audit.AuditID == 0)
             {
                  @:$("#Audit-tab").find('span').css('display', 'none');
             }
             else
             {
         @:$("#Audit-tab").find('span').css('display', 'inline');
           @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }
             if (Model.PatientSubstanceUse.Dast.DastID == 0)
             {
                  @:$("#Dast-tab").find('span').css('display', 'none');
             }
             else
             {
                  @:$("#Dast-tab").find('span').css('display', 'inline');
                   @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }

         }
         else
         {

              if (Model.PatientSubstanceUse.Audit.AuditID == 0)
             {
                  @:$("#Audit-tab").find('span').css('display', 'none');
             }
             else
             {
         @:$("#Audit-tab").find('span').css('display', 'inline');
           @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }
              if (Model.PatientSubstanceUse.Dast.DastID == 0)
             {
                  @:$("#Dast-tab").find('span').css('display', 'none');
             }
             else
             {
                  @:$("#Dast-tab").find('span').css('display', 'inline');
                   @:$("#Alcohol-tab").find('span').css('display', 'inline');
             }

         }

            @if (Model.PatientMentalHealth.MentalHealthID == 0)
        {

            @:$("#MentalHealth-tab").find('span').css('display', 'none');
        }
            else
            {
                 @:$("#MentalHealth-tab").find('span').css('display', 'inline');
            }
                @if (Model.PatientFoodAccess.FoodAccessID == 0)
        {

            @:$("#FoodAccess-tab").find('span').css('display', 'none');
        }
                else
                {
@:$("#FoodAccess-tab").find('span').css('display', 'inline');
                }

           @*@if (Model.PatientProgram.PatientProgramsID == 0)
        {
               @:$("#Programs-tab").find('span').css('display', 'none');
          if (Model.PatientProgram.ClinicOnly.ClinicOnlyID == 0)
               {
                   @:$("#aclinic").find('span').css('display', 'none');
               }
               else
               {
                   @:$("#aclinic").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }
               if (Model.PatientProgram.DreamOnly.DreamOnlyID == 0)
               {
                   @:$("#adream").find('span').css('display', 'none');
               }
               else
               {
                    @:$("#adream").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.OUOnly.OUOnlyID == 0)
               {@:$("#aou").find('span').css('display', 'none');

               }
               else
               {
                    @:$("#aou").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.PeraltaCollege.PeraltaCollegesID == 0)
               {
                   @:$("#aPeraltaColleges").find('span').css('display', 'none');
               }
               else
               { @:$("#aPeraltaColleges").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }

           }
           else
           {

               if (Model.PatientProgram.ClinicOnly.ClinicOnlyID == 0)
               {
                   @:$("#aclinic").find('span').css('display', 'none');
               }
               else
               {
                   @:$("#aclinic").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }
               if (Model.PatientProgram.DreamOnly.DreamOnlyID == 0)
               {
                   @:$("adream").find('span').css('display', 'none');
               }
               else
               {
                    @:$("#adream").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.OUOnly.OUOnlyID == 0)
               {@:$("aou").find('span').css('display', 'none');

               }
               else
               {
                    @:$("#aou").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');
               }
               if (Model.PatientProgram.PeraltaCollege.PeraltaCollegesID == 0)
               {
                   @:$("aPeraltaColleges").find('span').css('display', 'none');
               }
               else
               { @:$("#aPeraltaColleges").find('span').css('display', 'inline');
                   @:$("#Programs-tab").find('span').css('display', 'inline');

               }

           }*@
        }
        $(document).ready(function () {
            var currenttab = '@ViewBag.CurrentTab';
            var currentSubtab = '@ViewBag.CurrentSubtab'
            $('#programtbs').click(function () {
                $(".loaderOverlay").css('display','flex');
                $('Programs').html('')
              $.ajax({

                type: "Get",
                url: '/Patient/GetProgramsForPatient?PatientID='+_PatientId,
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    ;
                    $('#Programs')[0].outerHTML = result;

                    $('#Programs').addClass('active show')
                    RebindEvent();

                    if ($("#tabPills .nav-item").length > 0) {
                        if (currentSubtab == 'undefined') {
                            $("#tabPills .nav-item a").get(0).click();
                        }
                        else {
                            if ($("#a" + currentSubtab).length > 0) {
                                $("#a" + currentSubtab).click();
                            }
                            else {
                                $("#tabPills .nav-item a").get(0).click();
                            }
                        }
                    }
                    $(".btnProgramEdit").css('display', 'none')
                    
                },
                  error: function () {
                      $(".loaderOverlay").hide()
                    toastr.error("Some error occurred!! or data not found");
                }
            });
        })
            if (currenttab != '') {
                if (currenttab != 'Dast-tab' && currenttab != 'Audit-tab') {
                    $("a#Dast-tab").addClass("show active");
                    $("div#DAST").addClass("show active");
                }
                if (currenttab != 'aclinic' && currenttab != 'adream' && currenttab != 'aou' && currenttab != 'aPeraltaColleges') {
                    $("a#aclinic").addClass("show active");
                    $("div#ClinicOnly").addClass("show active");
                }

            }
            if (currenttab == 'ProgramTab') {
                $('#programtbs').click();
            }
        $('.date').datepicker(
            {
                uiLibrary: 'bootstrap',
                changeYear: true,
                changeMonth: true,
            }

        );
        $("#ClinicOnly_AnyVaccinations").multiselect({
            includeSelectAllOption: true,
            nonSelectedText: 'Nothing selected',
            buttonWidth: '100%',
            maxHeight: 300
        });
        $("#ClinicOnly_AnyVaccinations").closest('div').find('label').append('<span></span>');
        var selectedVaccinations = '@Model.PatientProgram.ClinicOnly.AnyVaccinations';
        $("#ClinicOnly_AnyVaccinations").val(selectedVaccinations.split(','));
        $("#ClinicOnly_AnyVaccinations").multiselect("refresh");
        $(".open-eye").css("display", "block");
        $(".ssn-label").css("display", "none");
        showNotificationCount();
        AddDate();

        $('.date').mask('00/00/0000');
        $('#txtHomePhone').mask('(000) 000-0000');
        $('#txtCellPhone').mask('(000) 000-0000');
        $('#txtSocialSecNo').mask('AAA-AA-AAAA', options);
        $("input[type=hidden][name=PatientID]").val(_PatientId);
        var pid = _PatientId;
            GetPatientPrograms();
        if (pid != undefined && pid != '' && pid != '0') {

            $('#btnaddprogram').css('display', 'block');
        }


        if (_PatientId != "0")
        {
            $('#Housing-tab').attr("data-toggle", "tab");
            $('#Housing-tab').removeClass("disabled-li1");
            $('#Financial-tab').attr("data-toggle", "tab");
            $('#Financial-tab').removeClass("disabled-li1");
            $('#Employment-tab').attr("data-toggle", "tab");
            $('#Employment-tab').removeClass("disabled-li1");
            $('#Communication-tab').attr("data-toggle", "tab");
            $('#Communication-tab').removeClass("disabled-li1");
            $('#Healthcare-tab').attr("data-toggle", "tab");
            $('#Healthcare-tab').removeClass("disabled-li1");
            $('#SocialSupports-tab').attr("data-toggle", "tab");
            $('#SocialSupports-tab').removeClass("disabled-li1");
            $('#LegalStatus-tab').attr("data-toggle", "tab");
            $('#LegalStatus-tab').removeClass("disabled-li1");

            $('#Alcohol-tab').attr("data-toggle", "tab");
            $('#Alcohol-tab').removeClass("disabled-li1");

            $('#MentalHealth-tab').attr("data-toggle", "tab");
            $('#MentalHealth-tab').removeClass("disabled-li1");

            $('#FoodAccess-tab').attr("data-toggle", "tab");
            $('#FoodAccess-tab').removeClass("disabled-li1");

        }

        //------------Profile Start--------------------------------------//

            var lblOtherArray = ["Other"];
            var lblRace = $('#lblRace').html();
            if (lblRace == "") {
                $("#ddRace").val(lblOtherArray);
                $('.selectboxmultiple button[data-id="ddRace"]').find('.filter-option-inner-inner').html("Other");
                $('#OtherRace').show();
            } else {
                var lblRaceArray = lblRace != undefined ? lblRace.split(',') : '';
                $("#ddRace").val(lblRaceArray);
                $('.selectboxmultiple button[data-id="ddRace"]').find('.filter-option-inner-inner').html(lblRace);
            }


            var lblLanguages = $('#lblLanguages').html();
            if (lblLanguages == "") {
                $("#ddLanguages").val(lblOtherArray);
                $('.selectboxmultiple button[data-id="ddLanguages"]').find('.filter-option-inner-inner').html("Other");
                $('#OtherLanguage').show();
            } else {
                var lblLanguagesArray = lblLanguages != undefined ? lblLanguages.split(',') : '';
                $("#ddLanguages").val(lblLanguagesArray);
                $('.selectboxmultiple button[data-id="ddLanguages"]').find('.filter-option-inner-inner').html(lblLanguages);
            }

        var lblUSArmedForces = $('#lblUSArmedForces').html().toLocaleLowerCase();
        $("input[name=USArmedRadio][value='"+lblUSArmedForces+"']").prop('checked', true);



        var lblEverSmoker = $('#lblEverSmoker').html().toLocaleLowerCase();
        $('#ddSmoker').val('' + lblEverSmoker);
        if (lblEverSmoker == "true") {
            $('#divQuit').show();
            $('#divLastTimeYouSmoked').show();
        }


        var lblQuitSmoking = $('#lblQuitSmoking').html().toLocaleLowerCase();
        $('#ddQuit').val('' + lblQuitSmoking);
        if (lblQuitSmoking == "true") {
            $('#divSmokingQuitDate').show();
        }



        var lblLastTime = $('#lblLastTime').html().toLocaleLowerCase();
        $('#ddLastTimeYouSmoked').val('' + lblLastTime);



        var lblGender = $('#lblGender').html();
        $('#ddGender').val('' + lblGender);
        if (lblGender == "Other") {
            $('#divOtherGender').show();
        }


        var lblPerAdd = $('#lblPerAdd').html().toLocaleLowerCase();
        $('#ddPermanentAddress').val('' + lblPerAdd);
        if (lblPerAdd == "false") {
            $('#divPermanentAddress').show();
        }


        var lblContact = $('#lblContact').html();
        $('#ddWayToContact').val('' + lblContact);
        if (lblContact == "Other") {
            $('#OtherContact').show();
        }

        var lblMarital = $('#lblMarital').html();
        $('#ddMaritalStatus').val('' + lblMarital);
        if (lblMarital == "Other") {
            $('#OtherMaritalStatus').show();
        }

        var lblPronoun = $('#lblPronoun').html();
        $('#ddPreferredPronouns').val('' + lblPronoun);
        if (lblPronoun == "Other") {
            $('#divOtherPronouns').show();
        }


        var lblThink = $('#lblThink').html();
        $('#ddThinkYourselfAs').val('' + lblThink);
        if (lblThink == "Unspecified/Other") {
            $('#divOtherThinkYourselfAs').show();
        }

        //------------Profile End--------------------------------------//

        //-----------------Housing Start-------------------------------//

        //var lblPlaceLive = $('#lblPlaceLive').html().trim();
        //$('#ddPlaceLiveNow').val('' + lblPlaceLive);


        //var lblShelter = $('#lblShelter').html().trim();
        //$('#ddEmergencyShelter').val('' + lblShelter);

        //-----------------Housing end-------------------------------//

        //-----------------Financial Start-------------------------------//


        //var lblPayingBills = $('#lblPayingBills').html();
        //$('#ddPayingBills').val('' + lblPayingBills);


        var lblHouseholdExpenses = $('#lblHouseholdExpenses').html().toLocaleLowerCase();
        $("input[name=HouseholdExpensesRadio][value='" + lblHouseholdExpenses + "']").prop('checked', true);

        //var lblSkipMeals = $('#lblSkipMeals').html();
        //$('#ddSkipMeals').val('' + lblSkipMeals);

            var lblCalRec = $('#lblCalRec').html().replace(/&amp;/g, '&').trim();
        $("input[name=Calworks][value='" + lblCalRec + "']").prop('checked', true);

        var lblSSRec = $('#lblSSRec').html().replace(/&amp;/g, '&');
        $("input[name=SSIRadio][value='" + lblSSRec + "']").prop('checked', true);

        var lblGARec = $('#lblGARec').html().replace(/&amp;/g, '&');
        $("input[name=GARadio][value='" + lblGARec + "']").prop('checked', true);

        var lblWIRec = $('#lblWIRec').html().replace(/&amp;/g, '&');
        $("input[name=WICRadio][value='" + lblWIRec + "']").prop('checked', true);

        var lblUnRec = $('#lblUnRec').html().replace(/&amp;/g, '&');
        $("input[name=Unemployment][value='" + lblUnRec + "']").prop('checked', true);

        var lblSDRec = $('#lblSDRec').html().replace(/&amp;/g, '&');
        $("input[name=SDIRadio][value='" + lblSDRec + "']").prop('checked', true);

        var lblReRec = $('#lblReRec').html().replace(/&amp;/g, '&');
        $("input[name=RentalAssistance][value='" + lblReRec + "']").prop('checked', true);


        //-----------------Financial end-------------------------------//

        //-----------------Employment Start-------------------------------//


            var lblLevelofEducation = $('#lblLevelofEducation').html();
        //$('#ddLevelofEducation').val('' + lblLevelofEducation);
        if (lblLevelofEducation == "Some high school") {
            $('#divHighestGrade').show();
        }

        var lblWorkSituation = $('#lblWorkSituation').html();
        //$('#ddWorkSituation').val('' + lblWorkSituation);
        if (lblWorkSituation == "I am employed full-time") {
            $('#divFullTimeNameLocation').show();
        }

        if (lblWorkSituation == "I am employed part-time") {
            $('#divPartTimeNameLocation').show();
        }

        if (lblWorkSituation == "Other") {
            $('#divOther').show();
        }


        var lblParticipating = $('#lblParticipating').html();
        //$('#ddParticipatingInEducationalOrTrainingProgram').val('' + lblParticipating);
        if (lblParticipating == "No, but I have in the past") {
            $('#divProgramSchoolAndYearAttended').show();
        }
        if (lblParticipating == "Yes") {
            $('#divParticipatingIn').show();


            var lblParticipatingIn = $('#lblParticipatingIn').html();
            var lblParticipatingInArray = lblParticipatingIn != undefined?lblParticipatingIn.split(','):'';
            $("#lblParticipatingIn").val(lblParticipatingInArray);
            $('.selectboxmultiple button[data-id="ddParticipatingIn"]').find('.filter-option-inner-inner').html(lblParticipatingIn);
            if (lblParticipatingIn == "Training Program") {
                $('#divProgramName').show();
            }
            if (lblParticipatingIn == "Student") {
                $('#divSchoolName').show();
            }
            if (lblParticipatingIn == "Training Program,Student") {
                $('#divProgramName').show();
                $('#divSchoolName').show();
            }
        }


        //-----------------Employment end-------------------------------//

        //-----------------Communication Start-------------------------------//


        var lblPersonalPhone = $('#lblPersonalPhone').html().toLocaleLowerCase();
        $("input[name=Phone][value='" + lblPersonalPhone + "']").prop('checked', true);

        //var lblDifficultyPlaces = $('#lblDifficultyPlaces').html();
        //$('#ddDifficultyGoingPlaces').val('' + lblDifficultyPlaces);



        var lblTransportation = $('#lblTransportation').html();
        //$('#ddModesOfTransportation').val('' + lblTransportation);
        if (lblTransportation == "Other") {
            $('#divOtherTransportation').show();
        }


        //-----------------Communication end-------------------------------//

       //-----------------Healthcare Start-------------------------------//

        $('#txtSSN').val('@ViewBag.SSNNumber');
        $('#lblssn').val('@ViewBag.SSNNumber');

        var lblInsuranceRadio = $('#lblInsuranceRadio').html().toLocaleLowerCase();
        $("input[name=InsuranceRadio][value='" + lblInsuranceRadio + "']").prop('checked', true);
        if (lblInsuranceRadio == "true")
        {
            $('#divInsuranceYes').show();
        }

        var lblDoctorRadio = $('#lblDoctorRadio').html().toLocaleLowerCase();
        $("input[name=RegularDoctorRadio][value='" + lblDoctorRadio + "']").prop('checked', true);
        if (lblDoctorRadio == "true") {
            $('#divRegularDoctorYes').show();
        }

        //var lblLastSeeDoctor = $('#lblLastSeeDoctor').html().trim();
        //$('#ddLastSeeDoctor').val('' + lblLastSeeDoctor);



        var lblDentistRadio = $('#lblDentistRadio').html().toLocaleLowerCase();
        $("input[name=RegularDentistRadio][value='" + lblDentistRadio + "']").prop('checked', true);
        if (lblDentistRadio == "true") {
            $('#divRegularDentistYes').show();
        }

        //var lblLastSeeDentist = $('#lblLastSeeDentist').html();
        //$('#ddLastSeeDentist').val('' + lblLastSeeDentist);

        var lblOtherDoctorsRadio = $('#lblOtherDoctorsRadio').html().toLocaleLowerCase();
        $("input[name=OtherDoctorsRadio][value='" + lblOtherDoctorsRadio + "']").prop('checked', true);
        if (lblOtherDoctorsRadio == "true") {
            $('#divOtherDoctorsYes').show();
        }


        var lblSocialWorkerRadio = $('#lblSocialWorkerRadio').html().toLocaleLowerCase();
        $("input[name=SocialWorkerRadio][value='" + lblSocialWorkerRadio + "']").prop('checked', true);
        if (lblSocialWorkerRadio == "true") {
            $('#divSocialWorker').show();
        }

        //var lblYourHealthIs = $('#lblYourHealthIs').html();
        //$('#ddYourHealthIs').val('' + lblYourHealthIs);

        //var lblPoorPhysicalHealth = $('#lblPoorPhysicalHealth').html();
            //$('#ddPastMonthPoorPhysicalHealth').val('' + lblPoorPhysicalHealth);

        var diagoption = "";
            var lblDiagnosed = $('#lblDiagnosedmatch').html();
            var lblDiagnosedArray = lblDiagnosed != undefined?lblDiagnosed.split(','):'';

            for (var i = 0; i < lblDiagnosedArray.length; i++)
            {
                var diagoption = diagoption + "," + $('#ddDiagnosed option[value="' + lblDiagnosedArray[i] + '"]').text();
            }
            var diagoption = diagoption.substring(1);
        $("#ddDiagnosed").val(lblDiagnosedArray);
            $('.selectboxmultiple button[data-id="ddDiagnosed"]').find('.filter-option-inner-inner').html(diagoption);

        //var lblWeekStrenuous = $('#lblWeekStrenuous').html();
        //$('#ddPerWeekStrenuousExercise').val('' + lblWeekStrenuous);

        //var lblDayStrenuous = $('#lblDayStrenuous').html();
        //$('#ddPerDayStrenuousExercise').val('' +lblDayStrenuous);

        //var lblYearEmergency = $('#lblYearEmergency').html();
        //$('#ddPastYearEmergency').val('' + lblYearEmergency);


        var lblSmokeCigarettes = $('#lblSmokeCigarettes').html().toLocaleLowerCase();
        $("input[name=SmokeRadio][value='" + lblSmokeCigarettes + "']").prop('checked', true);
        if (lblSmokeCigarettes == "true") {
            $('#divSmoke').show();
        }

        //var lblSmokePerDay = $('#lblSmokePerDay').html();
        //$('#ddSmokePerDay').val('' + lblSmokePerDay);

        //var lblFrequentlySmoke = $('#lblFrequentlySmoke').html();
        //$('#ddFrequentlySmoke').val('' +lblFrequentlySmoke);

        var lblTobaccoProducts = $('#lblTobaccoProducts').html().toLocaleLowerCase();
        $("input[name=TobaccoProductsRadio][value='" + lblTobaccoProducts + "']").prop('checked', true);

      //-----------------Healthcare end-------------------------------//


     //-----------------SocialSupport Start-------------------------------//

        var lblYouCanDependOn = $('#lblYouCanDependOn').html();
        $("input[name=DependOnRadio][value='" + lblYouCanDependOn + "']").prop('checked', true);

        var lblCommunityGroup = $('#lblCommunityGroup').html().toLocaleLowerCase();
        $("input[name=CommunityGroup][value='" +lblCommunityGroup + "']").prop('checked', true);

        var lblYouCanCall = $('#lblYouCanCall').html().toLocaleLowerCase();
        $("input[name=CallRadio][value='" + lblYouCanCall + "']").prop('checked', true);

        var lblThreatenYou = $('#lblThreatenYou').html().toLocaleLowerCase();
        $("input[name=ThreatenYouRadio][value='" + lblThreatenYou + "']").prop('checked', true);

        var lblNeighborhood = $('#lblNeighborhood').html();
        $('#ddFeelSafeNeighborhood').val('' + lblNeighborhood);

        //var lblFinancialSecurity = $('#lblFinancialSecurity').html();
        //$('#ddFinancialSecurity').val('' + lblFinancialSecurity);

        //var lblPlaceToStay = $('#lblPlaceToStay').html();
        //$('#ddPlaceToStay').val('' + lblPlaceToStay);

     //-----------------SocialSupport end-------------------------------//


    //-----------------LegalStatus Start-------------------------------//

        var lblEverBeenArrested = $('#lblEverBeenArrested').html();
        $("input[name=ArrestedRadio][value='" + lblEverBeenArrested + "']").prop('checked', true);

        var lblCriminalCase = $('#lblCriminalCase').html();
        $("input[name=CriminalCaseRadio][value='" + lblCriminalCase + "']").prop('checked', true);

        var lblInPrison = $('#lblInPrison').html();
        $("input[name=PrisonRadio][value='" + lblInPrison + "']").prop('checked', true);
        if (lblInPrison == "Yes")
        {
            $('#divPrison').show();

            //var lblLastReleased = $('#lblLastReleased').html();
            //$('#ddLastReleased').val('' + lblLastReleased);

            var lblRecordClearing = $('#lblRecordClearing').html().toLocaleLowerCase();
            $("input[name=RecordClearingRadio][value='" + lblRecordClearing + "']").prop('checked', true);

            var lblOweRestitution = $('#lblOweRestitution').html().toLocaleLowerCase();
            $("input[name=RestitutionRadio][value='" + lblOweRestitution + "']").prop('checked', true);
            if (lblOweRestitution == "true") {
                $('#divOwe').show();
            }
        }

        var lblCurrentlyOnParole = $('#lblCurrentlyOnParole').html();
        $("input[name=CurrentlyOnParoleRadio][value='" + lblCurrentlyOnParole + "']").prop('checked', true);
        if (lblCurrentlyOnParole == "Yes")
        {
            $('#divParoleProbation').show();

            //var lblParoleProbation = $('#lblParoleProbation').html();
            //$('#ddParoleProbation').val('' + lblParoleProbation);
        }

        var lblGettingAJob = $('#lblGettingAJob').html();
        $("input[name=GettingAJobRadio][value='" + lblGettingAJob + "']").prop('checked', true);

        var lblIssuedID = $('#lblIssuedID').html().toLocaleLowerCase();
        $("input[name=GovernmentIDRadio][value='" + lblIssuedID + "']").prop('checked', true);
        if (lblIssuedID == "true") {
            $('#divGovernmentImg').show();
        }

        var lblImmigrationStatus = $('#lblImmigrationStatus').html().toLocaleLowerCase();
        $("input[name=ImmigrationStatusRadio][value='" + lblImmigrationStatus + "']").prop('checked', true);

        var lblLandlord = $('#lblLandlord').html().toLocaleLowerCase();
        $("input[name=LandlordRadio][value='" + lblLandlord + "']").prop('checked', true);

        var lblIDImg = $('#lblIDImg').html();
        $('#lblGovernmentImg').html(lblIDImg);

    //-----------------LegalStatus end-------------------------------//



        //---------------- Substace use DRUG (Dast) starts---------------------//


        $('#PFirstName').html('@ViewBag.FirstName');
        $('#PDOB').html('@ViewBag.DOB');

            var drugcontainingarray = $('#hdfDrugsContaining').val()!=''?$('#hdfDrugsContaining').val().split(","):'';

        $('#frmDast').find(':checkbox[name^="frmDast_check1"]').each(function () {
            $(this).prop("checked", ($.inArray($(this).val(), drugcontainingarray) != -1));
        });



        $("input[name=frmDast_radio0][value='" + $('#hdfHowOftenUse').val() + "']").prop('checked', true);

        $("input[name=frmDast_radio1][value='" + $('#hdfUsedDrugsForMedicalReasons').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio2][value='" + $('#hdfOneDrugAtATime').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio3][value='" + $('#hdfUnableToStopUsingDrugs').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio4][value='" + $('#hdfBlackouts').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio5][value='" + $('#hdfGuiltyAboutYourDrug').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio6][value='" + $('#hdfSpouseComplain').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio7][value='" + $('#hdfNeglectedFamily').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio8][value='" + $('#hdfEngagedInIllegalActivities').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio9][value='" + $('#hdfWithdrawalSymptoms').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio10][value='" + $('#hdfMedicalLoss').val() + "']").prop('checked', true);

        $("input[name=frmDast_radio11][value='" + $('#hdfEverInjectedDrugs').val() + "']").prop('checked', true);
        $("input[name=frmDast_radio12][value='" + $('#hdfInjectedDrugInLast90OrMoreThen90Days').val() + "']").prop('checked', true);

        $("input[name=frmDast_radio13][value='" + $('#hdfTreatmentForSubstanceAbuse').val() + "']").prop('checked', true);
          //---------------- Substace use DRUG (Dast) ends---------------------//

     //---------------- Substace use DRUG (Audit) Start---------------------//

        //var lblParoleProbation = $('#lblParoleProbation').html();
            //$('#ddParoleProbation').val('' + lblParoleProbation);
            $('#ddDrinkContainingAlcohol').change(function () {

                var drinkcontainingalcohol = $('#ddDrinkContainingAlcohol option:selected').text();
                if (drinkcontainingalcohol == "Never") {
                    $('#divInjuredDrinking').css('display', 'none');
                    $('#divFriendsSuggested').css('display', 'none');
            $("#ddInjuredDrinking option:contains(" + "No" + ")").attr('selected', 'selected');
             $("#ddFriendsSuggested option:contains(" + "No" +")").attr('selected', 'selected');
                }
                else
                {
                    $('#divInjuredDrinking').css('display', 'block');
                    $('#divFriendsSuggested').css('display', 'block');

                }
            });

            var drinkcontainingalcohol = $('#ddDrinkContainingAlcohol option:selected').text();
            if (drinkcontainingalcohol == "Never") {
                $('#divInjuredDrinking').css('display', 'none');
                $('#divFriendsSuggested').css('display', 'none');
                $("#ddInjuredDrinking option:contains(" + "No" + ")").attr('selected', 'selected');
                $("#ddFriendsSuggested option:contains(" + "No" + ")").attr('selected', 'selected');
            }
            else {
                $('#divInjuredDrinking').css('display', 'block');
                $('#divFriendsSuggested').css('display', 'block');
            }







            $('#ddHowManyDrinks').change(function () {

                var HowManyDrinks = $('#ddHowManyDrinks option:selected').text();
                var SixOrMoreDrink = $('#ddSixOrMoreDrink option:selected').text();
                if (HowManyDrinks == "1 or 2" && SixOrMoreDrink=="Never") {
                    $('#divInjuredDrinking').css('display', 'none');
                    $('#divFriendsSuggested').css('display', 'none');
                $("#ddInjuredDrinking option:contains(" + "No" + ")").attr('selected', 'selected');
              $("#ddFriendsSuggested option:contains(" + "No" + ")").attr('selected', 'selected');
                }
                else {
                    $('#divInjuredDrinking').css('display', 'block');
                    $('#divFriendsSuggested').css('display', 'block');

                }
            });


            $('#ddSixOrMoreDrink').change(function () {

                var HowManyDrinks = $('#ddHowManyDrinks option:selected').text();
                var SixOrMoreDrink = $('#ddSixOrMoreDrink option:selected').text();
                if (HowManyDrinks == "1 or 2" && SixOrMoreDrink == "Never") {
                    $('#divInjuredDrinking').css('display', 'none');
                    $('#divFriendsSuggested').css('display', 'none');
                    $("#ddInjuredDrinking option:contains(" + "No" + ")").attr('selected', 'selected');
                    $("#ddFriendsSuggested option:contains(" + "No" + ")").attr('selected', 'selected');
                }
                else {
                    $('#divInjuredDrinking').css('display', 'block');
                    $('#divFriendsSuggested').css('display', 'block');

                }
            });



            var HowManyDrinks = $('#ddHowManyDrinks option:selected').text();
            var SixOrMoreDrink = $('#ddSixOrMoreDrink option:selected').text();
            if (HowManyDrinks == "1 or 2" && SixOrMoreDrink == "Never") {
                $('#divInjuredDrinking').css('display', 'none');
                $('#divFriendsSuggested').css('display', 'none');
                $("#ddInjuredDrinking option:contains(" + "No" + ")").attr('selected', 'selected');
                $("#ddFriendsSuggested option:contains(" + "No" + ")").attr('selected', 'selected');
            }
            else {
                $('#divInjuredDrinking').css('display', 'block');
                $('#divFriendsSuggested').css('display', 'block');

            }






         //---------------- Substace use DRUG (Audit) end---------------------//

         //---------------- Mental Health starts ---------------------//

         $('#PmentalFirstName').html('@ViewBag.FirstName');
        $('#mentalPDOB').html('@ViewBag.mentalPDOB');

        $("input[name=frmPHQ_radio0][value='" + $('#hdfLittleInterest').val() + "']").prop('checked', true);

        $("input[name=frmPHQ_radio1][value='" + $('#hdfFeelingDown').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio2][value='" + $('#hdfTroubleFalling').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio3][value='" + $('#hdfFeelingTired').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio4][value='" + $('#hdfPoorAppetite').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio5][value='" + $('#hdfFeelingBad').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio6][value='" + $('#hdfTroubleConcentraiting').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio7][value='" + $('#hdfrestless').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio8][value='" + $('#hdfHurtingYourself').val() + "']").prop('checked', true);
        $("input[name=frmPHQ_radio9][value='" + $('#hdfProblemsMade').val() + "']").prop('checked', true);


            var option = "";
            var lblMentalHealth = $('#lblMentalHealth').html();
            var lblMentalHealthArray = lblMentalHealth != undefined?lblMentalHealth.split(','):'';
            for (var i = 0; i < lblMentalHealthArray.length; i++)
            {
                var option = option+","+ $('#ddMentalHealth option[value="' + lblMentalHealthArray[i] + '"]').text();
            }
            var option = option.substring(1);
            $("#ddMentalHealth").val(lblMentalHealthArray);
            $('.selectboxmultiple button[data-id="ddMentalHealth"]').find('.filter-option-inner-inner').html(option);

        //var lblMentalHealth = $('#lblMentalHealth').html();
        //    var lblMentalHealthArray = lblMentalHealth.split(',');
        //    $("#ddMentalHealth").val(lblMentalHealthArray);
        //$('.selectboxmultiple button[data-id="ddMentalHealth"]').find('.filter-option-inner-inner').html(lblMentalHealth);

         //---------------- Mental Health ends ---------------------//

        //----------------------Clinic only(Program) start-------------------------//


            var lblScreeningTests = $('#lblScreeningTests').html();
            var lblScreeningTestsArray = lblScreeningTests != undefined?lblScreeningTests.split(','):'';
        $("#ddScreeningTests").val(lblScreeningTestsArray);
        $('.selectboxmultiple button[data-id="ddScreeningTests"]').find('.filter-option-inner-inner').html(lblScreeningTests);

        $('#txtDateOfSurgeries').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }
        );


        $('#txtDueDate').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }
        );



        $("input[name=frmClinic_radio1][value='" + $('#hdfPregnant').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio2][value='" + $('#hdfBirthControl').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio3][value='" + $('#hdfEmergencyContraception').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio4][value='" + $('#hdfEverBeenPregnant').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio5][value='" + $('#hdfHealthcareDirective').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio6][value='" + $('#hdfAdvancedHealthcareDirectives').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio7][value='" + $('#hdfTestedForTB').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio8][value='" + $('#hdfTBdiseaseAtAnyTime').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio9][value='" + $('#hdfWeakenedImmuneSystem').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio10][value='" + $('#hdfElevatedRateOfTB').val() + "']").prop('checked', true);
        $("input[name=frmClinic_radio11][value='" + $('#hdfVolunteerOfHighRisk').val() + "']").prop('checked', true);



        var RadioPregnant = $('#lblpregnant').html();
        if (RadioPregnant == "Yes") {
            $('#divIsPregnant').show();

        }
        else {
            $('#divIsPregnant').hide();
        }

        var RadioBirth = $('#lblbirth').html();
        if (RadioBirth == "Yes") {
            $('#divBirthControl').show();

        }
        else {
            $('#divBirthControl').hide();
        }

        var RadioPregnant = $('#lblPregnant').html();
        if (RadioPregnant == "Yes") {
            $('#divPregnantYes').show();

        }
        else {
            $('#divPregnantYes').hide();
        }


           //----------------------Clinic only(Program) end-------------------------//

         //----------------------Dream only(Program) Start-------------------------//

          $("input[name=frmDream_radio1][value='" + $('#hdfDrivenBySomeone').val() + "']").prop('checked', true);

          //----------------------Dream only(Program) end-------------------------//


         //----------------------OU only(Program) starts-------------------------//

        $("input[name=frmOU_radio1][value='" + $('#hdfUnsafeCity').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio2][value='" + $('#hdfDrugTest').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio3][value='" + $('#hdfLearningDisabilities').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio4][value='" + $('#hdfAnyPendingCourtDates').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio5][value='" + $('#hdfConvictedOfAnyOffense').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio6][value='" + $('#hdfMisdemeanor').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio7][value='" + $('#hdfFelony').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio8][value='" + $('#hdfRestrainingOrders').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio9][value='" + $('#hdfAngerManagement').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio10][value='" + $('#hdfTermsOfProbation').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio11][value='" + $('#hdfGunInvolvedActivity').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio12][value='" + $('#hdfGangRelatedStreetViolence').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio13][value='" + $('#hdfKilledDueToTurf').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio14][value='" + $('#hdfHotSpotArea').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio15][value='" + $('#hdfAssociateWithTurfs').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio16][value='" + $('#hdfViolentOffense').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio17][value='" + $('#hdfHaveSSN').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio18][value='" + $('#hdfHaveStateIssuedPhotoID').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio19][value='" + $('#hdfHaveI9').val() + "']").prop('checked', true);
        $("input[name=frmOU_radio20][value='" + $('#hdfEligibleForEmployment').val() + "']").prop('checked', true);


        $('#txtPendingDate').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }
        );

        $('#txtMisdemeanor').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }
        );

        $('#txtFelony').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }
        );


         //----------------------OU only(Program) ends-------------------------//


        $(".nav-menu").removeClass("active");
        $("#Add").addClass("active");

        $cellphone = $('#txtCellPhone');
        $cellphone.blur(function (e) {
            phone = $("#txtCellPhone").val();
            phone = phone.replace(/[^0-9]/g, '');
            if (phone.length != 10) {
                //alert('Phone number must be 10 digits.');
                $('#txtCellPhone').val('');
                $('#txtCellPhone').focus();
            }
        });



        $('#txtQuitDate').datepicker(
           {
                changeYear: true,
                changeMonth: true
            }

        );

        $('#txtProbParoleEnd').datepicker(
            {
                changeYear: true,
                changeMonth: true
            }

        );


        $('#ddRace').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
            // do something...

            //  var selected = $('#ddRace option:selected').val();
            var divOtherRace = $('#OtherRace');

            var selectedvalues = $('#ddRace').selectpicker().val();

            if ($.inArray("Other", selectedvalues) != -1)
            {
                divOtherRace.show();
            }
            else
            {
                divOtherRace.hide();

            }


            // check if option at index 0 is clicked
            if (clickedIndex == 0 || clickedIndex == null) {
                var all = $(this).children('option[value="Select All"]');
                optionvalue = all.html();

                // check if All option is clicked
                if (optionvalue == "Select All") {

                    // check if all option is selected or not
                    if (isSelected || isSelected == null) {

                        // make all option selected if all option is selected
                        $(this).selectpicker('selectAll');

                    } else {

                        // make all option un-selected if all option is un-selected
                        $(this).selectpicker('deselectAll');
                    }
                }
            }
            else {

                // get selected values and convert it into array
                var selectedarray = $(this).val().toString()!=''?$(this).val().toString().split(','):'';

                // check if all values are selected
                if (selectedarray.length >= 7 && $.inArray("Select All", selectedarray) == -1) {

                    // select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", true);

                }
                else {

                    // un-select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", false);

                }

            }

            // refresh select list
            $(this).selectpicker('refresh');


            $.each($("#ddRace option:selected"), function () {

                if ($(this).val() == "Other" || $(this).val() =="Select All")
                {

                }
                else
                {
                    if (jQuery.inArray($(this).val(), RaceEthnicity) == -1) {
                        RaceEthnicity.push($(this).val());
                    }
                }

            });

            });


            $.each($("#ddRace option:selected"), function () {

                if ($(this).val() == "Other" || $(this).val() == "Select All") {

                }
                else {
                    if (jQuery.inArray($(this).val(), RaceEthnicity) == -1) {
                        RaceEthnicity.push($(this).val());
                    }
                }

            });




            $('#ddLanguages').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
            // do something...

            var divOtherLanguage = $('#OtherLanguage');

            var selectedvalues = $('#ddLanguages').selectpicker().val();

            if ($.inArray("Other", selectedvalues) != -1) {
                divOtherLanguage.show();
            }
            else {
                divOtherLanguage.hide();

            }


                // check if option at index 0 is clicked
                if (clickedIndex == 0 || clickedIndex == null) {
                var all = $(this).children('option[value="Select All"]');
                optionvalue = all.html();

                // check if All option is clicked
                if (optionvalue == "Select All") {

                    // check if all option is selected or not
                    if (isSelected || isSelected == null) {

                        // make all option selected if all option is selected
                        $(this).selectpicker('selectAll');

                    } else {

                        // make all option un-selected if all option is un-selected
                        $(this).selectpicker('deselectAll');
                    }
                }
            }
            else {

                // get selected values and convert it into array
                var selectedarray = $(this).val().toString()?$(this).val().toString().split(','):'';

                // check if all values are selected
                if (selectedarray.length >= 6 && $.inArray("Select All", selectedarray) == -1) {

                    // select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", true);

                }
                else {

                    // un-select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", false);

                }

            }

            // refresh select list
            $(this).selectpicker('refresh');


            $.each($("#ddLanguages option:selected"), function () {
                if ($(this).val() == "Other" || $(this).val() == "Select All")
                {

                }
                else
                {
                    if (jQuery.inArray($(this).val(), LanguagesSpeak) == -1) {
                        LanguagesSpeak.push($(this).val());
                    }
                }
            });

            });


            $.each($("#ddLanguages option:selected"), function () {
                //second
                if ($(this).val() == "Other" || $(this).val() == "Select All") {

                }
                else {
                    if (jQuery.inArray($(this).val(), LanguagesSpeak) == -1) {
                        LanguagesSpeak.push($(this).val());
                    }

                }

            });






        $('#ddDiagnosed').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
            // do something...

           // var selected = $('#ddDiagnosed option:selected').val();


            var selectedvalues = $('#ddDiagnosed').selectpicker().val();


            // check if option at index 0 is clicked
            if (clickedIndex == 0) {
                var all = $(this).children('option[value="0"]');
                optionvalue = all.html();

                // check if All option is clicked
                if (optionvalue == "Select All") {

                    // check if all option is selected or not
                    if (isSelected) {

                        // make all option selected if all option is selected
                        $(this).selectpicker('selectAll');

                    } else {

                        // make all option un-selected if all option is un-selected
                        $(this).selectpicker('deselectAll');
                    }
                }
            }
            else {

                // get selected values and convert it into array
                var selectedarray = $(this).val().toString()!=''?$(this).val().toString().split(','):'';

                // check if all values are selected
                if (selectedarray.length >= 17 && $.inArray("0", selectedarray) == -1) {

                    // select all option if all values are selected
                    $(this).children('option[value="0"]').prop("selected", true);

                }
                else {

                    // un-select all option if all values are selected
                    $(this).children('option[value="0"]').prop("selected", false);

                }

            }

            // refresh select list
            $(this).selectpicker('refresh');


            //$.each($("#ddDiagnosed option:selected"), function () {
            //
            //    if ($(this).val() == "Select All")
            //    {

            //    }
            //    else {
            //        Diagnosed.push($(this).val());
            //    }

            //});

            });







        $('#ddScreeningTests').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
            // do something...

            //  var selected = $('#ddRace option:selected').val();


            var selectedvalues = $('#ddScreeningTests').selectpicker().val();
            if (selectedvalues == "Nothing selected" || selectedvalues == "") {
                $("#divlastScreening").hide();
                $("#txtYearOflastScreening").val("");
            }
            else {
                $("#divlastScreening").show();
            }





            // check if option at index 0 is clicked
            if (clickedIndex == 0) {
                var all = $(this).children('option[value="Select All"]');
                optionvalue = all.html();

                // check if All option is clicked
                if (optionvalue == "Select All") {

                    // check if all option is selected or not
                    if (isSelected) {

                        // make all option selected if all option is selected
                        $(this).selectpicker('selectAll');

                    } else {

                        // make all option un-selected if all option is un-selected
                        $(this).selectpicker('deselectAll');
                    }
                }
            }
            else {

                // get selected values and convert it into array
                var selectedarray = $(this).val().toString()?$(this).val().toString().split(','):'';

                // check if all values are selected
                if (selectedarray.length >= 10 && $.inArray("Select All", selectedarray) == -1) {

                    // select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", true);

                }
                else {

                    // un-select all option if all values are selected
                    $(this).children('option[value="Select All"]').prop("selected", false);

                }

            }

            // refresh select list
            $(this).selectpicker('refresh');

            //ScreeningTests = [];
            $.each($("#ddScreeningTests option:selected"), function () {

                if ($(this).val() == "Select All") {

                }
                else {
                    ScreeningTests.push($(this).val());
                }

            });

            });

            $.each($("#ddScreeningTests option:selected"), function () {

                if ($(this).val() == "Select All") {

                }
                else {
                    ScreeningTests.push($(this).val());
                }

            });

        $('#ddGender').on('change', function ()
        {
            var selected = $('#ddGender option:selected').val();
            var divOtherGender = $('#divOtherGender');
            var txtOtherGender = $('#txtOtherGender');

            if (selected == 'Other')
            {
                divOtherGender.show();
            }
            else
            {
                divOtherGender.hide();
                txtOtherGender.val('');
            }
        });

        //$('#ddRace').on('changed.bs.select', function () {
        //    RaceEthnicity = [];
        //    $.each($("#ddRace option:selected"), function () {
        //        RaceEthnicity.push($(this).val());
        //    });

        //});


        //$('#ddLanguages').on('changed.bs.select', function () {
        //    LanguagesSpeak = [];
        //    $.each($("#ddLanguages option:selected"), function () {
        //        LanguagesSpeak.push($(this).val());
        //    });
        //});


        //$("select.selectboxmultiple").change(function () {

        //    RaceEthnicity = [];
        //    $.each($(".selectboxmultiple option:selected"), function () {
        //        RaceEthnicity.push($(this).val());
        //    });
        //});

        $('#ddMaritalStatus').on('change', function ()
        {
            var selected = $('#ddMaritalStatus option:selected').val();
            var divOtherMaritalStatus = $('#OtherMaritalStatus');

            if (selected == 'Other')
            {
                divOtherMaritalStatus.show();
            }
            else
            {
                divOtherMaritalStatus.hide();
            }
        });

        $('#ddSmoker').on('change', function ()
        {
            var selected = $('#ddSmoker option:selected').val();
            var divQuit = $('#divQuit');
            var divLastTimeYouSmoked = $('#divLastTimeYouSmoked');
            var divSmokingQuitDate = $('#divSmokingQuitDate');
            var ddQuit = $('#ddQuit');
            var ddLastTimeYouSmoked = $('#ddLastTimeYouSmoked');

            if (selected =="true")
            {
                divQuit.show();
                divLastTimeYouSmoked.show();
            }
            else
            {
                divQuit.hide();
                divLastTimeYouSmoked.hide();
                divSmokingQuitDate.hide();
                ddQuit.val(0);
                ddLastTimeYouSmoked.val(0);
            }
        });

        $('#ddQuit').on('change', function ()
        {
            var selected = $('#ddQuit option:selected').val();
            var divSmokingQuitDate = $('#divSmokingQuitDate');

            if (selected == "true")
            {
                divSmokingQuitDate.show();
            }
            else
            {
                divSmokingQuitDate.hide();
            }
        });

        $('#ddPreferredPronouns').on('change', function ()
        {
            var selected = $('#ddPreferredPronouns option:selected').val();
            var divOtherPronouns = $('#divOtherPronouns');
            var txtOtherPronouns = $('#txtOtherPronouns');


            if (selected == 'Other')
            {
                divOtherPronouns.show();
            }
            else
            {
                divOtherPronouns.hide();
                txtOtherPronouns.val('');
            }
        });

        $('#ddThinkYourselfAs').on('change', function ()
        {
            var selected = $('#ddThinkYourselfAs option:selected').val();
            var divOtherThinkYourselfAs= $('#divOtherThinkYourselfAs');
            var txtOtherThinkYourself = $('#txtOtherThinkYourself');

            if (selected == 'Unspecified/Other')
            {
                divOtherThinkYourselfAs.show();
            }
            else
            {
                divOtherThinkYourselfAs.hide();
                txtOtherThinkYourself.val('');
            }
        });

        $('#ddPermanentAddress').on('change', function ()
        {
            var selected = $('#ddPermanentAddress option:selected').val();
            var divPermanentAddress = $('#divPermanentAddress');
            var txtPermanentAddress = $('#txtPermanentAddress');

            if (selected == "false")
            {
                divPermanentAddress.show();
            }
            else
            {
                divPermanentAddress.hide();
                txtPermanentAddress.val('');
            }
        });

        $('#ddWayToContact').on('change', function ()
        {
            var selected = $('#ddWayToContact option:selected').val();
            var divOtherContact = $('#OtherContact');
            var txtOtherContact = $('#txtOtherContact');

            if (selected == 'Other')
            {
                divOtherContact.show();
            }
            else
            {
                divOtherContact.hide();
                txtOtherContact.val('');
            }
            });
            //------------Employment Education Start-----------//


            $('#ddLevelofEducation').on('change', function () {


                var selected = $('#ddLevelofEducation option:selected').text();
            var divHighestGrade = $('#divHighestGrade');
            var txtHighestGrade = $('#txtHighestGrade');

            if (selected == 'Some high school') {
                divHighestGrade.show();
            }
            else {
                divHighestGrade.hide();
                txtHighestGrade.val('');
            }
        });

            $('#ddWorkSituation').on('change', function () {

                var selected = $('#ddWorkSituation option:selected').text();
            var divFullTimeNameLocation = $('#divFullTimeNameLocation');
            var divPartTimeNameLocation = $('#divPartTimeNameLocation');
            var divOther = $('#divOther');
            var txtFullTimeNameLocation = $('#txtFullTimeNameLocation');
            var txtPartTimeNameLocation = $('#txtPartTimeNameLocation');
            var txtOtherWorkSituation = $('#txtOtherWorkSituation');
            divFullTimeNameLocation.hide();
            divPartTimeNameLocation.hide();
            divOther.hide();
            txtFullTimeNameLocation.val('');
            txtPartTimeNameLocation.val('');
            txtOtherWorkSituation.val('');


            if (selected == 'I am employed full-time') {
                divFullTimeNameLocation.show();
                txtPartTimeNameLocation.val('');
                txtOtherWorkSituation.val('');

            }
            if (selected =='I am employed part-time') {
                divPartTimeNameLocation.show();
                txtFullTimeNameLocation.val('');
                txtOtherWorkSituation.val('');

            }
            if (selected == 'Other') {

                divOther.show();
                txtFullTimeNameLocation.val('');
                txtPartTimeNameLocation.val('');
            }

        });



            $('#ddParticipatingInEducationalOrTrainingProgram').on('change', function () {

                var selected = $('#ddParticipatingInEducationalOrTrainingProgram option:selected').text();
                var divParticipatingIn = $('#divParticipatingIn');
                var divProgramSchoolAndYearAttended = $('#divProgramSchoolAndYearAttended');
                var txtProgramSchoolAndYearAttended = $('#txtProgramSchoolAndYearAttended');


            if (selected == 'Yes') {
                divParticipatingIn.show();
            }
            else {
                divParticipatingIn.hide();
                $('#frmEmploymentEducation').find('.selectboxmultiple').selectpicker('val', '');

                }

         if (selected == 'No, but I have in the past')
         {
          divProgramSchoolAndYearAttended.show();
          }
           else
          {
                divProgramSchoolAndYearAttended.hide();
                txtProgramSchoolAndYearAttended.val('');
           }

        });


        //    $('#ddParticipatingInEducationalOrTrainingProgram').on('change', function () {
        //
        //        var selected = $('#ddParticipatingInEducationalOrTrainingProgram option:selected').text();
        //    var divProgramSchoolAndYearAttended = $('#divProgramSchoolAndYearAttended');
        //    var txtProgramSchoolAndYearAttended = $('#txtProgramSchoolAndYearAttended');

        //    if (selected == 'No, but I have in the past') {
        //        divProgramSchoolAndYearAttended.show();
        //    }
        //    else {
        //        divProgramSchoolAndYearAttended.hide();
        //        txtProgramSchoolAndYearAttended.val('');
        //    }
        //});

        $('#ddParticipatingIn').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {


            var divProgramName = $('#divProgramName');
            var divSchoolName = $('#divSchoolName');
            var txtProgramName = $('#txtProgramName');
            var txtSchoolName = $('#txtSchoolName');


            var selectedvalues = $('#ddParticipatingIn').selectpicker().val();

            if ($.inArray("Training Program", selectedvalues) != -1) {
                divProgramName.show();

            }
            else {
                divProgramName.hide();
                txtProgramName.val('');

            }

            if ($.inArray("Student", selectedvalues) != -1) {
                divSchoolName.show();

            }
            else {
                divSchoolName.hide();
                txtSchoolName.val('');
            }


            ParticipatingIn = [];

            $.each($("#ddParticipatingIn option:selected"), function () {
                ParticipatingIn.push($(this).val());
            });

            });

             //------------Employment Education end-----------//

            //-------Communication And Mobility start-------------------------------//


            $('#ddModesOfTransportation').on('change', function () {

                var selected = $('#ddModesOfTransportation option:selected').text();
            var divOtherTransportation = $('#divOtherTransportation');
            var txtOtherTransportation = $('#txtOtherTransportation');

            if (selected == 'Other') {
                divOtherTransportation.show();
            }
            else {
                divOtherTransportation.hide();
                txtOtherTransportation.val('');
            }
        });

             //-------Communication And Mobility end-------------------------------//
            //----------------------mental health start-----------------------//


        //$('#ddMentalHealth').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        //    // do something...

        //    //  var selected = $('#ddRace option:selected').val();
        //

        //    var selectedvalues = $('#ddMentalHealth').selectpicker().val();

        //
        //    // check if option at index 0 is clicked
        //    if (clickedIndex == 0) {
        //        var all = $(this).children('option[value="Select All"]');
        //        optionvalue = all.html();

        //        // check if All option is clicked
        //        if (optionvalue == "Select All") {

        //            // check if all option is selected or not
        //            if (isSelected) {

        //                // make all option selected if all option is selected
        //                $(this).selectpicker('selectAll');

        //            } else {

        //                // make all option un-selected if all option is un-selected
        //                $(this).selectpicker('deselectAll');
        //            }
        //        }
        //    }
        //    else {

        //        // get selected values and convert it into array
        //        var selectedarray = $(this).val().toString().split(',');

        //        // check if all values are selected
        //        if (selectedarray.length >= 6 && $.inArray("Select All", selectedarray) == -1) {

        //            // select all option if all values are selected
        //            $(this).children('option[value="Select All"]').prop("selected", true);

        //        }
        //        else {

        //            // un-select all option if all values are selected
        //            $(this).children('option[value="Select All"]').prop("selected", false);

        //        }

        //    }

        //    // refresh select list
        //    $(this).selectpicker('refresh');

        //    MentalHealth = [];
        //    $.each($("#ddMentalHealth option:selected"), function () {
        //
        //        if ($(this).val() == "Select All") {

        //        }
        //        else {
        //            MentalHealth.push($(this).val());
        //        }

        //    });

        //});



            $('#ddMentalHealth').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                // do something...

               // var selected = $('#ddMentalHealth option:selected').val();


                var selectedvalues = $('#ddMentalHealth').selectpicker().val();


                // check if option at index 0 is clicked
                if (clickedIndex == 0) {
                    var all = $(this).children('option[value="0"]');
                    optionvalue = all.html();

                    // check if All option is clicked
                    if (optionvalue == "Select") {

                        // check if all option is selected or not
                        if (isSelected) {

                            // make all option selected if all option is selected
                            $(this).selectpicker('selectAll');

                        } else {

                            // make all option un-selected if all option is un-selected
                            $(this).selectpicker('deselectAll');
                        }
                    }
                }
                else {

                    // get selected values and convert it into array
                    var selectedarray = $(this).val().toString()?$(this).val().toString().split(','):'';

                    // check if all values are selected
                    if (selectedarray.length >= 6 && $.inArray("0", selectedarray) == -1) {

                        // select all option if all values are selected
                        $(this).children('option[value="0"]').prop("selected", true);

                    }
                    else {

                        // un-select all option if all values are selected
                        $(this).children('option[value="0"]').prop("selected", false);

                    }

                }

                // refresh select list
                $(this).selectpicker('refresh');

                //MentalHealth = [];
                //$.each($("#ddMentalHealth option:selected"), function () {
                //
                //    if ($(this).val() == "0") {

                //    }
                //    else {
                //        MentalHealth.push($(this).val());
                //    }

                //});

            });

      //-------------------------mental health end------------------------------------------------------------------//

        //$('#ProfileSave').click(function ()
        //{
        //
        //    $('#Profile').find('.form-control').val("");
        //    $('#Profile').find('.form-control').prop("selectedIndex", 0);
        //    $('#Profile').find('.custom-control-input').prop("checked", false);
        //    $('#Profile').find('.selectboxmultiple').selectpicker('val', '');
        //});

        //$('#HousingSave').click(function ()
        //{
        //    $('#Housing').find('.form-control').prop("selectedIndex", 0);
        //});

        //$('#FinancialSave').click(function ()
        //{
        //    $('#Financial').find('.form-control').prop("selectedIndex", 0);
        //    $('#Financial').find('.custom-control-input').prop("checked", false);
        //});

        //$('#EmploymentSave').click(function ()
        //{
        //    $('#Employment').find('.form-control').prop("selectedIndex", 0);
        //});

        //$('#CommunicationSave').click(function ()
        //{
        //    $('#Communication').find('.form-control').prop("selectedIndex", 0);
        //    $('#Communication').find('.custom-control-input').prop("checked", false);
        //});

        //$('#HealthcareSave').click(function ()
        //{
        //    $('#Healthcare').find('.form-control').val("");
        //    $('#Healthcare').find('.form-control').prop("selectedIndex", 0);
        //    $('#Healthcare').find('.custom-control-input').prop("checked", false);
        //    $('#Healthcare').find('.selectboxmultiple').selectpicker('val', '');
        //});

        //$('#SocialSupportsSave').click(function ()
        //{
        //    $('#SocialSupports').find('.form-control').prop("selectedIndex", 0);
        //    $('#SocialSupports').find('.custom-control-input').prop("checked", false);
        //});

        //$('#LegalStatusSave').click(function ()
        //{
        //    $('#LegalStatus').find('.form-control').val("");
        //    $('#LegalStatus').find('.form-control').prop("selectedIndex", 0);
        //    $('#LegalStatus').find('.custom-control-input').prop("checked", false);
        //    $('#LegalStatus').find('#customFile').val("");
        //});


        $('.selectboxmultiple').selectpicker();


        var txtChildren = $("#txtChildren").val();
        if (txtChildren != "")
        {


                $('.ChildrenAgeDiv').html('');

                var val = $('#txtChildren').val();

                var divhtml = '';

                for (var i = 1; i <= parseInt(val); i++) {

                    var temp = $('.ChildrenAgeTemplate').html();
                    temp = temp.replace('#number', i);
                    temp = temp.replace('#yearid', 'child_year_' + i);
                    temp = temp.replace('#daysid', 'child_days_' + i);
                    divhtml = divhtml + temp;
                }

            $('.ChildrenAgeDiv').html(divhtml);
            var lblAgeChildren = $('#lblAgeChildren').html();
            var AgeChildrenArray = lblAgeChildren != undefined ? lblAgeChildren.split(',') : '';
            if (AgeChildrenArray != '') {
                for (var i = 0; i < AgeChildrenArray.length; i++) {
                    var AgeChildren = AgeChildrenArray != '' ? AgeChildrenArray[i].split(':') : '';
                    $('#child_year_' + (i + 1)).val(AgeChildren[0].toString());
                    $('#child_days_' + (i + 1)).val(AgeChildren[1].toString());
                }
            }
        }





        if ('@ViewBag.message' == "RecordSaved") {

            toastr.success("Client saved successfully")
        }

        $("#PatientImg").change(function () {

            var formData = new FormData();
            var totalFiles = document.getElementById("PatientImg").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("PatientImg").files[i];
                 file = this.files[i];
                const fileType = file['type'];
                const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];
                if (!validImageTypes.includes(fileType)) {
                    // invalid file type code goes here.
                    toastr.error("Invalid Image");
                }

                formData.append("PatientImg", file);
            }
            $.ajax({
                type: "POST",
                url: '/Patient/Upload',
                data: formData,
                dataType: 'html',
                contentType: false,
                processData: false,
                success: function (response) {
                    PatientImg = response;

                    $("input[type=hidden][name=PatientImg]").val(PatientImg);
                    $("#patientpic").attr('src', "/Files/"+response)
                },
                error: function (error) {
                    toastr.error("errror");
                },
            })
        });

        $("#GovernmentIDImg").change(function () {

            var formData = new FormData();
            var totalFiles = document.getElementById("GovernmentIDImg").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("GovernmentIDImg").files[i];
                file = this.files[i];
                const fileType = file['type'];
                const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];
                if (!validImageTypes.includes(fileType)) {
                    // invalid file type code goes here.
                    toastr.error("Invalid Image");
                }

                formData.append("GovernmentIDImg", file);
            }
            $.ajax({
                type: "POST",
                url: '/Patient/Upload',
                data: formData,
                dataType: 'html',
                contentType: false,
                processData: false,
                success: function (response) {
                    GovernmentIDImg = response;
                    $("input[type=hidden][name=GovernmentIDImg]").val(GovernmentIDImg);
                    $("#Governmentpic").attr('src', "/Files/" + response)

                },
                error: function (error) {
                    toastr.error("errror");
                },
            })
        });


        $("#ProgramConsentImg").change(function () {

            var formData = new FormData();
            var totalFiles = document.getElementById("ProgramConsentImg").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("ProgramConsentImg").files[i];
                file = this.files[i];
                const fileType = file['type'];
                const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];
                if (!validImageTypes.includes(fileType)) {
                    // invalid file type code goes here.
                    toastr.error("Invalid Image");
                }

                formData.append("ProgramConsentImg", file);
            }
            $.ajax({
                type: "POST",
                url: '/Patient/Upload',
                data: formData,
                dataType: 'html',
                contentType: false,
                processData: false,
                success: function (response) {
                    ProgramConsentImg = response;

                    $("input[type=hidden][name=ProgramConsentForm]").val(ProgramConsentImg);
                    $("#ProgramConsentPic").attr('src', "/Files/" + response)
                },
                error: function (error) {
                    toastr.error("errror");
                },
            })
        });

            //----------------------Peralta College(Program) end-------------------------//

            $('#ddOneYouAre').change(function () {

                OneYouAre = $('#ddOneYouAre option:selected').text();
                if (OneYouAre == "Student") {
                    $('#divStudent').show();
                }
                else {
                    $('#divStudent').hide();
                    $('#txtStudentID').val('');
                }
            });


            var OneYou = $('#ddOneYouAre option:selected').text();

            if (OneYou == "Student") {
                $('#divStudent').show();
            }
            else {
                $('#divStudent').hide();
                $('#txtStudentID').val('');
            }



    });

    function Validation()
    {




        var check = true;
        if (check == true)
        {
            if ($('#ddSmoker option:selected').val() == 0)
            {

                $('#ddSmoker').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#ddSmoker').removeClass('invalid-field');
            }

            if ($('#ddSmoker option:selected').val() == "true")
            {

                $('#ddQuit').addClass('invalid-field');
                check = false;
                if ($('#ddQuit option:selected').val() == 0) {
                    $('#ddQuit').addClass('invalid-field');
                    check = false;
                }
                else
                {
                    $('#ddQuit').removeClass('invalid-field');
                    check = true;
                }
            }

            else
            {
                $('#ddQuit').removeClass('invalid-field');
            }
            if ($('#ddQuit option:selected').val() == "true")
            {

                $('#txtQuitDate').addClass('invalid-field');
                check = false;
                if ($('#txtQuitDate').val() == '')
                {
                    $('#txtQuitDate').addClass('invalid-field');
                    check = false;
                }
                else
                {
                    $('#txtQuitDate').removeClass('invalid-field');
                    check = true;
                }

            }
            else
            {
                $('#txtQuitDate').removeClass('invalid-field');
            }




            if ($('#txtFirstName').val() == '')
            {
                $('#txtFirstName').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtFirstName').removeClass('invalid-field');
            }
            //if ($('#txtMiddleName').val() == '')
            //{
            //    $('#txtMiddleName').addClass('invalid-field');
            //    check = false;
            //}
            //else
            //{
            //    $('#txtMiddleName').removeClass('invalid-field');
            //}
            if ($('#txtLastName').val() == '')
            {
                $('#txtLastName').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtLastName').removeClass('invalid-field');
            }
            if ($('#txtDOB').val() == '')
            {
                $('#txtDOB').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtDOB').removeClass('invalid-field');
            }
            if ($('#ddGender option:selected').val() == 0)
            {
                $('#ddGender').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#ddGender').removeClass('invalid-field');
            }
            if ($('#txtEmergencyContact1').val() == '')
            {
                $('#txtEmergencyContact1').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtEmergencyContact1').removeClass('invalid-field');
            }
            if ($('#txtChildrenUnder18').val() == '')
            {
                $('#txtChildrenUnder18').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtChildrenUnder18').removeClass('invalid-field');
            }
            if ($('#txtAdults18to65').val() == '')
            {
                $('#txtAdults18to65').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtAdults18to65').removeClass('invalid-field');
            }
            if ($('#Adults65Plus').val() == '')
            {
                $('#Adults65Plus').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#Adults65Plus').removeClass('invalid-field');
            }




            if ($('#txtEmergencyContact1Name').val() == '')
            {
                $('#txtEmergencyContact1Name').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtEmergencyContact1Name').removeClass('invalid-field');
            }
            if ($('#txtEmergencyContact1Address').val() == '')
            {
                $('#txtEmergencyContact1Address').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtEmergencyContact1Address').removeClass('invalid-field');
            }
            if ($('#txtEmergencyContact1EmailAddress').val() == '')
            {
                $('#txtEmergencyContact1EmailAddress').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtEmergencyContact1EmailAddress').removeClass('invalid-field');
            }
            if ($('#txtEmergencyContact1Relationship').val() == '')
            {
                $('#txtEmergencyContact1Relationship').addClass('invalid-field');
                check = false;
            }
            else
            {
                $('#txtEmergencyContact1Relationship').removeClass('invalid-field');
            }

            var RaceValue = $('#ddRace').selectpicker().val();
            if (RaceValue.length==0)
            {
                $('#Profile').find('.selectboxmultiple button[data-id="ddRace"]').addClass('invalid-field');
                check = false;

            }
            else
            {
                $('#Profile').find('.selectboxmultiple button[data-id="ddRace"]').removeClass('invalid-field');
            }
            if ($.inArray("Other", RaceValue) != -1 && RaceValue.length < 7 && $('#txtOtherRace').val().trim() == "") {
                $('#txtOtherRace').addClass('invalid-field');
                check = false;
            } else {
                $('#txtOtherRace').removeClass('invalid-field');
            }
            var LanguagesValue = $('#ddLanguages').selectpicker().val();

            if (LanguagesValue.length == 0)
            {
                $('#Profile').find('.selectboxmultiple button[data-id="ddLanguages"]').addClass('invalid-field');
                check = false;

            }
            else
            {
                $('#Profile').find('.selectboxmultiple button[data-id="ddLanguages"]').removeClass('invalid-field');
            }
            if ($.inArray("Other", LanguagesValue) != -1 && LanguagesValue.length < 7 && $('#txtOtherLanguage').val().trim() == "") {
                $('#txtOtherLanguage').addClass('invalid-field');
                check = false;
            } else {
                $('#txtOtherLanguage').removeClass('invalid-field');
            }
        }
        if (check == false)
        {
            //alert("Please Fill all Required Fields");
            toastr.error('Please enter all required fields')
        }

        return check;

    }

    function Radio()
    {


        EverMemberOfUSArmedForces = $("input[name='USArmedRadio']:checked").val();
        IncomeCoverHouseholdExpenses = $("input[name='HouseholdExpensesRadio']:checked").val();
        CalworksBenefits = $("input[name='Calworks']:checked").val();
        SocialSecurityDisabilityInsurance = $("input[name='SSIRadio']:checked").val();
        GeneralAssistance = $("input[name='GARadio']:checked").val();
        WomenInfantChildrenBenefits = $("input[name='WICRadio']:checked").val();
        UnemploymentBenefits = $("input[name='Unemployment']:checked").val();
        StateDisabilityInsuranceBenefits = $("input[name='SDIRadio']:checked").val();
        RentalAssistanceBenefits = $("input[name='RentalAssistance']:checked").val();
        PersonalPhone = $("input[name='Phone']:checked").val();




         ClinicPregnant = $("input[name='frmClinic_radio1']:checked").val();
        if (ClinicPregnant == "Yes") {
            $('#divIsPregnant').show();

        }
        else {
            $('#divIsPregnant').hide();
        }

        ClinicBirthControl = $("input[name='frmClinic_radio2']:checked").val();
        if (ClinicBirthControl == "True") {
            $('#divBirthControl').show();

        }
        else {
            $('#divBirthControl').hide();
        }




        PregnantYes = $("input[name='frmClinic_radio4']:checked").val();
        if (PregnantYes == "True") {
            $('#divPregnantYes').show();

        }
        else {
            $('#divPregnantYes').hide();
        }





        HealthInsurance = $("input[name='InsuranceRadio']:checked").val();
        if (HealthInsurance == "true")
        {
            $('#divInsuranceYes').show();
        }
        else
        {
            $('#divInsuranceYes').hide();
            $('#txtPlanName').val('');
            $('#txtPolicyNumber').val('');
            $('#txtSSN').val('');

        }

        PrimaryCareDoctor = $("input[name='RegularDoctorRadio']:checked").val();
        if (PrimaryCareDoctor == "true")
        {
            $('#divRegularDoctorYes').show();
        }
        else
        {
            $('#divRegularDoctorYes').hide();
            //$('#ddLastSeeDoctor').val(0);
            $('#txtNameOfDoctor').val('');
            $('#txtDoctorLocation').val('');

        }

        RegularDentist = $("input[name='RegularDentistRadio']:checked").val();
        if (RegularDentist == "true")
        {
            $('#divRegularDentistYes').show();
        }
        else
        {
            $('#divRegularDentistYes').hide();
            //$('#ddLastSeeDentist').val(0);
            $('#txtNameOfDentist').val('');
            $('#txtDentistLocation').val('');

        }

        OtherDoctorsTherapists = $("input[name='OtherDoctorsRadio']:checked").val();
        if (OtherDoctorsTherapists  == "true")
        {
            $('#divOtherDoctorsYes').show();
        }
        else
        {
            $('#divOtherDoctorsYes').hide();
            $('#txtTherapistsName').val('');
            $('#txtTherapistsLocation').val('');
        }

        CaseManager = $("input[name='SocialWorkerRadio']:checked").val();
        if (CaseManager  == "true")
        {
            $('#divSocialWorker').show();
        }
        else
        {
            $('#divSocialWorker').hide();
            $('#txtCaseManagerName').val('');
            $('#txtCaseManagerLocation').val('');
        }
        //-----------------------OUonly Start------------------------//
        Neighborhoods = $("input[name='frmOU_radio1']:checked").val();
        if (Neighborhoods == "True") {
            $('#divNeighborhoods').show();

        }
        else {
            $('#divNeighborhoods').hide();
        }

        PendingDate = $("input[name='frmOU_radio4']:checked").val();
        if (PendingDate == "True") {
            $('#divPendingDate').show();

        }
        else {
            $('#divPendingDate').hide();
        }

        ConvictedOffense = $("input[name='frmOU_radio5']:checked").val();
        if (ConvictedOffense == "True") {
            $('#divMisdemeanor').show();
            $('#divFelony').show();

        }
        else {
            $('#divMisdemeanor').hide();
            $('#divFelony').hide();
        }

        Misdemeanor = $("input[name='frmOU_radio6']:checked").val();
        if (Misdemeanor == "True") {
            $('#divMisdemeanorDates').show();

        }
        else {
            $('#divMisdemeanorDates').hide();
        }

        Felony = $("input[name='frmOU_radio7']:checked").val();
        if (Felony == "True") {
            $('#divFelonyDates').show();

        }
        else {
            $('#divFelonyDates').hide();
        }

        RestrainingOrders = $("input[name='frmOU_radio8']:checked").val();
        if (RestrainingOrders == "True") {
            $('#divRestrictions').show();

        }
        else {
            $('#divRestrictions').hide();
        }

        AngerManagement = $("input[name='frmOU_radio9']:checked").val();
        if (AngerManagement == "True") {
            $('#divAngerPY').show();

        }
        else {
            $('#divAngerPY').hide();
        }


        ViolentOffense = $("input[name='frmOU_radio16']:checked").val();
        if (ViolentOffense == "True") {
            $('#divProbation').show();

        }
        else {
            $('#divProbation').hide();
        }

        EligibleForEmployment = $("input[name='frmOU_radio20']:checked").val();
        if (EligibleForEmployment == "True") {
            $('#divSSN').show();

        }
        else {
            $('#divSSN').hide();
        }

         //-----------------------OUonly end------------------------//



         //-------------------HealthCare start--------------//





        SmokeCigarettes = $("input[name='SmokeRadio']:checked").val();
        if (SmokeCigarettes == "true")
        {
            $('#divSmoke').show();
        }
        else
        {
            $('#divSmoke').hide();
            $('#ddSmokePerDay').val(0);
            $('#ddFrequentlySmoke').val(0);

        }

        TobaccoProducts = $("input[name='TobaccoProductsRadio']:checked").val();

         //-------------------HealthCare end--------------//



        IsSomeoneYouCanDependOn = $("input[name='DependOnRadio']:checked").val();
        InvolvedInCommunityGroup = $("input[name='CommunityGroup']:checked").val();
        IsSomeoneYouCanCall = $("input[name='CallRadio']:checked").val();
        IsAnyoneThreatenYou = $("input[name='ThreatenYouRadio']:checked").val();

        EverBeenArrested = $("input[name='ArrestedRadio']:checked").val();
        OnGoingCriminalCase = $("input[name='CriminalCaseRadio']:checked").val();
        InterestedInCriminalRecordClearing = $("input[name='RecordClearingRadio']:checked").val();
        OweRestitution = $("input[name='RestitutionRadio']:checked").val();
        EverBeenInPrison = $("input[name='PrisonRadio']:checked").val();

        if (EverBeenInPrison == "Yes")
        {
            $('#divPrison').show();
        }
        else
        {
            $('#divPrison').hide();
            //$('#ddLastReleased').val(0);
            $('#txtCDC').val('');
            $('#txtHowMuchOwe').val('');
            $('#ClearingRadioYes').prop("checked", false);
            $('#ClearingRadioNo').prop("checked", false);
            $('#RestitutionRadioYes').prop("checked", false);
            $('#RestitutionRadioNo').prop("checked", false);
        }

        if (OweRestitution == "true")
        {
            $('#divOwe').show();
        }
        else {
            $('#divOwe').hide();
            $('#txtHowMuchOwe').val('');

        }

        CurrentlyOnParole = $("input[name='CurrentlyOnParoleRadio']:checked").val();
        if (CurrentlyOnParole == "Yes") {
            $('#divParoleProbation').show();
        }
        else {
            $('#divParoleProbation').hide();
            $('#txtProbParoleEnd').val('');
            //$('#ddParoleProbation').val(0);

        }

        DifficultiesInGettingAJob = $("input[name='GettingAJobRadio']:checked").val();

        GovernmentIssuedID = $("input[name='GovernmentIDRadio']:checked").val();
        if (GovernmentIssuedID == "true")
        {
            $('#divGovernmentImg').show();
        }
        else
        {
            $('#divGovernmentImg').hide();

        }


        ConcernsAboutFamilyImmigrationStatus = $("input[name='ImmigrationStatusRadio']:checked").val();
        ConcernsWithLandlord= $("input[name='LandlordRadio']:checked").val();

    }

    function ChildrenAges()
    {

        var val = $('#txtChildren').val();
        var result = "";
       // PatientChildrensAges = '';
        for (var i = 1; i <= parseInt(val); i++)
        {

            var yearid = $('#child_year_' + i).val();
            var daysid = $('#child_days_' + i).val();
            if (yearid == "" && daysid == "")
            {
                    yearid = "0";
                    daysid = "0";

            }
          else if (yearid == "" && daysid != "")
            {
                yearid = "0";
                daysid = daysid;
            }
         else if (yearid != "" && daysid == "")
            {
                yearid = yearid;
                daysid = "0";
            }
            result = result + yearid + ":" + daysid + ",";
        }
        PatientChildrensAges = result;
        var lastChar = PatientChildrensAges.slice(-1);
        if (lastChar == ',') {
            PatientChildrensAges = PatientChildrensAges.slice(0, -1);
        }
    }

    function AddDate()
    {

        var d = new Date();
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var time = d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
        CreatedDate = d.getFullYear() + '/' +
            (month < 10 ? '0' : '') + month + '/' +
            (day < 10 ? '0' : '') + day + "  " + time;

        ShortDate = d.getFullYear() + '/' +
            (month < 10 ? '0' : '') + month + '/' +
            (day < 10 ? '0' : '') + day;

        ModifiedDate = d.getFullYear() + '/' +
            (month < 10 ? '0' : '') + month + '/' +
            (day < 10 ? '0' : '') + day +"  " +time;
    }

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name]) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    function ProfileSave()
    {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        ChildrenAges();

        if (Validation()) {

            AddDate();
            $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
            $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

            $("input[type=hidden][name=PatientChildrensAges]").val(PatientChildrensAges);
            $("input[type=hidden][name=EverMemberOfUSArmedForces]").val(EverMemberOfUSArmedForces);
            var selectedracevalues = $("#ddRace").selectpicker().val();
            if (selectedracevalues.indexOf("Other") != -1 && selectedracevalues.length < 7) {
                RaceEthnicity = [];

            } else if (selectedracevalues.length < 7) {
                RaceEthnicity = [];
                $.each($("#ddRace option:selected"), function () {
                    if ($(this).val() == "Other" || $(this).val() == "Select All") {

                    }
                    else {
                        if (jQuery.inArray($(this).val(), RaceEthnicity) == -1) {
                            RaceEthnicity.push($(this).val());
                        }
                    }
                });
                $("#txtOtherRace").val("");
            }
            $("input[type=hidden][name=RaceEthnicity]").val(RaceEthnicity);
            var selectedvalues = $('#ddLanguages').selectpicker().val();
            if (selectedvalues.indexOf("Other") != -1 && selectedvalues.length < 7) {
                LanguagesSpeak = [];

            } else if (selectedvalues.length < 7) {
                LanguagesSpeak = [];
                $.each($("#ddLanguages option:selected"), function () {
                    if ($(this).val() == "Other" || $(this).val() == "Select All") {

                    }
                    else {
                        if (jQuery.inArray($(this).val(), LanguagesSpeak) == -1) {
                            LanguagesSpeak.push($(this).val());
                        }
                    }
                });
                $("#txtOtherLanguage").val("");
            }
            $("input[type=hidden][name=LanguagesSpeak]").val(LanguagesSpeak);
            $("input[type=hidden][name=ClinicID]").val('@Session["ClinicID"]');
            //document.getElementById('frmProfile').submit();
            var formData = $("#frmProfile").serializeObject();

            console.log(formData);

             $.ajax({
                type: "POST",
                 url: Apipath +'/api/PatientMain/PatientProfile',
                 data: JSON.stringify(formData),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                 success: function (result) {

                    var isexist = result;
                    if (isexist == 1) {
                        toastr.error("Combination of CellPhone,SSN and Email are Exist");

                        $(".loaderOverlay").hide();
                    }
                    else {

                        $("input[type=hidden][name=PatientID]").val(result);

                        var patname = $('#txtFirstName').val() + ' ' + $('#txtMiddleName').val() + ' ' + $('#txtLastName').val();
                        var dob = $('#txtDOB').val();
                        var ssn = $('#txtSocialSecNo').val();

                        $("#PFirstName").html(patname);
                        $("#PDOB").html(dob);
                        $("#mentalPDOB").html(ShortDate);
                        $('#txtSSN').val(ssn);

                        $('#btnaddprogram').css('display', 'block');

                        toastr.success("Record saved successfully");
                        $('#Housing-tab').attr("data-toggle", "tab");
                        $('#Housing-tab').removeClass("disabled-li1");
                        $('#Financial-tab').attr("data-toggle", "tab");
                        $('#Financial-tab').removeClass("disabled-li1");
                        $('#Employment-tab').attr("data-toggle", "tab");
                        $('#Employment-tab').removeClass("disabled-li1");
                        $('#Communication-tab').attr("data-toggle", "tab");
                        $('#Communication-tab').removeClass("disabled-li1");
                        $('#Healthcare-tab').attr("data-toggle", "tab");
                        $('#Healthcare-tab').removeClass("disabled-li1");
                        $('#SocialSupports-tab').attr("data-toggle", "tab");
                        $('#SocialSupports-tab').removeClass("disabled-li1");
                        $('#LegalStatus-tab').attr("data-toggle", "tab");
                        $('#LegalStatus-tab').removeClass("disabled-li1");

                        $('#Alcohol-tab').attr("data-toggle", "tab");
                        $('#Alcohol-tab').removeClass("disabled-li1");

                        $('#MentalHealth-tab').attr("data-toggle", "tab");
                        $('#MentalHealth-tab').removeClass("disabled-li1");

                        $('#FoodAccess-tab').attr("data-toggle", "tab");
                        $('#FoodAccess-tab').removeClass("disabled-li1");

                        $(".loaderOverlay").hide();
                    }



                },
                error: function () {

                    toastr.error("Error while inserting data");

                    $(".loaderOverlay").hide();
                }
            });


        }
        else
        {
            $(".loaderOverlay").hide();
            return false;
        }

    }

    function HousingSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
            AddDate();
            $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
            $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
            var formData = $("#frmHousing").serializeObject();



            $.ajax({
                type: "POST",
                url: Apipath +'/api/PatientMain/PatientHousing',
                data: JSON.stringify(formData),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $(".loaderOverlay").hide();
                    $("input[type=hidden][name=PatientHousingID]").val(result);

                    toastr.success("Record saved successfully");
                     $("#Housing-tab").find('span').css('display', 'inline');

                },
                error: function () {
                    $(".loaderOverlay").hide();
                    toastr.error("Error while inserting data");
                }
            });



            //document.getElementById('frmHousing').submit();


    }

        function FinancialSecuritySave() {
            $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        $("input[type=hidden][name=IncomeCoverHouseholdExpenses]").val(IncomeCoverHouseholdExpenses);

        $("input[type=hidden][name=CalworksBenefits]").val(CalworksBenefits);
        $("input[type=hidden][name=SocialSecurityDisabilityInsurance]").val(SocialSecurityDisabilityInsurance);
        $("input[type=hidden][name=GeneralAssistance]").val(GeneralAssistance);
        $("input[type=hidden][name=WomenInfantChildrenBenefits]").val(WomenInfantChildrenBenefits);
        $("input[type=hidden][name=UnemploymentBenefits]").val(UnemploymentBenefits);
        $("input[type=hidden][name=StateDisabilityInsuranceBenefits]").val(StateDisabilityInsuranceBenefits);
        $("input[type=hidden][name=RentalAssistanceBenefits]").val(RentalAssistanceBenefits);

        var formData = $("#frmFinancialSecurity").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath +'/api/PatientMain/FinancialSecurity',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=PatientFinancialSecurityID]").val(result);

                toastr.success("Record saved successfully");
                $("#Financial-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


        //document.getElementById('frmHousing').submit();
    }

    function EmploymentEducationSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        $("input[type=hidden][name=ParticipatingIn]").val(ParticipatingIn);
        var formData = $("#frmEmploymentEducation").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath +'/api/PatientMain/EmploymentEducation',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=PatientEmploymentEducationID]").val(result);

                toastr.success("Record saved successfully");
                $("#Employment-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


    }

    function CommunicationSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        $("input[type=hidden][name=PersonalPhone]").val(PersonalPhone);
        var formData = $("#frmCommunication").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/CommunicationAndMobility',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=PatientCommunicationAndMobilityID]").val(result);

                toastr.success("Record saved successfully");
                $("#Communication-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


    }

    function HealthcareSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();

        var ddldiag = $("#ddDiagnosed").val();
        var diagonseddata = "";
        for (var i = 0; i < ddldiag.length; i++)
        {
            if (ddldiag[i] == 0) {

            }
            else
            {
                diagonseddata = diagonseddata + "," + ddldiag[i];
            }
        }
     var Diagnosed = diagonseddata.substring(1);

        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        $("input[type=hidden][name=Diagnosed]").val(Diagnosed);
        $("input[type=hidden][name=HealthInsurance]").val(HealthInsurance);
        $("input[type=hidden][name=PrimaryCareDoctor]").val(PrimaryCareDoctor);
        $("input[type=hidden][name=RegularDentist]").val(RegularDentist);
        $("input[type=hidden][name=OtherDoctorsTherapists]").val(OtherDoctorsTherapists);
        $("input[type=hidden][name=CaseManager]").val(CaseManager);
        $("input[type=hidden][name=SmokeCigarettes]").val(SmokeCigarettes);
        $("input[type=hidden][name=TobaccoProducts]").val(TobaccoProducts);

        var formData = $("#frmHealthcare").serializeObject();
        formData.Diagnosed = Diagnosed;



        $.ajax({
            type: "POST",
            url: Apipath +'/api/PatientMain/Healthcare',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=PatientHealthcareID]").val(result);

                toastr.success("Record saved successfully");
                $("#Healthcare-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


    }

    function SocialSupportsSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        $("input[type=hidden][name=IsSomeoneYouCanDependOn]").val(IsSomeoneYouCanDependOn);
        $("input[type=hidden][name=InvolvedInCommunityGroup]").val(InvolvedInCommunityGroup);
        $("input[type=hidden][name=IsSomeoneYouCanCall]").val(IsSomeoneYouCanCall);
        $("input[type=hidden][name=IsAnyoneThreatenYou]").val(IsAnyoneThreatenYou);


        var formData = $("#frmSocialSupports").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath +'/api/PatientMain/SocialSupports',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=SocialSupportsID]").val(result);

                toastr.success("Record saved successfully");
                $("#SocialSupports-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


    }

    function LegalStatusSave() {
        $(".loaderOverlay").css("display", "flex");
        Radio();
        AddDate();


        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
        //$("input[type=hidden][name=GovernmentIDImg]").val(GovernmentIDImg);
        $("input[type=hidden][name=EverBeenArrested]").val(EverBeenArrested);
        $("input[type=hidden][name=OnGoingCriminalCase]").val(OnGoingCriminalCase);
        $("input[type=hidden][name=EverBeenInPrison]").val(EverBeenInPrison);
        $("input[type=hidden][name=InterestedInCriminalRecordClearing]").val(InterestedInCriminalRecordClearing);
        $("input[type=hidden][name=OweRestitution]").val(OweRestitution);
        $("input[type=hidden][name=CurrentlyOnParole]").val(CurrentlyOnParole);
        $("input[type=hidden][name=DifficultiesInGettingAJob]").val(DifficultiesInGettingAJob);
        $("input[type=hidden][name=GovernmentIssuedID]").val(GovernmentIssuedID);
        $("input[type=hidden][name=ConcernsAboutFamilyImmigrationStatus]").val(ConcernsAboutFamilyImmigrationStatus);
        $("input[type=hidden][name=ConcernsWithLandlord]").val(ConcernsWithLandlord);


        var formData = $("#frmLegalStatus").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath +'/api/PatientMain/LegalStatus',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=LegalStatusID]").val(result);

                toastr.success("Record saved successfully");
                $("#LegalStatus-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });


    }

    //function LegalStatusSave() {

    //    Radio();
    //    AddDate();
    //    $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
    //    $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);
    //    $("input[type=hidden][name=GovernmentIDImg]").val(GovernmentIDImg);
    //    $("input[type=hidden][name=EverBeenArrested]").val(EverBeenArrested);
    //    $("input[type=hidden][name=OnGoingCriminalCase]").val(OnGoingCriminalCase);
    //    $("input[type=hidden][name=EverBeenInPrison]").val(EverBeenInPrison);
    //    $("input[type=hidden][name=InterestedInCriminalRecordClearing]").val(InterestedInCriminalRecordClearing);
    //    $("input[type=hidden][name=OweRestitution]").val(OweRestitution);
    //    $("input[type=hidden][name=CurrentlyOnParole]").val(CurrentlyOnParole);
    //    $("input[type=hidden][name=DifficultiesInGettingAJob]").val(DifficultiesInGettingAJob);
    //    $("input[type=hidden][name=GovernmentIssuedID]").val(GovernmentIssuedID);
    //    $("input[type=hidden][name=ConcernsAboutFamilyImmigrationStatus]").val(ConcernsAboutFamilyImmigrationStatus);
    //    $("input[type=hidden][name=ConcernsWithLandlord]").val(ConcernsWithLandlord);

    //}

    function DastSave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);


        var drugscontaining = "";

        //$.each($(".drug-radibtns input[name='frmDast_check1']:checked"), function () {
        //    drugscontaining +=$(this).val()+",";
        //});

        drugscontaining = $.map($('.drug-radibtns input[name="frmDast_check1"]:checked'), function (n, i) {
            if (!n.hasAttribute("style")) {
                return n.value;
            }
        }).join(',');

        //if (drugscontaining.length > 0) {
        //    drugscontaining = drugscontaining.substring(0, drugscontaining.length-1)
        //}
        //console.log($('#hdfDrugsContaining').val());
        //$('#hdfDrugsContaining').val("");
        $('#hdfDrugsContaining').val(drugscontaining);

        var radio0 = $("input[name='frmDast_radio0']:checked").val();

       var radio1 =  $("input[name='frmDast_radio1']:checked").val();
       var radio2 = $("input[name='frmDast_radio2']:checked").val();
       var radio3= $("input[name='frmDast_radio3']:checked").val();
       var radio4= $("input[name='frmDast_radio4']:checked").val();
       var radio5 = $("input[name='frmDast_radio5']:checked").val();
       var radio6 = $("input[name='frmDast_radio6']:checked").val();
        var radio7 =$("input[name='frmDast_radio7']:checked").val();
       var radio8 = $("input[name='frmDast_radio8']:checked").val();
       var radio9 = $("input[name='frmDast_radio9']:checked").val();
        var radio10 = $("input[name='frmDast_radio10']:checked").val();

        var radio11 = $("input[name='frmDast_radio11']:checked").val();
        var radio12 = $("input[name='frmDast_radio12']:checked").val();

        var radio13 = $("input[name='frmDast_radio13']:checked").val();

        $('#hdfHowOftenUse').val(radio0);

        $('#hdfUsedDrugsForMedicalReasons').val(radio1);
        $('#hdfOneDrugAtATime').val(radio2);
        $('#hdfUnableToStopUsingDrugs').val(radio3);
        $('#hdfBlackouts').val(radio4);
        $('#hdfGuiltyAboutYourDrug').val(radio5);
        $('#hdfSpouseComplain').val(radio6);
        $('#hdfNeglectedFamily').val(radio7);
        $('#hdfEngagedInIllegalActivities').val(radio8);
        $('#hdfWithdrawalSymptoms').val(radio9);
        $('#hdfMedicalLoss').val(radio10);

        $('#hdfEverInjectedDrugs').val(radio11);
        $('#hdfInjectedDrugInLast90OrMoreThen90Days').val(radio12);
        $('#hdfTreatmentForSubstanceAbuse').val(radio13);



        var formData = $("#frmDast").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/Dast',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=DastID]").val(result);

                toastr.success("Record saved successfully");
                $("#Dast-tab").find('span').css('display', 'inline');
                   $("#Alcohol-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });

    }

    function AuditSave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

        var formData = $("#frmAudit").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/Audit',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=AuditID]").val(result);

                toastr.success("Record saved successfully");
                 $("#Audit-tab").find('span').css('display', 'inline');
           $("#Alcohol-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });

    }

    function MentalHealthSave() {
        $(".loaderOverlay").css("display", "flex");

        AddDate();
        var ddl = $("#ddMentalHealth").val();
        var mentalhealthdata = "";
        for (var i = 0; i < ddl.length; i++)
        {
            if (ddl[i] == 0)
            {

            }
            else
            {
                mentalhealthdata = mentalhealthdata + "," + ddl[i];
            }

        }
        var mentalhealth = mentalhealthdata.substring(1);

        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

        var radio0 = $("input[name='frmPHQ_radio0']:checked").val();

        var radio1 = $("input[name='frmPHQ_radio1']:checked").val();
        var radio2 = $("input[name='frmPHQ_radio2']:checked").val();
        var radio3 = $("input[name='frmPHQ_radio3']:checked").val();
        var radio4 = $("input[name='frmPHQ_radio4']:checked").val();
        var radio5 = $("input[name='frmPHQ_radio5']:checked").val();
        var radio6 = $("input[name='frmPHQ_radio6']:checked").val();
        var radio7 = $("input[name='frmPHQ_radio7']:checked").val();
        var radio8 = $("input[name='frmPHQ_radio8']:checked").val();
        var radio9 = $("input[name='frmPHQ_radio9']:checked").val();





        $('#hdfLittleInterest').val(radio0);

        $('#hdfFeelingDown').val(radio1);
        $('#hdfTroubleFalling').val(radio2);
        $('#hdfFeelingTired').val(radio3);
        $('#hdfPoorAppetite').val(radio4);
        $('#hdfFeelingBad').val(radio5);
        $('#hdfTroubleConcentraiting').val(radio6);
        $('#hdfrestless').val(radio7);
        $('#hdfHurtingYourself').val(radio8);
        $('#hdfProblemsMade').val(radio9);
        $('#hdfPHQ9Interpretation').val(1);

        //$("input[type=hidden][name=MentalHealthConditions]").val(mentalhealth);


        var formData = $("#frmPHQ").serializeObject();




        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/PHQ9',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {

                $("input[type=hidden][name=PHQ9ID]").val(result);
                var formData1 = $("#frmMentalHealth").serializeObject();
                formData1.MentalHealthConditions = mentalhealth;



                    $.ajax({
                        type: "POST",
                        url: Apipath + '/api/PatientMain/MentalHealth',
                        data: JSON.stringify(formData1),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (result1) {
                            $(".loaderOverlay").hide();
                            $("input[type=hidden][name=MentalHealthID]").val(result1);

                            toastr.success("Record saved successfully");
                            $("#MentalHealth-tab").find('span').css('display', 'inline');
                        },
                        error: function () {
                            $(".loaderOverlay").hide();
                            toastr.error("Error while inserting data");
                        }
                    });



            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });

    }

    function FoodAccessSave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

        var formData = $("#frmFoodAccess").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/FoodAccess',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=FoodAccessID]").val(result);

                toastr.success("Record saved successfully");
                $("#FoodAccess-tab").find('span').css('display', 'inline');
            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");
            }
        });

    }

    function ClinicOnlySave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);


        var radio1 = $("input[name='frmClinic_radio1']:checked").val();
        var radio2 = $("input[name='frmClinic_radio2']:checked").val();
        var radio3 = $("input[name='frmClinic_radio3']:checked").val();
        var radio4 = $("input[name='frmClinic_radio4']:checked").val();
        var radio5 = $("input[name='frmClinic_radio5']:checked").val();
        var radio6 = $("input[name='frmClinic_radio6']:checked").val();
        var radio7 = $("input[name='frmClinic_radio7']:checked").val();
        var radio8 = $("input[name='frmClinic_radio8']:checked").val();
        var radio9 = $("input[name='frmClinic_radio9']:checked").val();
        var radio10 = $("input[name='frmClinic_radio10']:checked").val();

        var radio11 = $("input[name='frmClinic_radio11']:checked").val();
        $("input[type=hidden][name=PreventativeScreeningTests]").val(ScreeningTests);



        $('#hdfPregnant').val(radio1);
        $('#hdfBirthControl').val(radio2);
        $('#hdfEmergencyContraception').val(radio3);
        $('#hdfEverBeenPregnant').val(radio4);
        $('#hdfHealthcareDirective').val(radio5);
        $('#hdfAdvancedHealthcareDirectives').val(radio6);
        $('#hdfTestedForTB').val(radio7);
        $('#hdfTBdiseaseAtAnyTime').val(radio8);
        $('#hdfWeakenedImmuneSystem').val(radio9);
        $('#hdfElevatedRateOfTB').val(radio10);
        $('#hdfVolunteerOfHighRisk').val(radio11);
        $("#hdfAnyVaccinations").val($("#ClinicOnly_AnyVaccinations").val());



        var formData = $("#frmClinic").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/ClinicOnly',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=ClinicOnlyID]").val(result);

                toastr.success("Record saved successfully");
                $("#aclinic").find('span').css('display', 'inline');
                $("#Programs-tab").find('span').css('display', 'inline');


            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");


            }
        });

    }

    function DreamOnlySave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

        var radio1 = $("input[name='frmDream_radio1']:checked").val();

        $('#hdfDrivenBySomeone').val(radio1);

        var formData = $("#frmDream").serializeObject();


        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/DreamOnly',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=DreamOnlyID]").val(result);

                toastr.success("Record saved successfully");
                $("#adream").find('span').css('display', 'inline');
                $("#Programs-tab").find('span').css('display', 'inline');


            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");


            }
        });

    }

    function OUOnlySave() {
        $(".loaderOverlay").css("display", "flex");
        AddDate();
        $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
        $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);


        var radio1 = $("input[name='frmOU_radio1']:checked").val();
        var radio2 = $("input[name='frmOU_radio2']:checked").val();
        var radio3 = $("input[name='frmOU_radio3']:checked").val();
        var radio4 = $("input[name='frmOU_radio4']:checked").val();
        var radio5 = $("input[name='frmOU_radio5']:checked").val();
        var radio6 = $("input[name='frmOU_radio6']:checked").val();
        var radio7 = $("input[name='frmOU_radio7']:checked").val();
        var radio8 = $("input[name='frmOU_radio8']:checked").val();
        var radio9 = $("input[name='frmOU_radio9']:checked").val();
        var radio10 = $("input[name='frmOU_radio10']:checked").val();

        var radio11 = $("input[name='frmOU_radio11']:checked").val();
        var radio12 = $("input[name='frmOU_radio12']:checked").val();

        var radio13 = $("input[name='frmOU_radio13']:checked").val();
        var radio14 = $("input[name='frmOU_radio14']:checked").val();
        var radio15 = $("input[name='frmOU_radio15']:checked").val();
        var radio16 = $("input[name='frmOU_radio16']:checked").val();

        var radio17 = $("input[name='frmOU_radio17']:checked").val();
        var radio18 = $("input[name='frmOU_radio18']:checked").val();
        var radio19 = $("input[name='frmOU_radio19']:checked").val();
        var radio20 = $("input[name='frmOU_radio20']:checked").val();


        $('#hdfUnsafeCity').val(radio1);

        $('#hdfDrugTest').val(radio2);
        $('#hdfLearningDisabilities').val(radio3);

        $('#hdfAnyPendingCourtDates').val(radio4);
        $('#hdfConvictedOfAnyOffense').val(radio5);
        $('#hdfMisdemeanor').val(radio6);
        $('#hdfFelony').val(radio7);
        $('#hdfRestrainingOrders').val(radio8);
        $('#hdfAngerManagement').val(radio9);
        $('#hdfGunInvolvedActivity').val(radio11);

        $('#hdfGangRelatedStreetViolence').val(radio12);
        $('#hdfKilledDueToTurf').val(radio13);
        $('#hdfHotSpotArea').val(radio14);
        $('#hdfAssociateWithTurfs').val(radio15);
        $('#hdfViolentOffense').val(radio16);
        $('#hdfTermsOfProbation').val(radio10);

        $('#hdfHaveSSN').val(radio17);
        $('#hdfHaveStateIssuedPhotoID').val(radio18);
        $('#hdfHaveI9').val(radio19);
        $('#hdfEligibleForEmployment').val(radio20);

        $('#hdfSafety').val(getpriorityvalues('.safety-options li'));
        $('#hdfEmployment').val(getpriorityvalues('.employement-options li'));
        $('#hdfHousingShelter').val(getpriorityvalues('.housingshelter-options li'));
        $('#hdfEducation').val(getpriorityvalues('.education-options li'));
        $('#hdfLegal').val(getpriorityvalues('.legal-options li'));
        $('#hdfSocialRecreational').val(getpriorityvalues('.socialrecreational-options li'));


        var formData = $("#frmOU").serializeObject();



        $.ajax({
            type: "POST",
            url: Apipath + '/api/PatientMain/OUOnly',
            data: JSON.stringify(formData),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $(".loaderOverlay").hide();
                $("input[type=hidden][name=OUOnlyID]").val(result);

                toastr.success("Record saved successfully");
                $("#aou").find('span').css('display', 'inline');
                $("#Programs-tab").find('span').css('display', 'inline');


            },
            error: function () {
                $(".loaderOverlay").hide();
                toastr.error("Error while inserting data");


            }
        });

    }

    function PeraltaCollegesSave() {
        $(".loaderOverlay").css("display", "flex");
            AddDate();
            $("input[type=hidden][name=CreatedDate]").val(CreatedDate);
            $("input[type=hidden][name=ModifiedDate]").val(ModifiedDate);

            var formData = $("#frmPeraltaColleges").serializeObject();



            $.ajax({
                type: "POST",
                url: Apipath + '/api/PatientMain/PeraltaCollege',
                data: JSON.stringify(formData),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $(".loaderOverlay").hide();
                    $("input[type=hidden][name=PeraltaCollegesID]").val(result);

                    toastr.success("Record saved successfully");
                    $("#aPeraltaColleges").find('span').css('display', 'inline');
                    $("#Programs-tab").find('span').css('display', 'inline');


                },
                error: function () {
                    $(".loaderOverlay").hide();
                    toastr.error("Error while inserting data");


                }
            });

        }

    function getpriorityvalues(ele) {


            var value = "";

            $(ele).each(function () {

                var data = $(this).html();

                value += data + ",";
            });

            if (value.length > 1) {

                value = value.substring(0, value.length - 1);

            }

            return value;

        }

        function openTab(ele) {
        $('#'+ ele).click();
    }

    function ErrorTab() {

        var datatogg = $('.disabled-li1').attr("data-toggle");
        if (datatogg == "")
        {
            toastr.error("Save Patient Profile");
        }
        }


        $('.label-fields').css('display', 'none');

        $('.fa-times').css('display', 'none');

        $('.fa-check').css('display', 'none');



    </script>

    <script>

        var dragSrcEl = null;

        function handleDragStart(e) {
            // Target (this) element is the source node.
            dragSrcEl = this;

            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', this.outerHTML);

            this.classList.add('dragElem');
        }
        function handleDragOver(e) {
            if (e.preventDefault) {
                e.preventDefault(); // Necessary. Allows us to drop.
            }
            this.classList.add('over');

            e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.

            return false;
        }

        function handleDragEnter(e) {
            // this / e.target is the current hover target.
        }

        function handleDragLeave(e) {
            this.classList.remove('over');  // this / e.target is previous target element.
        }

        function handleDrop(e) {
            // this/e.target is current target element.

            if (e.stopPropagation) {
                e.stopPropagation(); // Stops some browsers from redirecting.
            }

            // Don't do anything if dropping the same column we're dragging.
            if (dragSrcEl != this) {
                // Set the source column's HTML to the HTML of the column we dropped on.
                //alert(this.outerHTML);
                //dragSrcEl.innerHTML = this.innerHTML;
                //this.innerHTML = e.dataTransfer.getData('text/html');
                this.parentNode.removeChild(dragSrcEl);
                var dropHTML = e.dataTransfer.getData('text/html');
                this.insertAdjacentHTML('beforebegin', dropHTML);
                var dropElem = this.previousSibling;
                addDnDHandlers(dropElem);

            }
            this.classList.remove('over');
            return false;
        }

        function handleDragEnd(e) {
            // this/e.target is the source node.
            this.classList.remove('over');

            /*[].forEach.call(cols, function (col) {
              col.classList.remove('over');
            });*/
        }

        function addDnDHandlers(elem) {
            elem.addEventListener('dragstart', handleDragStart, false);
            elem.addEventListener('dragenter', handleDragEnter, false)
            elem.addEventListener('dragover', handleDragOver, false);
            elem.addEventListener('dragleave', handleDragLeave, false);
            elem.addEventListener('drop', handleDrop, false);
            elem.addEventListener('dragend', handleDragEnd, false);

        }

        var cols = document.querySelectorAll('.column');
        [].forEach.call(cols, addDnDHandlers);

        
       



        ////programs tabs
var fileDataP1 = new FormData();
var fileDataP2 = new FormData();
var fileDataP3 = new FormData();
var fileDataP4 = new FormData();
var fileDataP5 = new FormData();
var fileDataP6 = new FormData();
var fileDataP7 = new FormData();
var fileDataP8 = new FormData();
var fileDataP9 = new FormData();
var fileDataP10 = new FormData();

         var _IsSaved = 'False';
        function RebindEvent() {
             
             $("#tabPills .nav-item a").on('click', function (e) {
             $('#Programs .tab-pane').each(function (index, item) {
                $(item).removeClass("active show");
                });


            $(".render-basicProgramform").each(function (index, item) {
                $(item).html("");
            });
             var item = $(this);
             var _programId = item.attr("data-ProgramID")
             _programName = item.attr("data-programName");
             _programelement=$("#"+_programName+"render-basicform")
            _IsSaved = item.attr("data-Saved");
             $('#' + _programName + 'only').addClass('active show');
             var _templateID = item.attr("data-TemplateID");
                 
             
        if (_IsSaved == 'False') {
            LoadProgramTemplate(_programId)
        }
        else {
            EditPrograms(_programId, _templateID)
        }
    })
        }
        

    function LoadProgramTemplate(_programId) {
        var programid = _programId;
      
       
    $.ajax({
        type: "GET",
        url: '/program/GetProgramTemplateByProgramId?ProgramId=' + programid ,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        beforeSend: function () {
            $(".loaderOverlay").css('display','flex');
        },
        async: true,
        success: function (result) {
             
            if (result.html == "") {
                toastr.error("No template found");
            } else {
               _programelement.html("").append(result.html);
                tableName = result.tableName;
                templateid = result.TemplateId;

                if (_programelement.find(".basecontentarea").length > 0) {
                    getProgramHeaderAndFooter();
                }
                _programelement.find(".event-btn-right").remove();
                _programelement.find(".ck-editor-header").remove();
                _programelement.find(".question-container").parent().css("border", "none");
                _programelement.find(".dragresize").find(".question-container").remove();
                _programelement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
                _programelement.find(".html-content").prev().css("display", "none");
                _programelement.find(".html-content").parent().parent().parent().addClass("left-control");
                _programelement.find(".f-g-left").each(function (index, item) {
                    $(item).parent().parent().addClass("left-control");
                });
                toogleProgramToolTip();

                $("textarea.program-control,textarea.base-control").summernote({
                    toolbar: [
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['font', ['strikethrough', 'superscript', 'subscript']],
                    ],
                    placeholder: "Type here",
                    callbacks: {
                        onInit: function (e) {
                            this.placeholder
                                ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                : e.editingArea.remove(".note-placeholder")
                        }
                    },
                    height: 150,
                });
                if (_programelement.find(".basecontentarea").length > 0) {
                    getProgramBaseFieldData()
                }
            }
            
            $(".loaderOverlay").hide();
        }, error: function (e) {
            toastr.error("Something happen Wrong");
             $(".loaderOverlay").hide();
        }
    });
        }


        function getProgramHeaderAndFooter() {
    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasetemplateid',
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            switch (result.TemplateID) {
                case -1:
                    break;
                default:
                    basetemplateid = result.TemplateID;
                    $.ajax({
                        type: "GET",
                        url: '/program/GetFormHtmlById?Id=' + result.TemplateID,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {
                            var baseHtml = parseHTML(result.html);
                            var baseHeader = $(baseHtml).find(".baseheader").html();
                            var baseFooter = $(baseHtml).find(".basefooter").html();
                            _programelement.find(".baseheader").html("").append(baseHeader);
                            _programelement.find(".basefooter").html("").append(baseFooter);
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
        }

        function toogleProgramToolTip() {

       _programelement.find('span.tooltipicon').tooltip({
            trigger: "click",
            html: true,
            container: 'body'
        });
      _programelement.find('span.tooltipicon').on('show.bs.tooltip', function () {
       _programelement.find('span.tooltipicon').not(this).tooltip('hide');
    });
    $('body').on('click', function (e) {
        if ($(e.target).data('toggle') !== 'tooltip' && $(e.target).parents('[data-toggle="tooltip"]').length === 0
            && $(e.target).parents('.tooltip.in').length === 0) {
            (($('[data-toggle="tooltip"]').tooltip('hide').data('bs.tooltip') || {}).inState || {}).click = false;
        }
    });
}
  
    //Edit functions //

        var IsBasedataExist = false;

        function EditPrograms(ProgramID, TemplateID) {
            
           getProgramBasicFormHtml(ProgramID,TemplateID)
          
        }


        function getProgramBasicFormHtml(ProgramID,id) {
        
       
    $.ajax({
        type: "GET",
        url: '/program/GetProgramTemplateById?TemplateId=' + id,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        beforeSend: function () {
            $(".loaderOverlay").css('display','flex');
        },
        async: true,
        success: function (result) {
            if (result.html == "") {
                toastr.error("No template found");
            } else {
               _programelement.html("").append(result.html);
                tableName = result.tableName;
                templateid = id;
                
                if (_programelement.find(".basecontentarea").length > 0) {

                    getBasehtmlByProgramId(ProgramID);
                }
               _programelement.find(".event-btn-right").remove();
               _programelement.find(".ck-editor-header").remove();
               _programelement.find(".question-container").parent().css("border", "none");
               _programelement.find(".dragresize").find(".question-container").remove();
               _programelement.find(".dragresize").find(".bootom-form-row").css({ "padding": "7px 0px", "margin": "0" });
               _programelement.find(".html-content").prev().css("display", "none");
               _programelement.find(".html-content").parent().parent().parent().addClass("left-control");
               _programelement.find(".f-g-left").each(function (index, item) {
                   $(item).parent().parent().addClass("left-control");
                });
                toogleProgramToolTip();

                $("textarea.program-control,textarea.base-control").summernote({
                    toolbar: [
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['font', ['strikethrough', 'superscript', 'subscript']],
                    ],
                    placeholder: "Type here",
                    callbacks: {
                        onInit: function (e) {
                            this.placeholder
                                ? e.editingArea.find(".note-placeholder").html(this.placeholder)
                                : e.editingArea.remove(".note-placeholder")
                        }
                    },
                    height: 150,
                });
            }
             getProgramBasicFormValue(ProgramID,id)
             $(".loaderOverlay").hide();
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }



        function getBasehtmlByProgramId(programid) {
    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasetemplateidbyprogramid?ProgramID=' + programid,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            
            switch (result) {
                case 0:
                    break;
                default:
                    basetemplateid = result;
                    $.ajax({
                        type: "GET",
                        url: '/program/GetProgramTemplateById?TemplateId=' + result,
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        async: false,
                        success: function (result) {

                            if (result.html != "") {
                                var baseHtml = parseHTML(result.html);
                                var baseHeader = $(baseHtml).find(".baseheader").html();
                                var baseFooter = $(baseHtml).find(".basefooter").html();
                                _programelement.find(".baseheader").html("").append(baseHeader);
                                _programelement.find(".basefooter").html("").append(baseFooter);
                            }
                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });
                    break;
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}



        function getProgramBasicFormValue(programid, templateid) {
         
       $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getfieldvaluebyprogramid?ProgramId=' + programid + "&TemplateId="+templateid+ "&PatientId="+_PatientId,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
           
            if (result.length) {
                var fields = result[0];
                var value = "";
                _programelement.find(".program-control,input.custom-control-input").each(function (index, item) {
                    if ($(item).is("input")) {
                        switch ($(item).attr("type")) {
                            case "radio":
                            case "checkbox":
                                if ($(item).hasAttr("data-column") && $(item).closest("div.inputContent").parent().hasClass("program-control")) {
                                    value = fields[$(item).attr("data-column")];

                                    if (value == null || value == "") {

                                    } else {
                                        var valueArr = value.split(',');
                                        var valueTxt = "";

                                            for (var i = 0; i < valueArr.length; i++) {
                                                $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).prop("checked", true);
                                            }

                                    }
                                }
                                break;
                            case "file":
                                getProgramModuleFiles(programid, $(item).attr("id"));

                                break;
                            default:

                                value = fields[$(item).attr("data-column")];

                                    item.value = value;

                                break;
                        }
                    }
                    if ($(item).is("select")) {
                        value = fields[$(item).attr("data-column")];

                            item.value = value;

                    }
                    if ($(item).is("textarea")) {
                        value = fields[$(item).attr("data-column")];

                            $(item).summernote('code', value);

                    }
                });
            }
            if (_programelement.find(".basecontentarea").length > 0) {
                getProgramBaseFieldData();
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }


        function getProgramBaseFieldData() {
       $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasefieldbypatientid?Patientid=' +_PatientId,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            if (result.length) {
                IsBasedataExist = true;
                var baseFields = result[0];
                var value = "";
                _programelement.find(".form-control.base-control,input.custom-control-input").each(function (index, item) {
                    
                    if ($(item).is("input")) {
                        switch ($(item).attr("type")) {
                            case "radio":
                            case "checkbox":

                                if ($(item).hasAttr("data-column")) {
                                    if ($(item).closest("div.inputContent").parent().hasClass("base-control")) {
                                        value = baseFields[$(item).attr("data-column")];
                                        
                                        if (value == null || value == "" || value == undefined) {
                                        } else {
                                            var valueArr = value.split(',');
                                            var valueTxt = "";
                                                for (var i = 0; i < valueArr.length; i++) {
                                                    $(item).closest("div.inputContent").find(`input[value=${valueArr[i]}]`).prop("checked", true);
                                                }
                                        }
                                    }
                                }
                                break;
                            case "file":

                                    if ($(item).hasAttr("data-column") && $(item).hasClass("base-control")) {
                                        getProgramBaseFiles($(item).attr("id"));
                                    }

                                break;
                            default:

                                value = baseFields[$(item).attr("data-column")];

                                    item.value = value;

                                break;
                        }
                    }
                    if ($(item).is("select")) {
                        value = baseFields[$(item).attr("data-column")];

                            item.value = value;

                    }
                    if ($(item).is("textarea")) {
                        value = baseFields[$(item).attr("data-column")];

                            $(item).summernote('code', value);

                    }
                });
            }
        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }

        function getProgramBaseFiles(Id) {

    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getprogrambasefilesbypatientid?PatientId=' + PatientId + '&controlid=' + Id,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {
            
            if (result != "" && result != null) {
                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = `<div class="label">File Names</div><ul class="file_uploaded_list file_uploaded_inputs">`;
                for (var i = 0; i < filesArr.length; i++) {
                    selectedFiles += `<li><input class="form-control" data-file="${filesArr[i]}" placeholder="Enter file name here" type="text" value="${namesArr[i]}"/>`
                    selectedFiles += '<a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a><span onclick="removeUpload(this)" class="removeUploadFile"><i class="fa fa-times"></i></span></li>';
                }
                selectedFiles += "</ul>";
               _programelement.find("#"+Id).next().next().html("").append(selectedFiles);
            } else {
                _programelement.find("#"+Id).next().next().html("");
            }
        },
        error: function () {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
    }



    //files

        function getProgramModuleFiles(programid, Id) {
    $.ajax({
        type: "GET",
        url: Apipath + '/api/PatientMain/getfilesbyProgramid?Programid=' + programid +'&controlid='+Id+'&patientid='+_PatientId,
        contentType: 'application/json; charset=UTF-8',
        dataType: "json",
        async: false,
        success: function (result) {

            if (result != "" && result != null) {
                var filesArr = result.Files.split(',');
                var namesArr = result.FileNames.split(',');
                var selectedFiles = "";

                     selectedFiles = `<div class="label">File Names</div><ul class="file_uploaded_list file_uploaded_inputs">`;
                    for (var i = 0; i < filesArr.length; i++) {
                        selectedFiles += `<li><input class="form-control" data-file="${filesArr[i]}" placeholder="Enter file name here" type="text" value="${namesArr[i]}"/>`
                        selectedFiles += '<a href="/' + programUploadedPath + filesArr[i] + '" target="_blank">' + namesArr[i] + '</a><span onclick="removeProgramUpload(this)" class="removeUploadFile"><i class="fa fa-times"></i></span></li>';
                    }
                    selectedFiles += "</ul>";

               _programelement.find("#"+ Id).next().next().html("").append(selectedFiles);
            }
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}

    function previewOnfileChange(obj) {
    if (obj.files.length) {
        var fileData;
        if ( _programelement.find("input[type='file']").length) {
             _programelement.find("input[type='file']").each(function (index, item) {
                if ($(item).hasClass("program-control") || $(item).hasClass("base-control")) {
                    if ($(item).attr("id") == $(obj).attr("id")) {
                        switch (index) {
                            case 0:
                                fileData = null;
                                fileData = fileDataP1;
                                break;
                            case 1:
                                fileData = null;
                                fileData = fileDataP2;
                                break;
                            case 2:
                                fileData = null;
                                fileData = fileDataP3;
                                break;
                            case 3:
                                fileData = null;
                                fileData = fileDataP4;
                                break;
                            case 4:
                                fileData = null;
                                fileData = fileDataP5;
                                break;
                            case 5:
                                fileData = fileDataP6;
                                break;
                            case 6:
                                fileData = null;
                                fileData = fileDataP7;
                                break;
                            case 7:
                                fileData = null;
                                fileData = fileDataP8;
                                break;
                            case 8:
                                fileData = null;
                                fileData = fileDataP9;
                                break;
                            case 9:
                                fileData = null;
                                fileData = fileDataP10;
                                break;
                        }
                        if (fileData != null) {
                            return false;
                        }
                    }
                }
            });
        }

        var selectedFiles = $(obj).next().next().find("div.label").length ? "" : `<div class="label">File Names</div><ul class="file_uploaded_list file_uploaded_inputs">`;
        if (!$(obj).hasAttr("multiple")) {
            for (var key of fileData.keys()) {
                fileData.delete(key)
            }
            selectedFiles = `<div class="label">File Names</div><ul class="file_uploaded_list file_uploaded_inputs">`;
            $(obj).next().next().html("");
        }
        var iSize = "";
        var maxSize = $(obj).attr("data-filesize");
        var fileExtensons = $(obj).attr("data-accept").split(',');
        var filename = "";
        for (var i = 0; i < obj.files.length; i++) {
            if (fileData.get(obj.files[i].name) == null) {
                filename = obj.files[i].name;
                if (!fileExtensons.some(el => filename.toLowerCase().endsWith(el))) {
                    toastr.error("Invalid file. Valid formats are (" + fileExtensons.join(",").replace(/\./g, ' ') + ")");
                    obj.value = "";
                    return false;
                }
                iSize = (obj.files[i].size / 1024);
                iSize = (Math.round(iSize * 100) / 100);
                if (iSize > maxSize) {
                    toastr.error(obj.files[i].name + " Size is exceeded than " + maxSize + "kb");
                    obj.value = "";
                    return false;
                } else {
                    var file = URL.createObjectURL(obj.files[i]);
                    selectedFiles += `<li><input class="form-control" placeholder="Enter file name here" type="text" value="${obj.files[i].name.split(".").shift()}"/>`
                    selectedFiles += '<a href="' + file + '" target="_blank">' + obj.files[i].name + '</a><span data-remove="' + obj.files[i].name + '" onclick="removeProgramUpload(this)" class="removeUploadFile"><i class="fa fa-times"></i></span></li>';
                    fileData.append(obj.files[i].name, obj.files[i]);
                }
            }
        }
        if ($(obj).next().next().find("div.label").length) {
            $(obj).next().next().find("ul").append(selectedFiles);
        } else {
            selectedFiles += "</ul>";
            $(obj).next().next().html("").append(selectedFiles);
        }
      } else {
    }
}





    function uploadProgramFiles(Id, fileData, ProgramID) {

    var files = $("#" + Id).get(0).files;
    var fileNames = [];
    var savedfiles =[];
    $("#" + Id).next().next().find("input").each(function (index, item) {
        fileNames.push($(item).val());

        console.log(item)
        if ($(item).hasAttr("data-file")) {
            savedfiles.push($(item).attr("data-file"));
        }
    });
    if (files.length==0 && savedfiles.length == 0) {
        return;
    }
    if (fileNames.length == 0) {
        return;
    }
    fileData.append("ProgramId", ProgramID);
    fileData.append("ControlId", Id);
    fileData.append("Files", savedfiles.join(","));
    fileData.append("FileNames", fileNames.join(","));
    fileData.append("PatientId", PatientId);
    fileData.append("IsBaseField", $("#" + Id).hasClass("base-control"));

    $.ajax({
        type: "POST",
        url: "/program/UploadFiles",
        dataType: "json",
        contentType: false,
        processData: false,
        data: fileData,
        async: false,
        success: function (result, status, xhr) {
            fileData = new FormData();
        }, error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
            return false
        }
    });
}
   ///Save


      function saveProgramBasicInfo(_templateId, _templatetable, _programID) {
      var _Saved = $('#' + _programName + 'only').find('.btnprogramsave').attr('data-save');
      var fieldmodel = [];
      var isvalid = true;
      _programelement.find(".base-control,.program-control,input.custom-control-input").each(function (index, item) {
        if ($(item).is("input") && $(item).hasAttr("data-column")) {
            switch ($(item).attr("type")) {
                case "radio":
                case "checkbox":
                    if ($(item).closest(".inputContent").prev().hasClass("required-asterisk") && $(item).closest("div.inputContent").find("input:checked").length==0) {
                          isvalid = false;
                    }
                    break;
                case "file":
                    if ($(item).closest(".inputContent").prev().hasClass("required-asterisk")) {
                        if ($(item).next().next().find("input").length == 0) {
                            isvalid = false;
                        }
                    }
                    break;
                default:
                    if ($(item).closest(".inputContent").prev().hasClass("required-asterisk") && $(item).val().trim()=="") {
                        isvalid = false;
                    }
                    break;

            }
        }

        if ($(item).is("select") && $(item).hasAttr("data-column") && ($(item).val().trim() == "" || $(item).val() == "0")) {
            if ($(item).closest(".inputContent").prev().hasClass("required-asterisk")) {
            isvalid = false;
            }
        }
        if ($(item).is("textarea") && $(item).hasAttr("data-column")) {
            if ($(item).closest(".inputContent").prev().hasClass("required-asterisk") && $(item).summernote("isEmpty")) {
                isvalid = false;
            }
        }

    });
    if (!isvalid) {
        toastr.error("Field marked with asterisk(*) are mandatory");
        return;
    }
    if (_programelement.find("input[type='file']").length) {
        _programelement.find("input[type='file']").each(function (index, item) {
            if ($(item).hasAttr("data-column")) {
                if ($(item).hasClass("program-control") || $(item).hasClass("base-control")) {
                    var res = validateFiles($(item).attr("id"));
                    if (res == false) {
                        return false;
                    }
                }
            }
        });
    }
    if (_programelement.find("input.invaild-input").length) {
        return false;
    }
    fieldmodel.push({ ColumnName: "PatientID", FieldValue: _PatientId });
    fieldmodel.push({ ColumnName: "TemplateID", FieldValue: _templateId });
          fieldmodel.push({ ColumnName: "ProgramID", FieldValue: _programID });
          if (_IsSaved=='False') {
        fieldmodel.push({ ColumnName: "CreatedBy", FieldValue: _userID });
        fieldmodel.push({ ColumnName: "CreatedDate", FieldValue: getActualFullDate() });
    }
    fieldmodel.push({ ColumnName: "ModifiedBy", FieldValue: _userID });
    fieldmodel.push({ ColumnName: "ModifiedDate", FieldValue: getActualFullDate() });
    if (_programelement.find(".base-control").length) {
        fieldmodel.push({ ColumnName: "BaseTemplateID", FieldValue: basetemplateid });
           }
          

         _programelement.find("[type=text],[type=number],[type=file],[type=date]").each(function (index, item) {
          if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("program-control")) {
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
              }
            });
            _programelement.find("select").each(function (index, item) {
               if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("program-control")) {
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
        }
    });
     _programelement.find("[type=checkbox], [type=radio]").each(function (index, item) {
        if ($(item).hasAttr("data-column") && $(item).closest("div.inputContent").find("input:checked").length && $(item).closest(".form-group").hasClass("program-control")) {
            var selectedValues = $.map($(item).closest("div.inputContent").find("input:checked"), function (n, i) {
                return n.value;
            }).join(',');
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: selectedValues });
        }
    });
           _programelement.find("textarea").each(function (index, item) {
          if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("program-control")) {
            fieldmodel.push({ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
        }
    });
          
                    var model = {
                        ProgramID: _programID,
                        TableName: _templatetable,
                        ProgramCols: fieldmodel,
                        PatientID: _PatientId,
                        IsUpdated:(_Saved=="True")?true:false
                    }
                    $(".loaderOverlay").show();
                    $.ajax({
                        type: "POST",
                        url: Apipath + '/api/PatientMain/saveprogrambasicinfo',
                        contentType: 'application/json; charset=UTF-8',
                        data: JSON.stringify(model),
                        dataType: "json",
                        success: function (res) {
                            if (_programelement.find(".base-control").length) {
                                saveProgramBaseFieldInfo(_programID, _templateId,_Saved);
                                
                            }
                        
                            $(".loaderOverlay").hide();
                            toastr.success("Saved successfully");
                            $(".basic-info-actions").hide();
                            if (intervalStatus != "") {
                                clearInterval(intervalStatus);
                            }
                            if (_programelement.find("input[type='file']").length) {
                                _programelement.find("input[type='file']").each(function (index, item) {
                                    if ($(item).hasAttr("data-column")) {
                                        if ($(item).hasClass("program-control") || $(item).hasClass("base-control")) {

                                            switch (index) {
                                                case 0:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP1,_programID);
                                                    break;
                                                case 1:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP2,_programID);
                                                    break;
                                                case 2:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP3,_programID);
                                                    break;
                                                case 3:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP4,_programID);
                                                    break;
                                                case 4:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP5,_programID);
                                                    break;
                                                case 5:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP6,_programID);
                                                    break;
                                                case 6:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP7,_programID);
                                                    break;
                                                case 7:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP8,_programID);
                                                    break;
                                                case 8:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP9,_programID);
                                                    break;
                                                case 9:
                                                    uploadProgramFiles($(item).attr("id"), fileDataP10,_programID);
                                                    break;
                                            }
                                        }
                                    }
                                });
                            }
                            clearProgramFileData();

                            $('#' + _programName + 'only').find('.btnprogramsave').attr('data-save', 'True');
                            $('#a' + _programName).find('.check').removeClass('d-none')

                        },
                        error: function (e) {
                            toastr.error("Something happen Wrong");
                            $(".loaderOverlay").hide();
                        }
                    });

    }


    function saveProgramBaseFieldInfo(_programId,_templateId,_Saved) {

    var fieldmodel = [];
    fieldmodel.push({ ColumnName: "PatientID", FieldValue: _PatientId });
    fieldmodel.push({ ColumnName: "TemplateID", FieldValue: _templateId });
        fieldmodel.push({ ColumnName: "Programid", FieldValue: _programId });
        if (_IsSaved=='False') {
        fieldmodel.push({ ColumnName: "CreatedBy", FieldValue: _userID });
        fieldmodel.push({ ColumnName: "CreatedDate", FieldValue: getActualFullDate() });
    }
    fieldmodel.push({ ColumnName: "ModifiedBy", FieldValue: _userID });
    fieldmodel.push({ ColumnName: "ModifiedDate", FieldValue: getActualFullDate() });
    _programelement.find("[type=text],[type=number],[type=file],[type=date]").each(function (index, item) {
        if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("base-control")) {
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
        }
    });
    _programelement.find("select").each(function (index, item) {
        if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("base-control")) {
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
        }
    });
     _programelement.find("[type=checkbox],[type=radio]").each(function (index, item) {
        if ($(item).hasAttr("data-column") && $(item).closest("div.inputContent").find("input:checked").length && $(item).closest(".form-group").hasClass("base-control")) {
            var selectedValues = $.map($(item).closest("div.inputContent").find("input:checked"), function (n, i) {
                return n.value;
            }).join(',');
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: selectedValues });
        }
    });
    _programelement.find(" textarea").each(function (index, item) {
        if ($(item).hasAttr("data-column") && $(item).val() != "" && $(item).hasClass("base-control")) {
            fieldmodel.push({ ColumnName: $(item).attr("data-column"), FieldValue: $(item).val() });
        }
    });
        var model = {
           PatientId: _PatientId  ,
           TableName: "tbl_BaseProgramTemplate",
            ProgramCols: fieldmodel,
            IsUpdated:IsBasedataExist?true:false
    }
    $(".loaderOverlay").show();
    $.ajax({
        type: "POST",
        url: Apipath + '/api/PatientMain/SaveProgramFieldBaseValue',
        contentType: 'application/json; charset=UTF-8',
        data: JSON.stringify(model),
        dataType: "json",
        async: false,
        success: function (res) {

        },
        error: function (e) {
            toastr.error("Something happen Wrong");
            $(".loaderOverlay").hide();
        }
    });
}





function removeProgramUpload(obj) {
    $.confirm({
        icon: 'fas fa-exclamation-triangle',
        title: 'Confirm',
        content: 'Are you sure to delete this attachment ?',
        type: 'red',
        typeAnimated: true,
        buttons: {
            yes: {
                btnClass: 'btn-danger',
                action: function () {
                    var inputId = $(obj).parent().parent().parent().prev().prev('input[type="file"]').attr("id");
                    if (_programelement.find("input[type='file']").length && $(obj).hasAttr("data-remove")) {
                        _programelement.find("input[type='file']").each(function (index, item) {
                            if ($(item).hasAttr("data-column")) {
                                if ($(item).hasClass("program-control") || $(item).hasClass("base-control")) {
                                    if ($(item).attr("id") == inputId) {
                                        switch (index) {
                                            case 0:
                                                fileDataP1.delete($(obj).attr("data-remove"));;
                                                break;
                                            case 1:
                                                fileDataP2.delete($(obj).attr("data-remove"));
                                                break;
                                            case 2:
                                                fileDataP3.delete($(obj).attr("data-remove"));
                                                break;
                                            case 3:
                                                fileDataP4.delete($(obj).attr("data-remove"));
                                                break;
                                            case 4:
                                                fileDataP5.delete($(obj).attr("data-remove"));
                                                break;
                                            case 5:
                                                fileDataP6.delete($(obj).attr("data-remove"));
                                                break;
                                            case 6:
                                                fileDataP7.delete($(obj).attr("data-remove"));
                                                break;
                                            case 7:
                                                fileDataP8.delete($(obj).attr("data-remove"));
                                                break;
                                            case 8:
                                                fileDataP9.delete($(obj).attr("data-remove"));
                                                break;
                                            case 9:
                                                fileDataP10.delete($(obj).attr("data-remove"));
                                                break;
                                        }

                                    }
                                }
                            }
                            });
                    }
                    if ($(obj).parent().parent().find("li").length == 1) {
                        $(obj).parent().parent().parent().prev().prev('input[type="file"]').val('');
                        $(obj).parent().parent().parent().html("");
                    } else {
                        $(obj).closest("li").remove();
                    }
                }
            },
            no: {

            }
        },

    });
}


 function clearProgramFileData() {
 fileDataP1 = new FormData();
 fileDataP2 = new FormData();
 fileDataP3 = new FormData();
 fileDataP4 = new FormData();
 fileDataP5 = new FormData();
 fileDataP6 = new FormData();
 fileDataP7 = new FormData();
 fileDataP8 = new FormData();
 fileDataP9 = new FormData();
 fileDataP10 = new FormData();
}

    </script>

}
