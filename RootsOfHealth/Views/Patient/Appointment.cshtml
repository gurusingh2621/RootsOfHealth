@*@model RootsOfHealth.Models.PatientDetailBO*@
@{
    /**/

    ViewBag.Title = "Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/Content/css/jquery.timeselector.css" rel="stylesheet" />
<style>
    .ui-state-active, .ui-widget-content .ui-state-active, .ui-widget-header .ui-state-active, .ui-state-active.ui-button:hover {
        border: 1px solid #22baa0;
        background: #22baa0;
    }

    input#autoPatientList {
        width: 393px;
    }

    ul#ui-id-1 {
        z-index: 100001;
    }

    .d-flex {
        position: relative
    }

    .ui-menu {
        position: absolute;
        z-index: 9999;
    }

    ul#ui-id-1 {
        z-index: 100001;
        width: 373px !important;
        max-width: 373px !important;
        right: -155px !important;
        left: 0;
    }

    .ui-menu .ui-menu-item-wrapper {
        padding: 3px 15px 3px 15px;
    }

    .appointement-form select {
        width: 75.5% !important;
    }

    input#fltrautoPatientList {
        width: 100%;
    }

    .appointement-form select.form-control {
        width: 100% !important;
    }

    .appointement-form label {
        color: #4d4d4d;
        font-size: 13px;
        flex: 0 0 150px;
        max-width: 150px;
        padding-right: 15px;
    }

    #autoPatientList {
        width: 100% !important;
        position: relative
    }

    .modal-footer {
        float: right;
    }



    .fc-scroller::-webkit-scrollbar {
        width: 5px;
    }

    .fc-scroller::-webkit-scrollbar-track {
        background: transparent;
        ;
    }

    .fc-scroller::-webkit-scrollbar-thumb {
        background-color: #ccc;
        outline: 1px solid slategrey;
    }

    div#calendar .fc-row.fc-widget-header {
        border: 0;
    }
</style>
<!-- Content start here -->
<section id="content" class="responsive-container pt-0">
    <div class="inner-content " style="margin-top:10px;">
        <div class="container-fluid pl-0 pr-0">

            <div class="appointment">
                <!-- Button trigger modal -->

                <h2 class="lfttext">Patients Appointment</h2>
                @*<button type="button" class="btn btn-primary Appointment-btn" data-toggle="modal" data-target="#exampleModal">
                        Add Appointment
                    </button>*@
                <div class="button-set">
                    <button type="button" class="btn btn-primary Appointment-btn" onclick="addAppointment()">
                        Add Appointment
                    </button>

                    <button type="button" class="btn btn-primary Appointment-btn" onclick="addFilter()">
                        Filter
                    </button>
                </div>
                <div class="calendarBlock">
                    <div id='calendar' class="scroll" style="padding-right:8px;height: 470px;"></div>
                </div>
            </div>
        </div>

    </div>


</section>
@*</div>*@
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"> Appointment</h5>
                <button type="button" class="close" onclick="closeModel()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formAppointment" class="appointement-form">
                    <div class="form-group d-flex align-items-center">
                        <label for="staticEmail" class="m-0"> Date:</label>
                        <input type="text" class="form-control" id="datepicker" placeholder="">
                    </div>

                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword" class="m-0"> Start Time:</label>
                        <input type="text" class="form-control timepicker _time_picker" id="timepicker" placeholder="">
                    </div>

                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword" class="m-0"> End Time:</label>
                        <input type="text" class="form-control timepicker _time_picker" id="endtimepicker" placeholder="">
                    </div>

                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Select Patient</label>
                        <input id="autoPatientList" class="form-control" />

                        @*<select class="form-control select2" id="example1" name="state">

                                <option value="">John</option>
                                <option>Eric Jones</option>
                                <option>Elina</option>
                                <option>Thomas</option>

                            </select>*@


                    </div>
                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Type:</label>
                        <select tabindex="13" id="ddlTypeOfAppointment" class="form-control"></select>
                    </div>
                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Location:</label>
                        <select tabindex="13" id="ddlLocationOfAppointment" class="form-control"></select>
                    </div>

                    <div class="form-group mb-0 d-flex align-items-center">
                        <label for="inputPassword">Notes</label>
                        <textarea cols="10" id="txtNotes" rows="5" class="form-control"></textarea>
                        <input type="hidden" value="0" id="hdnAppointmentID" />
                        <input type="hidden" value="0" id="hdnPatientId" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="closeModel()" class="btn btn-secondary">Cancel</button>
                        <button type="button" onclick="saveAppointment()" class="btn btn-primary">Save</button>
                        <button type="button" id="DeleteAppointment" onclick="deleteAppointment()" class="btn btn-primary">Delete</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>


@*</div>*@

<!-- Content end here -->
<div class="modal fade" id="examplefilterModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"> Appointment</h5>
                <button type="button" class="close" onclick="closefiltermodel()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formAppointment" class="appointement-form">


                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Select Patient</label>
                        <input id="fltrautoPatientList" class="form-control" />
                        <input type="hidden" value="0" id="fltrhdnPatientId" />
                    </div>
                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Type:</label>
                        <select tabindex="13" id="fltrddlTypeOfAppointment" class="form-control"></select>
                    </div>
                    <div class="form-group d-flex align-items-center">
                        <label for="inputPassword">Location:</label>
                        <select tabindex="13" id="fltrddlLocationOfAppointment" class="form-control"></select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" onclick="closefiltermodel()" class="btn btn-secondary">Cancel</button>
                        <button type="button" onclick="getAllAppointments()" class="btn btn-primary">Search</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

@section scripts{

    <script src="https://code.jquery.com/ui/1.12.0-rc.2/jquery-ui.min.js"
            integrity="sha256-55Jz3pBCF8z9jBO1qQ7cIf0L+neuPTD1u7Ytzrp2dqo="
            crossorigin="anonymous"></script>
    <script src="~/Content/script/jquery.timeselector.js"></script>

    <script>

        var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]'
        var autoCompleteArray = [];                   // array to store all patients for autocomplete
        var AllAppointmentArray = [];

        var TypeArray = [];
        var LocationArray = [];


        $(document).ready(function () {
            autocomplete();
            GetTypeOfAppointments();
            GetLocationOfAppointments();
            $('#datepicker').datepicker({
                uiLibrary: 'bootstrap'
            });

            //$('#timepicker').timepicker({
            //    uiLibrary: 'materialdesign'
            //});

            $('._time_picker').timeselector({
                hours12: true
            })

        });



        //document.getElementsByClassName('fc-month-button').on('click', function () {
        //    alert();
        //    //calendar.prev();
        //});

        //$(".fc-month-button").click(function () {
        //    alert();
        //})


        // save new appointment
        function saveAppointment(appointmentInfo) {
            debugger;
            var data = {};

            if (typeof appointmentInfo == "undefined") {
                data = {
                    PatientAppointmentID: $("#hdnAppointmentID").val(),
                    AppointmentDate: $("#datepicker").val(),
                    AppointmentTime: $("#timepicker").val(),
                    PatientID: $("#hdnPatientId").val(),
                    Notes: $("#txtNotes").val(),
                    TypeOfAppointment: $('#ddlTypeOfAppointment').val(),
                    LocationOfAppointment: $('#ddlLocationOfAppointment').val(),
                    AppointmentEndTime: $("#endtimepicker").val()
                }
            }
            else {
                data = appointmentInfo;
            }

            if (data.AppointmentDate == "" || data.AppointmentTime == "" || data.PatientID == "" || data.Notes == "")
            {
                toastr.error("All fields are required");
                return false;
            }
            $.ajax({
                type: "POST",
                url: Apipath + '/api/PatientMain/AddPatientAppointment',
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    getAllAppointments();
                    $('#exampleModal').modal('hide');
                    emptyModel();
                    if (data.PatientAppointmentID == 0) {
                        toastr.success("Appointment saved successfully");
                    }
                    else {
                        toastr.success("Appointment update successfully");
                    }
                },
                error: function (err) {

                    toastr.error("Error while inserting data");
                }
            });
        }

        function TwentyFourHourTime(time) {
            debugger;
            var FinalTime = '';
            var SplitedTime = time.split(' ');

            if (SplitedTime[1] == 'PM') {
                var hm = SplitedTime[0].split(':');
                FinalTime =   hm[0] == "12" ? hm[0] + ":" + hm[1] : (parseInt(hm[0]) + 12).toString() + ":" + hm[1];
            }
            else if (SplitedTime[1] == 'AM') {
                var hm = SplitedTime[0].split(':');
                FinalTime = hm[0] == "12" ? "00:" + hm[1] : SplitedTime[0];
            }
            else {
                FinalTime = SplitedTime[0];
            }
            return FinalTime;
        }

       // delete appointment
        function deleteAppointment()

        {

           data = {
               PatientAppointmentID: parseInt($("#hdnAppointmentID").val()),
           }
            $.ajax({
                type: "POST",
                url: Apipath + '/api/PatientMain/DeletePatientAppointment',
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $('#calendar').fullCalendar('removeEvents', data.PatientAppointmentID);
                    toastr.success("Appointment Deleted successfully");
                    closeModel();
                },
                error: function (err) {

                    toastr.error("Error while Deleting data");
                }
            });

        }

        // empty modal fields
        function emptyModel() {
            $("#hdnAppointmentID").val(0);
            $("#datepicker").val("");
            $("#timepicker").val("");
            $("#endtimepicker").val("");
            $("#example1").val("");
            $("#txtNotes").val("");
            $("#hdnPatientId").val("");
            $("#autoPatientList").val("");
            $('#ddlTypeOfAppointment').val(0);
            $('#ddlLocationOfAppointment').val(0);
        }

        // get all appointments from backend
        function getAllAppointments() {
         //   var data = ;
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/GetAllPatientAppointment',
                data: {
                    PatientId: $('#fltrhdnPatientId').val(),
                    AppointmentType: $('#fltrddlTypeOfAppointment').val() == null ? 0 : $('#fltrddlTypeOfAppointment').val(),
                    AppointmentLocation: $('#fltrddlLocationOfAppointment').val() == null ? 0 : $('#fltrddlLocationOfAppointment').val(),
                    clinicid:'@Session["ClinicID"]'
                },
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    AllAppointmentArray = [];
                    AllAppointmentArray = result;
                    bindCalendarEvents(result);
                    closefiltermodel()
                },
                error: function (e) {
                    toastr.error("Error while inserting data");
                }
            });
        }

        // bind calendar events
        function bindCalendarEvents(data) {
            debugger;
            var eventData = [];
            $('#calendar').fullCalendar('removeEvents');
            for (var i = 0; i < data.length; i++) {
                var splitDateTime = data[i].AppointmentDate.split("T");
                var finalDateTime = splitDateTime[0] + "T" + TwentyFourHourTime(data[i].AppointmentTime);
                var finalEndDateTime = splitDateTime[0] + "T" + TwentyFourHourTime(data[i].AppointmentEndTime);
                let obj = autoCompleteArray.find(o => o.id === data[i].PatientID);
                var patientName = obj.label;
                eventData.push({ title: data[i].Notes, id: data[i].PatientAppointmentID, start: finalDateTime, end: finalEndDateTime, description: 'Patient :' + patientName });
                $('#calendar').fullCalendar('removeEvents', data[i].PatientAppointmentID);
            }
            var date = new Date();
            var startDate = date.getFullYear() + "/" + (date.getMonth() + 1) + "/" + date.getDate();
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
               defaultDate: startDate,
                editable: true,
                defaultView: 'month',
                allDaySlot: false,
                eventLimit: true, // allow "more" link when too many events
                eventRender: function (eventObj, $el) {
                    $el.popover({
                        title: eventObj.title,
                        content: eventObj.description,
                        trigger: 'hover',
                        placement: 'top',
                        container: 'body'
                    });
                },
              events: eventData,

                // event fire on click of any event
                eventClick: function (info) {
                    getAppointmentByid(info.id)
                    $("#DeleteAppointment").show();
                    $('#exampleModal').modal('show');
                },

                 // event fire on day click
                dayClick: function (date, allDay, jsEvent, view) {
                    debugger;
                    var date = new Date(date);
                    var tzDifference = date.getTimezoneOffset();
                    var offset = new Date(date.getTime() + tzDifference * 60 * 1000);
                    var strDate = (offset.getMonth() + 1) + "/" + offset.getDate() + "/" + offset.getFullYear();
                    var time = offset.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                    time = time.split(":");
                    if (time[0] == "10" || time[0] == "11" || time[0] == "12") {
                        time = time[0] + ":" + time[1];
                    }
                    else {
                        time = "0" + time[0] + ":" + time[1];
                    }
                    $("#datepicker").val(strDate);
                    $("#timepicker").val(time);
                    $("#DeleteAppointment").hide();
                    $('#exampleModal').modal('show');
                },

                // event fire on drag drop of appointment
                eventDrop: function (info) {
                   var data =  info.start.toISOString()
                    var date = new Date(data);
                    var strDate = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();
                    let obj = AllAppointmentArray.find(o => o.PatientAppointmentID === info.id);
                    var data = {
                        PatientAppointmentID: obj.PatientAppointmentID,
                        AppointmentDate: strDate,
                        AppointmentTime: obj.AppointmentTime,
                        PatientID: obj.PatientID,
                        Notes: obj.Notes,
                        AppointmentEndTime: obj.AppointmentEndTime
                    }
                    saveAppointment(data);
                }
            });

            $('#calendar').fullCalendar('removeEventSource', eventData);
            $('#calendar').fullCalendar('addEventSource', eventData);

            debugger;
            var data = $('#calendar');


        }

        $("#calendar .fc-month-button").on("click", function () {
            debugger;
            alert(1);
        });


        // close add edit appointment model
        function closeModel() {
            emptyModel();
            $('#exampleModal').modal('hide');
        }

        // open add appointment popup
        function addAppointment() {
            emptyModel();
            $("#DeleteAppointment").hide();
            $('#exampleModal').modal('show');
            $('#ddlTypeOfAppointment').val(0);
            $('#ddlLocationOfAppointment').val(0);
        }

        function GetTypeOfAppointments() {
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/getTypeOfAppointments',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $('#ddlTypeOfAppointment').html('');
                    var txt = '<option value="0">Select</option>';
                    for (var i = 0; i < result.length; i++) {
                        txt += '<option value="' + result[i].Id + '">' + result[i].TypeOfAppointments + '</option>';
                        TypeArray.push({ "Id": result[i].Id ,"Type": result[i].TypeOfAppointments });
                    }
                    $('#ddlTypeOfAppointment').html(txt);
                    $('#fltrddlTypeOfAppointment').html($('#ddlTypeOfAppointment').html());2
                },
                error: function (e) {
                    toastr.error("Something Happen Wrong");
                }
            });
        }

        function GetLocationOfAppointments() {

            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/getLocationOfAppointments',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $('#ddlLocationOfAppointment').html('');
                    var txt = '<option value="0">Select</option>';
                    for (var i = 0; i < result.length; i++) {
                        txt += '<option value="' + result[i].Id + '">' + result[i].LocationOfAppointment + '</option>';
                    }
                    $('#ddlLocationOfAppointment').html(txt);
                    $('#fltrddlLocationOfAppointment').html($('#ddlLocationOfAppointment').html());
                    LocationArray.push(result);
                },
                error: function (e) {
                    toastr.error("Something Happen Wrong");
                }
            });
        }
        // get appointment detail by appointment id
        function getAppointmentByid(id) {
            var data = {
                PatientAppointmentID: id
            };
            $.ajax({
                type: "GET",
                url: Apipath + '/api/PatientMain/GetPatientAppointmentByid',
                data: data,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    var date = new Date(result.AppointmentDate);
                    var strDate = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();
                    $("#datepicker").val(strDate);
                    $("#timepicker").val(result.AppointmentTime);
                    $("#endtimepicker").val(result.AppointmentEndTime);
                    $("#txtNotes").val(result.Notes);
                    $("#ddlTypeOfAppointment").val(result.TypeOfAppointment == null ? 0 : result.TypeOfAppointment);
                    $("#ddlLocationOfAppointment").val(result.LocationOfAppointment == null ? 0 : result.LocationOfAppointment);
                    $("#hdnAppointmentID").val(result.PatientAppointmentID);
                    $("#hdnPatientId").val(result.PatientID);
                    let obj = autoCompleteArray.find(o => o.id === result.PatientID);
                //    let abc = TypeArray.find(o => o.Id === result.TypeOfAppointment);
                    $("#autoPatientList").val(obj.value);
                },
                error: function (e) {
                    toastr.error("Error while inserting data");
                }
            });
        }



        //get all patient and bind autocomplete
        function autocomplete() {

            $.ajax({

                type: "GET",
                url: Apipath + '/api/PatientMain/GetAllPatient?clinicid=' +'@Session["ClinicID"]',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    getAllAppointments();
                    autoCompleteArray = [];
                    for (var i = 0; i < result.length; i++) {
                        var label = "";
                        label = result[i].FirstName;
                        if (result[i].MiddleName != "") {
                            label = label + " " + result[i].MiddleName;
                        }
                        else if (result[i].LastName != "") {
                            label = label + " " + result[i].LastName;
                        }
                        autoCompleteArray.push({ "label": label, "value": label, "id": result[i].PatientID })
                        $("#autoPatientList").autocomplete({

                            source: autoCompleteArray,
                            open: function () {
                                $("ul.ui-menu").width($(this).innerWidth());

                            },

                            change: function (event, ui) {
                                $("#hdnPatientId").val(ui.item.id);
                                $("#fltrhdnPatientId").val(ui.item.id);
                            }
                        });
                        $("#fltrautoPatientList").autocomplete({

                            source: autoCompleteArray,
                            open: function () {
                                $("ul.ui-menu").width($(this).innerWidth());

                            },

                            change: function (event, ui) {
                              $("#fltrhdnPatientId").val(ui.item.id);
                            }
                        });
                    }
                },
                error: function (e) {
                    toastr.error("Error while inserting data");
                }
            });
        }


        function addFilter() {
            $('#examplefilterModal').modal('show');
            //$('#ddlTypeOfAppointment').val(0);
            //$('#ddlLocationOfAppointment').val(0);
            //$('#autoPatientList').val('');
        }
        function closefiltermodel() {
            $('#examplefilterModal').modal('hide');
        }
    </script>


}




