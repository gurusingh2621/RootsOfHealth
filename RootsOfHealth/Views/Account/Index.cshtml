@model RootsOfHealth.Models.UserBO
@using RootsOfHealth.Commom;
@using RootsOfHealth.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var usersPerm = new Common().GetPermissionsByModuleId(Convert.ToInt32(Session["userid"]), Convert.ToInt32(PermissionModel.Module.Users));
    if (usersPerm.Where(x => x.CanList == false && (x.CanCreate != true && x.CanUpdate != true && x.CanDelete != true)).Any())
    {
        Response.Redirect(Url.Action("Display", "Dashboard", new { }));

    }
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<style>
    .appointment table td img {
        width: 30px;
        height: 30px;
        object-fit: cover;
        border-radius: 100%;
    }

    .btn-success:hover {
        background: #35c8af;
        border: 1px solid #35c8af;
    }

    .appointment table .btn-success {
        background: #22baa0;
        border-radius: 50px;
        border: 1px solid #22baa0;
        font-size: 13px;
        font-weight: 500;
        padding: 6px 20px;
        margin-right: 5px;
        line-height: normal;
    }

    .appointment table .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        border-radius: 50px;
        border: 1px solid #dc3545;
        font-size: 13px;
        font-weight: 500;
        padding: 6px 20px;
        margin-right: 5px;
        line-height: normal;
    }
</style>
<section id="content" class="responsive-container pt-0">
    <div class="inner-content mt-0">
        <div class="container-fluid pl-0 pr-0">
            <div class="appointment">
                <h2 class="mhead">Users</h2>
                @if (usersPerm.Where(x => x.CanCreate == true).Any())
                {
                    <p class="createbtn">
                        @Html.ActionLink("Create New", "AddUser", "Account", htmlAttributes: new { @class = "btn btn-success" })
                    </p>
                }
                    <table id="tblUser" class="display table table-hover table-striped table-bordered">
                        <thead>
                            <tr class="table-active">
                                <th>
                                    Image
                                </th>
                                <th>
                                    Name
                                </th>

                                <th>
                                   User Name
                                </th>

                                <th>
                                   Role
                                </th>
                                <th>
                                    Email
                                </th>
                                <th>
                                   Phone No
                                </th>

                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                           
                        </tbody>
                    </table>
                </div>

        </div>
    </div>
</section>
@section scripts{
    <script>
        $(document).ready(function () {
            //$("#tblUser").dataTable({
            //    scrollY: 'calc(100vh - 320px)',
            //    scrollCollapse: true,
            //            });
           
            bindUsersTable();
        });
        var canUpdate = "@usersPerm.Where(x => x.CanUpdate == true || x.CanList == true).Any()";
        var canDelete = "@usersPerm.Where(x => x.CanDelete == true).Any()";
        var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]';
        function Remove(id) {
            if (confirm("Are you sure,you want to delete.")) {
                var model = {
                    userid: id,
                    modifyby:@Session["userid"].ToString(),
                    ModifiedDate: new Date()
                };
                $.ajax({
                    type: "POST",
                    url: Apipath + '/api/PatientMain/removeuser',
                    data: JSON.stringify(model),
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    success: function (result) {
                        if (result != '') {
                            location.href = '/Account/Index';
                            toastr.success("delete successfully");

                        }
                        else {
                            toastr.error("Error while updating data");
                        }
                    },
                    error: function () {

                        toastr.error("Error while deleting data");
                    }
                });
            }
        }

        function bindUsersTable() {

            $("#tblUser").dataTable({
                "scrollY": 'calc(100vh - 320px)',
                "paging": true,
                "ordering": true,
                "filter": true,
                "destroy": true,
                "orderMulti": false,
                "serverSide": true,
                "Processing": true,
                "ajax":
                {
                    "url": "/Account/GetUsersData",
                    "type": "POST",
                    "dataType": "JSON"
                },
                "columns": [

                    {
                        "data": "Image",
                        "render": function (value) {
                            if (value == "") {
                                return "<img class='img - fluid' id='patientpic' src='/Files/profile.png' />"
                            }
                            else {
                                return '<img src="/Files/'+value+'" alt="Sample Image" />'
                            }
                        }
                    },
                    {
                        "data": null,
                        "render": function (data) {
                           return data.FirstName + ' ' + data.LastName;
                        }
                    },
                    { "data": "UserName" },
                    { "data": "RoleName" },
                    { "data": "Email" },
                    { "data": "PhoneNo" },
                    {
                        "data": null,
                        "render": function (data) {
                            
                            var html = "";
                            if (canUpdate == "True")
                             {
                                html += "<a href='/Account/EditUserDetails?username="+ data.UserName + "' class='btn btn-success label-fields'> <i class=''></i> Edit</a>";

                             }
                            if (canDelete == "True")
                            {
                                html += '<a href="#" class="btn btn-danger" onclick="Remove(' + data.UserID+')">Delete</a>';
                            }
                            return html;
                        }
                    }

                ]
            });

        }

    </script>
}