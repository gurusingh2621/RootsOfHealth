@model IEnumerable<RootsOfHealth.Models.UserRolesBO>
@using RootsOfHealth.Commom;
@using RootsOfHealth.Models;
@{
    ViewBag.Title = "Roles";
}
@{
    var rolesPerm = new Common().GetPermissionsByModuleId(Convert.ToInt32(Session["RoleId"]), Convert.ToInt32(PermissionModel.Module.RolesPermission));
    if (rolesPerm.Where(x => x.CanList == false && (x.CanCreate != true && x.CanUpdate != true && x.CanDelete != true)).Any())
    {
        Response.Redirect(Url.Action("Display", "Dashboard", new { }));

    }
}
<style>
    #PermissionAdmin-tab.nav-link.disabled-li1:after {
        border-left: 33px solid #808080 !important;
    }

    .col-lg-3.col-md-3.col-sm-3.col02 {
        padding-top: 6px;
    }

    .housing_button button.multiselect {
        background-color: transparent;
        color: #999;
        background: url(../images/chevron-arrow-down.svg) no-repeat;
        background-position: 95% 13px;
        background-size: 12px;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        line-height: normal;
        /* color: #818181; */
        width: 100% !important;
        padding: 5px 20px 5px 10px;
        border-radius: 0;
        border: 1px solid #e2e2e2;
        border-radius: 0;
        font-size: 14px;
        height: 42px;
        text-align: left;
    }

    .housing_button ul.multiselect-container.dropdown-menu.show {
        padding: 8px 2px;
        width: 100%;
    }

        .housing_button ul.multiselect-container.dropdown-menu.show li a {
            /* padding: 0px 8px; */
            font-style: normal;
            font-weight: normal;
            font-size: 12px;
            line-height: normal;
            color: #5d5d5d;
            height: 23px;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            padding: .25rem .5rem;
        }

    .housing_button ul.multiselect-container li label {
        margin-bottom: 0px;
    }



    .btn-success:hover {
        background: #35c8af;
        border: 1px solid #35c8af;
    }


    .appointment table .btn-success {
        background: #22baa0;
        border-radius: 50px;
        border: 1px solid #22baa0;
        font-size: 15px;
        font-weight: 500;
        padding: 5px 19px;
        margin-right: 5px;
    }

    .appointment table .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        border-radius: 50px;
        border: 1px solid #dc3545;
        font-size: 15px;
        font-weight: 500;
        padding: 5px 19px;
        margin-right: 5px;
    }
    #PermissionAdmin .modal-footer {
        margin: 10px 10px 0 0;
    }
</style>

<section id="content" class="responsive-container pt-0">
    <div class="inner-content  mt-0">
        <div class="container-fluid pl-0 pr-0">

            <div class="appointment">
                <div class="detail-heading d-flex">
                    <h2>Roles</h2>
                    <div class="detail-button ml-auto">
                        @if (rolesPerm.Where(x=>x.CanCreate == true).Any())
                        { 
                        <button type="button" onclick="ResetModal()" class="btn btn-success" data-toggle="modal" data-target="#addRoleModal">
                            Add Role
                        </button>
                        }
                    </div>
                </div>
                <div id="roleListID">
                    @Html.Partial("~/Views/Shared/Account/_RoleList.cshtml", Model)
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade permissionModal" id="addRoleModal" data-refresh="true" tabindex="0" role="dialog" aria-labelledby="addRoleModal" aria-hidden="true">
    <div class="modal-dialog mw-100 w-75 modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Add Role/Permission</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div hidden="hidden" id="hdnRoleid"></div>
                <div class="permissionsTabContent">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="ProfileAdmin-tab" data-toggle="tab" href="#ProfileAdmin" role="tab" aria-controls="ProfileAdmin" aria-selected="true">Role</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link disabled-li1" id="PermissionAdmin-tab" data-toggle="" href="#PermissionAdmin" role="tab" aria-controls="PermissionAdmin" aria-selected="false">Permission</a>
                        </li>

                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <!-- Profile Tab start here  -->
                        <div class="tab-pane fade show active" id="ProfileAdmin" role="tabpanel" aria-labelledby="ProfileAdmin-tab">
                            <div class="ProfileContent ProfileContentHeight">
                                <div class="profileRepeateRow">
                                    <div class="form-group">
                                        <label class="control-label col-md-2">Role</label>
                                        <div class="col-md00">
                                            <input id="rolename" class="form-control" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-2">Description</label>
                                        <div class="col-md00">
                                            <input id="description" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" id="rolemodalCancel" onclick="AddRoleModalClose()">Cancel</button>
                                @if (rolesPerm.Where(x => x.CanCreate == true).Any())
                                {
                                    <button type="button" class="btn btn-primary" onclick="SaveRole()" id="saveroleOnly">Proceed</button>
                                }
                                @if (rolesPerm.Where(x => x.CanUpdate == true).Any())
                                {
                                    <button type="button" class="btn btn-primary" onclick="UpdateRole()" hidden="hidden" id="updateroleOnly">Update</button>
                                }
                                </div>



                        </div>
                        <!-- Profile Tab end here  -->
                        <!-- Permission Tab Start here  -->
                        <div class="tab-pane fade" id="PermissionAdmin" role="tabpanel" aria-labelledby="PermissionAdmin-tab">
                            <div class="ProfileContent permissionScroll">

                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" onclick="AddRoleModalClose()">Cancel</button>
                                @if (rolesPerm.Where(x => x.CanCreate == true).Any())
                                {
                                    <button type="button" class="btn btn-primary" onclick="SaveRolePermission()" id="savepermission">Save</button>
                                }
                                @if (rolesPerm.Where(x => x.CanUpdate == true).Any())
                                {
                                    <button type="button" class="btn btn-primary" hidden="hidden" onclick="SaveRolePermission()" id="updatepermission">Update</button>
                                }
                                </div>
                        </div>
                        <!-- Permission Tab end here  -->

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div id="editSection">

</div>
@section scripts{
    <script>
            var Apipath = '@System.Configuration.ConfigurationManager.AppSettings["WebApi"]';
            function updateRoleList() {
                $.ajax({
                    type: "GET",
                    url:'/Account/UpdateRolesList',
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "html",
                    beforeSend: function () {
                        _Loader.StartLoader()
                    },
                    success: function (result) {
                        $("#roleListID").html('');
                        $("#roleListID").html(result);
                        $("#tblRole").dataTable({
                            scrollY: 'calc(100vh - 320px)',
                            scrollCollapse: true,
                        });

                    },
                    error: function () {
                        _Loader.StopLoader()
                    },
                    complete: function () {
                        _Loader.StopLoader()
                    }
                });
            }

            $(function () {
                $("#tblRole").dataTable({
                    scrollY: 'calc(100vh - 320px)',
                    scrollCollapse: true,
                });

                $("#rolename").keypress(function () {
                    $(this).removeClass('invalid-field');
                });

            });
       
        $('#PermissionAdmin-tab').click(function () {
            
                var roleId = $("#hdnRoleid").html();
                $.ajax({
                    type: "Get",
                    url: '/Account/GetRolePermissionsByRoleId?roleId=' + roleId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    beforeSend: function () {
                        _Loader.StartLoader()
                    },
                    success: function (data) {

                            $('#PermissionAdmin .ProfileContent').html('');
                            $('#PermissionAdmin .ProfileContent').html(data)
                            $("#addRoleModal").modal('show');


                    },
                    error: function (e) {
                        _Loader.StopLoader()

                    },
                    complete: function () {
                        _Loader.StopLoader()
                    }
                });

            })


            function Remove(id) {

                if (confirm("Are you sure,you want to delete.")) {
                    var d = new Date();


                    var model = {
                        roleid: id,
                        modifyby:@Session["userid"].ToString(),
                        ModifiedDate: new Date()
                    };
                    $.ajax({
                        type: "POST",
                        url: Apipath + '/api/PatientMain/removerole',
                        data: JSON.stringify(model),
                        contentType: 'application/json; charset=UTF-8',
                        dataType: "json",
                        success: function (result) {

                            if (result != -1) {
                                //location.href = '/Account/Roles';
                                updateRoleList();
                                toastr.success("delete successfully");

                            } else if (result == -1) {
                                toastr.error("Unable to delete.role currently in use.");
                            }
                            else {
                                toastr.error("Error while deleting data");
                            }
                        },
                        error: function () {

                            toastr.error("Error while deleting data");
                        }
                    });
                }
            }

            function ShowEdit(id) {

                $.ajax({
                    type: "Get",
                    url: Apipath + '/api/PatientMain/getrolebyid?roleid=' + id,
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    success: function (result) {

                        if (result != undefined || result != null) {
                            $("#saveroleOnly").attr('hidden', 'hidden');
                            $("#updateroleOnly").removeAttr('hidden');
                            $("#savepermission").attr('hidden', 'hidden');
                            $("#updatepermission").removeAttr('hidden');
                            //$("#editSection").html('');
                            //$("#editSection").html(result);
                            //$("#editRoleModal").modal('show');

                            $("#hdnRoleid").html(result.RoleID);
                            $("#rolename").val(result.RoleName);
                            $("#description").val(result.Description);

                        }
                        else {
                            toastr.error("Error while adding user");
                        }
                        $('#PermissionAdmin-tab').attr("data-toggle", "tab");
                        $('#PermissionAdmin-tab').removeClass("disabled-li1");
                        $("#ProfileAdmin").addClass("active show");
                        $("#ProfileAdmin-tab").addClass("active show");
                        $("#PermissionAdmin").removeClass("active show");
                        $("#PermissionAdmin-tab").removeClass("active show");
                        $("#addRoleModal").modal('show');

                    },
                    complete: function () {

                    },
                    error: function () {

                        toastr.error("Error while adding user");
                    }
                });
            }

            function AddRoleModalClose() {
                            $("#rolename").val('');
                            $("#description").val('');
                            $('#rolename').removeClass("invalid-field");
                            $("#addRoleModal").modal('hide');
                        }

            function SaveRole() {

                if ($("#rolename").val().trim() == '')
                {
                 toastr.error("Role name is required");
                 return false;
                }

             if ($('#rolename').val().trim() != '') {
                 $.ajax({
                     type: "GET",
                     url: Apipath + '/api/PatientMain/checkrolenameexist?rolename=' + $('#rolename').val() + '&roleid=' +0,
                     contentType: 'application/json; charset=UTF-8',
                     dataType: "json",
                     success: function (result) {

                         if (result != undefined && result != null && result != 0) {

                             toastr.error("rolename already exist.please try diffrent rolename.");
                             $('#rolename').addClass("invalid-field");
                             return false;


                         }
                         else
                         {

                                    var model = {
                                            "RoleName": $("#rolename").val(),
                                            "Description": $("#description").val(),
                                            "CreatedBy": @Session["userid"].ToString(),
                                            "ModifiedBy":@Session["userid"].ToString(),
                                            "CreatedDate": new Date(),
                                            "ModifiedDate": new Date()

                                    };

                                     $.ajax({
                                         type: "POST",
                                         url: Apipath + '/api/PatientMain/adduserrole',
                                         data: JSON.stringify(model),
                                         contentType: 'application/json; charset=UTF-8',
                                         dataType: "json",
                                         success: function (result) {

                                             if (result != '') {

                                                 $("#hdnRoleid").html(result);
                                                 $('#PermissionAdmin-tab').click();

                                                 $('#rolename').removeClass("invalid-field");
                                                 $('#PermissionAdmin-tab').attr("data-toggle", "tab");
                                                 $('#PermissionAdmin-tab').removeClass("disabled-li1");
                                                 $("#ProfileAdmin").removeClass("active show");
                                                 $("#ProfileAdmin-tab").removeClass("active show");
                                                 $("#PermissionAdmin").addClass("active show");
                                                 $("#PermissionAdmin-tab").addClass("active show");
                                             }
                                             else {
                                                 toastr.error("Error while adding role");
                                             }
                                         },
                                         error: function () {

                                             toastr.error("Error while adding role");
                                         }
                                     });

                         }


                     },
                     error: function () {

                         toastr.error("Error while checking Role");
                         return false;
                     }
                 });

             }

            }

            function UpdateRole() {


                        if ($("#rolename").val().trim() == '') {
                             toastr.error("Role name is required");
                             return false;
                        }

                        if ($('#rolename').val().trim() != '') {
                            $.ajax({
                                type: "GET",
                                url: Apipath + '/api/PatientMain/checkrolenameexist?rolename=' + $('#rolename').val() + '&roleid=' + parseInt($("#hdnRoleid").html() == '' ? 0 : $("#hdnRoleid").html()),
                                contentType: 'application/json; charset=UTF-8',
                                dataType: "json",
                                success: function (result) {

                                    if (result != undefined && result != null && result != 0) {

                                        toastr.error("rolename already exist.please try diffrent rolename.");
                                        $('#rolename').addClass("invalid-field");
                                        return false;


                                    } else {

                                        $('#rolename').removeClass("invalid-field");
                                                    var model = {
                                             "RoleID": parseInt($("#hdnRoleid").html()),
                                             "RoleName": $("#rolename").val(),
                                             "Description": $("#description").val(),
                                             "ModifiedBy":@Session["userid"].ToString(),
                                             "ModifiedDate": new Date()

                                         };
                                         $.ajax({
                                             type: "POST",
                                             url: Apipath + '/api/PatientMain/adduserrole',
                                             data: JSON.stringify(model),
                                             contentType: 'application/json; charset=UTF-8',
                                             dataType: "json",
                                             success: function (result) {
                                                 if (result != '') {

                                                     $("#ProfileAdmin").removeClass("active show");
                                                     $("#PermissionAdmin").addClass("active show");
                                                     $("#ProfileAdmin-tab").removeClass("active show");
                                                     $("#PermissionAdmin-tab").addClass("active show");
                                                     $('#PermissionAdmin-tab').click();
                                                     toastr.success("Role updated successfully");
                                                     updateRoleList();



                                                 }
                                                 else {
                                                     toastr.error("Error while adding user");
                                                 }
                                             },
                                             error: function () {

                                                 toastr.error("Error while adding user");
                                             }
                                         });
                                    }


                                },
                                error: function () {

                                    toastr.error("Error while checking Role");
                                    return false;
                                }
                            });

                        }

             }

            function ResetModal() {

                            $("#hdnRoleid").html('');
                            $("#rolename").val('');
                            $("#description").val('');

                            $('#rolename').removeClass("invalid-field");
                            $("#ProfileAdmin").addClass("active show");
                            $("#ProfileAdmin-tab").addClass("active show");
                            $("#PermissionAdmin").removeClass("active show");
                            $("#PermissionAdmin-tab").removeClass("active show");
                            $('#PermissionAdmin-tab').attr("data-toggle", "");
                            $('#PermissionAdmin-tab').addClass("disabled-li1");

                                        $("#saveroleOnly").removeAttr('hidden');
                                        $("#updateroleOnly").attr('hidden', 'hidden');
                                        $("#savepermission").removeAttr('hidden');
                                        $("#updatepermission").attr('hidden', 'hidden');

                            $("#housing").multiselect("clearSelection");
                            $("#housing").multiselect('refresh');

                            $("#financial").multiselect("clearSelection");
                            $("#financial").multiselect('refresh');

                            $("#employment").multiselect("clearSelection");
                            $("#employment").multiselect('refresh');

                            $("#communication").multiselect("clearSelection");
                            $("#communication").multiselect('refresh');

                            $("#social").multiselect("clearSelection");
                            $("#social").multiselect('refresh');

                            $("#legal").multiselect("clearSelection");
                            $("#legal").multiselect('refresh');

                            $("#substance").multiselect("clearSelection");
                            $("#substance").multiselect('refresh');

                            $("#mental").multiselect("clearSelection");
                            $("#mental").multiselect('refresh');

                            $("#foodaccess").multiselect("clearSelection");
                            $("#foodaccess").multiselect('refresh');

                            $("#program").multiselect("clearSelection");
                            $("#program").multiselect('refresh');

                            $("#appointment").multiselect("clearSelection");
                            $("#appointment").multiselect('refresh');

                            $("#users").multiselect("clearSelection");
                            $("#users").multiselect('refresh');

                            $("#role").multiselect("clearSelection");
                            $("#role").multiselect('refresh');

                            $("#authorization").multiselect("clearSelection");
                            $("#authorization").multiselect('refresh');
                            $("#lookupfield").multiselect("clearSelection");
                            $("#lookupfield").multiselect('refresh');
                            $("#formscheduling").multiselect("clearSelection");
                            $("#formscheduling").multiselect('refresh');
                            $("#potientialpatient").multiselect("clearSelection");
                            $("#potientialpatient").multiselect('refresh');
                            $("#notes").multiselect("clearSelection");
                            $("#notes").multiselect('refresh');

            }
            // function to save role permissions
            function SaveRolePermission() {

                //----------------
                var i = 0;
                var permissionArray = [];
                $.each($('.ProfileContent select'), function () {
                    _objPermission = new Object();
                    var hdnElem = $(this).prev();
                    var permElem = hdnElem.prev();
                    _objPermission.PermissionId = parseInt(permElem.val());

                    if (hdnElem.hasClass("hdnClientId")) {
                        _objPermission.ClientFormId = parseInt(hdnElem.val())
                        _objPermission.ModuleId = 0;
                    }
                    else {
                        _objPermission.ModuleId = hdnElem.val();
                        _objPermission.ClientFormId = 0;
                    }

                    var selectedoptions = $('select#option_' + i + ' option:selected')
                        .toArray().map(item => item.text).toString();



                    var res;
                    if (selectedoptions != undefined) {
                        res = selectedoptions.split(",");
                    }

                    _objPermission.CanCreate = false;
                    _objPermission.CanUpdate = false;
                    _objPermission.CanDelete = false;
                    _objPermission.CanList = false;

                    $.each(res, function (index, value) {

                        switch ($.trim(value)) {
                            case 'Add':
                                _objPermission.CanCreate = true;
                                break;
                            case 'Edit':
                                _objPermission.CanUpdate = true;
                                break;
                            case 'Delete':
                                _objPermission.CanDelete = true;
                                break;
                            case 'View':
                                _objPermission.CanList = true;
                                break;
                        }

                    });
                    permissionArray.push(_objPermission);
                    i++;
                });



                var request = {
                    RoleId: parseInt($("#hdnRoleid").html()),
                    CreatedBy :parseInt(@Session["userid"].ToString()),
                    RolePermissionsData: permissionArray

                };

    //----------------

                $.ajax({
                    type: "POST",
                    url: Apipath + '/api/PatientMain/SaveUserRolePermissions',
                    data: JSON.stringify(request),
                    contentType: 'application/json; charset=UTF-8',
                    dataType: "json",
                    beforeSend: function () {
                        _Loader.StartLoader()
                    },
                    success: function (result) {
                        if (result != '') {
                            toastr.success("Permission updated successfully");

                            $("#addRoleModal").modal('hide');


                        }
                        else {
                            toastr.error("Error while updating Permission");
                        }
                    },
                    error: function () {
                        _Loader.StopLoader()
                        toastr.error("Error while updating Permission");
                    },
                    complete: function () {
                        _Loader.StopLoader()
                    }
                });
            }
    </script>
}
